<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>my soul your beats</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mzeht.com/"/>
  <updated>2017-05-28T08:39:08.000Z</updated>
  <id>http://mzeht.com/</id>
  
  <author>
    <name>mzeht</name>
    <email>mzeht@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Gitflow 工作流</title>
    <link href="http://mzeht.com/2017/05/28/Gitflow-%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    <id>http://mzeht.com/2017/05/28/Gitflow-工作流/</id>
    <published>2017-05-28T08:14:36.000Z</published>
    <updated>2017-05-28T08:39:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>##简介</p>
<p><img src="http://nvie.com/img/git-model@2x.png" alt=""><br>[slide]</p>
<ol>
<li><code>feature</code>（多个、玫红）。主要是自己玩了，差不多的时候要合并回develop去。从不与master交互。</li>
<li><code>develop</code>（1个、黄色）。主要是和feature以及release交互。</li>
<li><code>release</code>（同一时间1个、绿色）。总是基于develop，最后又合并回develop。当然对应的tag跑到master这边去了。生命周期很短，只是为了发布</li>
<li><code>hotfix</code>（同一时间1个、红色）。总是基于master，并最后合并到master和develop。生命周期较短，用了修复bug或小粒度修改发布。</li>
<li><code>master</code>（1个蓝色）。没有什么东西，仅是一些关联的tag，因从不在master上开发。</li>
</ol>
<p>[slide]</p>
<ol>
<li><code>master</code>和<code>develop</code>都具有象征意义。master分支上的代码总是稳定的（stable build），随时可以发布出去。develop上的代码总是从feature上合并过来的，可以进行Nightly Builds，但不直接在develop上进行开发。当develop上的feature足够多以至于可以进行新版本的发布时，可以创建release分支</li>
<li><code>release</code>分支基于develop，进行很简单的修改后就被合并到master，并打上tag，表示可以发布了。紧接着release将被合并到develop；此时develop可能往前跑了一段，出现合并冲突，需要手工解决冲突后再次合并。这步完成后就删除release分支。</li>
<li>当从已发布版本中发现bug要修复时，就应用到<code>hotfix</code>分支了。hotfix基于master分支，完成bug修复或紧急修改后，要merge回master，打上一个新的tag，并merge回develop，删除hotfix分支。</li>
<li>由此可见release和hotfix的生命周期都较短，master/develop虽然总是存在但却不常使用。</li>
</ol>
<p>[slide]</p>
<h2 id="分支详解"><a href="#分支详解" class="headerlink" title="分支详解"></a>分支详解</h2><h3 id="主分支-（Historical-Branches）"><a href="#主分支-（Historical-Branches）" class="headerlink" title="主分支 （Historical Branches）"></a>主分支 （Historical Branches）</h3><p><img src="http://upload-images.jianshu.io/upload_images/54009-70ef16000c0832b0.jpg" alt=""></p>
<ol>
<li>主分支是所有开发活动的核心分支。所有的开发活动产生的输出物最终都会反映到主分支的代码中。主分支分为master分支和development分支。</li>
</ol>
<p>[slide]</p>
<h4 id="master-分支"><a href="#master-分支" class="headerlink" title="master 分支"></a>master 分支</h4><p>master分支上存放的应该是随时可供在生产环境中部署的代码（Production Ready state）。当开发活动告一段落，产生了一份新的可供部署的代码时，master分支上的代码会被更新。同时，每一次更新，最好添加对应的版本号标签（TAG）。<br>[slide]</p>
<h4 id="develop分支"><a href="#develop分支" class="headerlink" title="develop分支"></a>develop分支</h4><p>develop分支是保存当前最新开发成果的分支。通常这个分支上的代码也是可进行每日夜间发布的代码（Nightly build）。因此这个分支有时也可以被称作整合分支（integration branch）。</p>
<p>[slide]</p>
<h2 id="辅助分支"><a href="#辅助分支" class="headerlink" title="辅助分支"></a>辅助分支</h2><p><img src="http://upload-images.jianshu.io/upload_images/54009-7265a72025bddb1a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ol>
<li>用于开发新功能时所使用的feature分支；</li>
<li>用于辅助版本发布的release分支；</li>
<li>用于修正生产代码中的缺陷的hotfix分支。</li>
</ol>
<p>[slide]</p>
<h3 id="feature-分支"><a href="#feature-分支" class="headerlink" title="feature 分支"></a>feature 分支</h3><p>使用规范：</p>
<ol>
<li>可以从develop分支发起feature分支</li>
<li>代码必须合并回develop分支</li>
<li>feature分支（有时也可以被叫做“topic分支”）通常是在开发一项新的软件功能的时候使用，这个分支上的代码变更最终合并回develop分支或者干脆被抛弃掉（例如实验性且效果不好的代码变更）</li>
</ol>
<p>[slide]</p>
<h3 id="release分支"><a href="#release分支" class="headerlink" title="release分支"></a>release分支</h3><p><img src="http://upload-images.jianshu.io/upload_images/54009-be502bd4658d9d79.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt=""></p>
<ol>
<li>可以从develop分支派生</li>
<li>必须合并回develop分支和master分支</li>
<li>分支命名惯例：release-*</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;##简介&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://nvie.com/img/git-model@2x.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;[slide]&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;feature&lt;/code&gt;（多个、玫红）。主要是自己玩了，差不多的时候要合并
    
    </summary>
    
      <category term="文档" scheme="http://mzeht.com/categories/documents/"/>
    
    
  </entry>
  
  <entry>
    <title>jenkins项目打包发布配置(srpingboot-jar,war,apk)</title>
    <link href="http://mzeht.com/2017/05/28/jenkins%E5%90%8E%E5%8F%B0%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E5%8F%91%E5%B8%83%E9%85%8D%E7%BD%AE-srpingboot-jar-war/"/>
    <id>http://mzeht.com/2017/05/28/jenkins后台项目打包发布配置-srpingboot-jar-war/</id>
    <published>2017-05-28T08:03:37.000Z</published>
    <updated>2017-05-28T08:43:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="两种不同打包"><a href="#两种不同打包" class="headerlink" title="两种不同打包"></a>两种不同打包</h2><p>jar类 springboot项目</p>
<ol>
<li>springboot框架</li>
<li>生成jar包</li>
<li>内置tomcat</li>
<li>运行环境 java</li>
</ol>
<p>war类 springmvc项目</p>
<ol>
<li>springmvc</li>
<li>生成war包</li>
<li>需要外部tomcat</li>
</ol>
<h2 id="jar类配置"><a href="#jar类配置" class="headerlink" title="jar类配置"></a>jar类配置</h2><ol>
<li>配置代码分支来源</li>
<li>打包</li>
<li>传输</li>
<li>启动</li>
</ol>
<h3 id="配置代码"><a href="#配置代码" class="headerlink" title="配置代码"></a>配置代码</h3><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/33852371.jpg" alt=""></p>
<h3 id="传输"><a href="#传输" class="headerlink" title="传输"></a>传输</h3><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/21535521.jpg" alt=""></p>
<h3 id="邮件"><a href="#邮件" class="headerlink" title="邮件"></a>邮件</h3><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">#!/bin/sh</div><div class="line">#defined</div><div class="line">ID=`ps -ef|grep &quot;official-web-0.0.1-SNAPSHOT&quot; | grep &quot;java&quot;| awk &apos;&#123;print $2&#125;&apos;`</div><div class="line">echo $ID</div><div class="line">kill -9 $ID</div><div class="line">echo &quot;kill $ID finish&quot;</div><div class="line">nohup java -jar official-web-0.0.1-SNAPSHOT.jar &amp;</div><div class="line">....</div></pre></td></tr></table></figure>
<p>[slide]</p>
<h2 id="war类配置"><a href="#war类配置" class="headerlink" title="war类配置"></a>war类配置</h2><ol>
<li>配置代码分支来源</li>
<li>打包</li>
<li>传输</li>
<li>启动</li>
</ol>
<p>[slide]</p>
<h3 id="配置代码-1"><a href="#配置代码-1" class="headerlink" title="配置代码"></a>配置代码</h3><h3 id="打包-1"><a href="#打包-1" class="headerlink" title="打包"></a>打包</h3><h3 id="传输-1"><a href="#传输-1" class="headerlink" title="传输"></a>传输</h3><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"># !bin/sh</div><div class="line"># jenkins传输war包位置</div><div class="line">jenkins_dir=&quot;/root/jenkinsproject&quot;</div><div class="line"># war_name=&quot;appservice.war&quot;</div><div class="line">#项目名称</div><div class="line">project_name=&quot;appservice&quot;</div><div class="line">#tomcat路径</div><div class="line">tomcat_dir=&quot;/usr/tomcat/apache-tomcat-7.0.42&quot;</div><div class="line"># 当前脚本名称,查找进称号需要排除</div><div class="line">shell_name=&quot;appservice-deploy.sh&quot;</div><div class="line">pid=`ps -ef | grep $tomcat_dir | grep -v $shell_name | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</div><div class="line">echo &quot;old pid:&quot;.$pid</div><div class="line">if test &quot;$pid&quot;</div><div class="line">then</div><div class="line">  echo &quot;kill old pid: $pid ing&quot;</div><div class="line">  kill -9 $pid</div><div class="line">  # 睡眠5s</div><div class="line">  sleep 20s</div><div class="line">else</div><div class="line">        echo &quot;not find old pid&quot;</div><div class="line">fi</div><div class="line">#删除旧的war包和生成文件夹</div><div class="line">rm -rf $tomcat_dir/webapps/$project_name*</div><div class="line"># 拷贝新的war包</div><div class="line">cp $jenkins_dir/$project_name.war  $tomcat_dir/webapps</div><div class="line">#启动tomcat</div><div class="line">sh $tomcat_dir/bin/startup.sh</div><div class="line">sleep 10s</div><div class="line"># 检查启动</div><div class="line">newpid=`ps -ef | grep $tomcat_dir | grep -v $shell_name | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</div><div class="line">if test &quot;$newpid&quot;</div><div class="line">then</div><div class="line">        echo &quot;new pid:&quot;.$newpid</div><div class="line">#    刷新nginx</div><div class="line">    /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf -s reload</div><div class="line">        exit</div><div class="line">else</div><div class="line">        echo &quot;not find new pid&quot;</div><div class="line">        exit 1</div><div class="line">fi</div><div class="line">....</div></pre></td></tr></table></figure>
<p>[slide]</p>
<h2 id="apk类配置"><a href="#apk类配置" class="headerlink" title="apk类配置"></a>apk类配置</h2><ol>
<li>配置代码分支来源</li>
<li>打包</li>
<li>传输</li>
</ol>
<p>[slide]</p>
<h3 id="配置代码-2"><a href="#配置代码-2" class="headerlink" title="配置代码"></a>配置代码</h3><h3 id="打包-2"><a href="#打包-2" class="headerlink" title="打包"></a>打包</h3><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/67349864.jpg" alt=""></p>
<h3 id="传输-2"><a href="#传输-2" class="headerlink" title="传输"></a>传输</h3><h3 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">applicationVariants.all &#123; variant -&gt;</div><div class="line">    if (variant.buildType.name.equals(&apos;release&apos;)) &#123;</div><div class="line">        variant.outputs.each &#123; output -&gt;</div><div class="line">            def outputFile = output.outputFile</div><div class="line">            if (outputFile != null &amp;&amp; outputFile.name.endsWith(&apos;.apk&apos;)) &#123;</div><div class="line">                def fileName = &quot;baimimobile_v$&#123;defaultConfig.versionName&#125;_$&#123;buildTime()&#125;.apk&quot;</div><div class="line">                output.outputFile = new File(outputFile.parent, fileName)</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">BUILD SUCCESSFUL</div><div class="line"></div><div class="line">Total time: 1 mins 27.55 secs</div><div class="line">Build step &apos;Invoke Gradle script&apos; changed build result to SUCCESS</div><div class="line">Root directory to find files to upload : /Users/wpmac/.jenkins/workspace/baimi-mobile-android</div><div class="line">found remote files : [app/build/outputs/apk/baimimobile_v1.1.6_2017-05-18_1126228.apk]</div><div class="line">Deploying archive app/build/outputs/apk/baimimobile_v1.1.6_2017-05-18_1126228.apk to fir.im (description=&quot;ecf02a33f60e3ad65c2bc0cae240c7f1&quot;, groups=&quot;&quot;)</div><div class="line">You can use ENV var $FIR_DOWNLOAD_URL in other plugins.</div><div class="line">Deployment to fir.im Done.</div><div class="line"> Your app short url: http://fir.im/baimimobile</div><div class="line">Finished: SUCCESS</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;两种不同打包&quot;&gt;&lt;a href=&quot;#两种不同打包&quot; class=&quot;headerlink&quot; title=&quot;两种不同打包&quot;&gt;&lt;/a&gt;两种不同打包&lt;/h2&gt;&lt;p&gt;jar类 springboot项目&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;springboot框架&lt;/li&gt;
&lt;li&gt;生
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
  </entry>
  
  <entry>
    <title>greendao 数据库升级</title>
    <link href="http://mzeht.com/2017/05/28/greendao-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8D%87%E7%BA%A7/"/>
    <id>http://mzeht.com/2017/05/28/greendao-数据库升级/</id>
    <published>2017-05-28T07:47:26.000Z</published>
    <updated>2017-05-28T08:43:19.000Z</updated>
    
    <content type="html"><![CDATA[<p>创建一个数据库帮助类</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">public class MyOpenHelper extends DaoMaster.OpenHelper&#123;</div><div class="line">    public MyOpenHelper(Context context, String name) &#123;</div><div class="line">        super(context, name);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public MyOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory) &#123;</div><div class="line">        super(context, name, factory);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onUpgrade(Database db, int oldVersion, int newVersion) &#123;</div><div class="line">        L.d(&quot;db version update from &quot; + oldVersion + &quot; to &quot; + newVersion);</div><div class="line">        switch (oldVersion)&#123;</div><div class="line">            case 1:</div><div class="line">                CollectAdditionDao.createTable(db,true);</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>修改greenDao的版本号，在内层的gradle中的buildTypes节点下添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">greendao &#123;</div><div class="line">       // schemaVersion 1</div><div class="line">       schemaVersion 2//@add 增值服务表</div><div class="line">       targetGenDir &apos;src/main/java&apos;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>更新方式</p>
<p>1.删除再新建</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * 删除原表重新再建立一个表</div><div class="line">     * @param db</div><div class="line">     */</div><div class="line">    public void dropAndCreate(Database db)&#123;</div><div class="line">        DaoMaster.dropAllTables(db, true);</div><div class="line">        DaoMaster.createAllTables(db, false);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>2.备份数据库，建立新数据库，然后将备份导入</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * 备份还原</div><div class="line">     * @param db</div><div class="line">     * @param daoClasses</div><div class="line">     */</div><div class="line">    public void migrate(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</div><div class="line">        generateTempTables(db, daoClasses);</div><div class="line">        DaoMaster.dropAllTables(db, true);</div><div class="line">        DaoMaster.createAllTables(db, false);</div><div class="line">        restoreData(db, daoClasses);</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * 数据库备份</div><div class="line">     * @param db</div><div class="line">     * @param daoClasses</div><div class="line">     */</div><div class="line">    private void generateTempTables(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</div><div class="line">        for (int i = 0; i &lt; daoClasses.length; i++) &#123;</div><div class="line">            DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</div><div class="line"></div><div class="line">            String divider = &quot;&quot;;</div><div class="line">            String tableName = daoConfig.tablename;</div><div class="line">            String tempTableName = daoConfig.tablename.concat(&quot;_TEMP&quot;);</div><div class="line">            ArrayList&lt;String&gt; properties = new ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">            StringBuilder createTableStringBuilder = new StringBuilder();</div><div class="line"></div><div class="line">            createTableStringBuilder.append(&quot;CREATE TABLE &quot;).append(tempTableName).append(&quot; (&quot;);</div><div class="line"></div><div class="line">            for (int j = 0; j &lt; daoConfig.properties.length; j++) &#123;</div><div class="line">                String columnName = daoConfig.properties[j].columnName;</div><div class="line"></div><div class="line">                if (getColumns(db, tableName).contains(columnName)) &#123;</div><div class="line">                    properties.add(columnName);</div><div class="line"></div><div class="line">                    String type = null;</div><div class="line"></div><div class="line">                    try &#123;</div><div class="line">                        type = getTypeByClass(daoConfig.properties[j].type);</div><div class="line">                    &#125; catch (Exception exception) &#123;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    createTableStringBuilder.append(divider).append(columnName).append(&quot; &quot;).append(type);</div><div class="line"></div><div class="line">                    if (daoConfig.properties[j].primaryKey) &#123;</div><div class="line">                        createTableStringBuilder.append(&quot; PRIMARY KEY&quot;);</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    divider = &quot;,&quot;;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            createTableStringBuilder.append(&quot;);&quot;);</div><div class="line"></div><div class="line">            db.execSQL(createTableStringBuilder.toString());</div><div class="line"></div><div class="line">            StringBuilder insertTableStringBuilder = new StringBuilder();</div><div class="line"></div><div class="line">            insertTableStringBuilder.append(&quot;INSERT INTO &quot;).append(tempTableName).append(&quot; (&quot;);</div><div class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</div><div class="line">            insertTableStringBuilder.append(&quot;) SELECT &quot;);</div><div class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</div><div class="line">            insertTableStringBuilder.append(&quot; FROM &quot;).append(tableName).append(&quot;;&quot;);</div><div class="line"></div><div class="line">            db.execSQL(insertTableStringBuilder.toString());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * 数据库恢复</div><div class="line">     * @param db</div><div class="line">     * @param daoClasses</div><div class="line">     */</div><div class="line">    private void restoreData(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</div><div class="line">        for (int i = 0; i &lt; daoClasses.length; i++) &#123;</div><div class="line">            DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</div><div class="line"></div><div class="line">            String tableName = daoConfig.tablename;</div><div class="line">            String tempTableName = daoConfig.tablename.concat(&quot;_TEMP&quot;);</div><div class="line">            ArrayList&lt;String&gt; properties = new ArrayList();</div><div class="line"></div><div class="line">            for (int j = 0; j &lt; daoConfig.properties.length; j++) &#123;</div><div class="line">                String columnName = daoConfig.properties[j].columnName;</div><div class="line"></div><div class="line">                if (getColumns(db, tempTableName).contains(columnName)) &#123;</div><div class="line">                    properties.add(columnName);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            StringBuilder insertTableStringBuilder = new StringBuilder();</div><div class="line"></div><div class="line">            insertTableStringBuilder.append(&quot;INSERT INTO &quot;).append(tableName).append(&quot; (&quot;);</div><div class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</div><div class="line">            insertTableStringBuilder.append(&quot;) SELECT &quot;);</div><div class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</div><div class="line">            insertTableStringBuilder.append(&quot; FROM &quot;).append(tempTableName).append(&quot;;&quot;);</div><div class="line"></div><div class="line">            StringBuilder dropTableStringBuilder = new StringBuilder();</div><div class="line"></div><div class="line">            dropTableStringBuilder.append(&quot;DROP TABLE &quot;).append(tempTableName);</div><div class="line"></div><div class="line">            db.execSQL(insertTableStringBuilder.toString());</div><div class="line">            db.execSQL(dropTableStringBuilder.toString());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    private String getTypeByClass(Class&lt;?&gt; type) throws Exception &#123;</div><div class="line">        if (type.equals(String.class)) &#123;</div><div class="line">            return &quot;TEXT&quot;;</div><div class="line">        &#125;</div><div class="line">        if (type.equals(Long.class) || type.equals(Integer.class) || type.equals(long.class)) &#123;</div><div class="line">            return &quot;INTEGER&quot;;</div><div class="line">        &#125;</div><div class="line">        if (type.equals(Boolean.class)) &#123;</div><div class="line">            return &quot;BOOLEAN&quot;;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        Exception exception =</div><div class="line">                new Exception(CONVERSION_CLASS_NOT_FOUND_EXCEPTION.concat(&quot; - Class: &quot;).concat(type.toString()));</div><div class="line">        throw exception;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private static List&lt;String&gt; getColumns(Database db, String tableName) &#123;</div><div class="line">        List&lt;String&gt; columns = new ArrayList&lt;&gt;();</div><div class="line">        Cursor cursor = null;</div><div class="line">        try &#123;</div><div class="line">            cursor = db.rawQuery(&quot;SELECT * FROM &quot; + tableName + &quot; limit 1&quot;, null);</div><div class="line">            if (cursor != null) &#123;</div><div class="line">                columns = new ArrayList&lt;&gt;(Arrays.asList(cursor.getColumnNames()));</div><div class="line">            &#125;</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            Log.v(tableName, e.getMessage(), e);</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; finally &#123;</div><div class="line">            if (cursor != null) cursor.close();</div><div class="line">        &#125;</div><div class="line">        return columns;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>3.对比表差异，向原表中直接插入column</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">     * 对比差异，在原表中直接添加column,赞不做删除操作</div><div class="line">     * @param db</div><div class="line">     * @param daoClasses</div><div class="line">     */</div><div class="line">    public void contrastDiff(Database db,ArrayList&lt;String&gt;properties, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses)&#123;</div><div class="line">     for(int i=0;i&lt;daoClasses.length;i++)&#123;</div><div class="line">         DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</div><div class="line">         String tableName=daoConfig.tablename;</div><div class="line">         if(properties!=null&amp;&amp;properties.size()&gt;0)&#123;</div><div class="line">             ArrayList&lt;String&gt;tem=new ArrayList&lt;&gt;();</div><div class="line">             StringBuilder sqlBuilder=new StringBuilder();</div><div class="line">             for(int j=0;j&lt;properties.size();j++)&#123;</div><div class="line">                 if(getColumns(db,tableName).contains(properties.get(j)))&#123;</div><div class="line">                     continue;</div><div class="line">                 &#125;</div><div class="line">                 tem.add(properties.get(j));</div><div class="line">             &#125;</div><div class="line">             sqlBuilder.append(&quot;INSERT INTO &quot;).append(tableName).append(&quot; (&quot;);</div><div class="line">             sqlBuilder.append(TextUtils.join(&quot;,&quot;, tem));</div><div class="line">             sqlBuilder.append(&quot;) SELECT &quot;);</div><div class="line">             sqlBuilder.append(TextUtils.join(&quot;,&quot;, tem));</div><div class="line">             sqlBuilder.append(&quot; FROM &quot;).append(tableName).append(&quot;;&quot;);</div><div class="line">             db.execSQL(sqlBuilder.toString());</div><div class="line">         &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>完整的数据库升级帮助类</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * description: greenDao升级帮助</div><div class="line"> * author: bear .</div><div class="line"> * Created date:  2017/5/17.</div><div class="line"> */</div><div class="line">public class MigrationHelper &#123;</div><div class="line"></div><div class="line">    private static final String CONVERSION_CLASS_NOT_FOUND_EXCEPTION =</div><div class="line">            &quot;MIGRATION HELPER - CLASS DOESN&apos;T MATCH WITH THE CURRENT PARAMETERS&quot;;</div><div class="line">    private static MigrationHelper instance;</div><div class="line"></div><div class="line">    public static MigrationHelper getInstance() &#123;</div><div class="line">        if (instance == null) &#123;</div><div class="line">            instance = new MigrationHelper();</div><div class="line">        &#125;</div><div class="line">        return instance;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 备份还原</div><div class="line">     * @param db</div><div class="line">     * @param daoClasses</div><div class="line">     */</div><div class="line">    public void migrate(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</div><div class="line">        generateTempTables(db, daoClasses);</div><div class="line">        DaoMaster.dropAllTables(db, true);</div><div class="line">        DaoMaster.createAllTables(db, false);</div><div class="line">        restoreData(db, daoClasses);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 对比差异，在原表中直接添加column,赞不做删除操作</div><div class="line">     * @param db</div><div class="line">     * @param daoClasses</div><div class="line">     */</div><div class="line">    public void contrastDiff(Database db,ArrayList&lt;String&gt;properties, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses)&#123;</div><div class="line">     for(int i=0;i&lt;daoClasses.length;i++)&#123;</div><div class="line">         DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</div><div class="line">         String tableName=daoConfig.tablename;</div><div class="line">         if(properties!=null&amp;&amp;properties.size()&gt;0)&#123;</div><div class="line">             ArrayList&lt;String&gt;tem=new ArrayList&lt;&gt;();</div><div class="line">             StringBuilder sqlBuilder=new StringBuilder();</div><div class="line">             for(int j=0;j&lt;properties.size();j++)&#123;</div><div class="line">                 if(getColumns(db,tableName).contains(properties.get(j)))&#123;</div><div class="line">                     continue;</div><div class="line">                 &#125;</div><div class="line">                 tem.add(properties.get(j));</div><div class="line">             &#125;</div><div class="line">             sqlBuilder.append(&quot;INSERT INTO &quot;).append(tableName).append(&quot; (&quot;);</div><div class="line">             sqlBuilder.append(TextUtils.join(&quot;,&quot;, tem));</div><div class="line">             sqlBuilder.append(&quot;) SELECT &quot;);</div><div class="line">             sqlBuilder.append(TextUtils.join(&quot;,&quot;, tem));</div><div class="line">             sqlBuilder.append(&quot; FROM &quot;).append(tableName).append(&quot;;&quot;);</div><div class="line">             db.execSQL(sqlBuilder.toString());</div><div class="line">         &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 删除原表重新再建立一个表</div><div class="line">     * @param db</div><div class="line">     */</div><div class="line">    public void dropAndCreate(Database db)&#123;</div><div class="line">        DaoMaster.dropAllTables(db, true);</div><div class="line">        DaoMaster.createAllTables(db, false);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 数据库备份</div><div class="line">     * @param db</div><div class="line">     * @param daoClasses</div><div class="line">     */</div><div class="line">    private void generateTempTables(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</div><div class="line">        for (int i = 0; i &lt; daoClasses.length; i++) &#123;</div><div class="line">            DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</div><div class="line"></div><div class="line">            String divider = &quot;&quot;;</div><div class="line">            String tableName = daoConfig.tablename;</div><div class="line">            String tempTableName = daoConfig.tablename.concat(&quot;_TEMP&quot;);</div><div class="line">            ArrayList&lt;String&gt; properties = new ArrayList&lt;&gt;();</div><div class="line"></div><div class="line">            StringBuilder createTableStringBuilder = new StringBuilder();</div><div class="line"></div><div class="line">            createTableStringBuilder.append(&quot;CREATE TABLE &quot;).append(tempTableName).append(&quot; (&quot;);</div><div class="line"></div><div class="line">            for (int j = 0; j &lt; daoConfig.properties.length; j++) &#123;</div><div class="line">                String columnName = daoConfig.properties[j].columnName;</div><div class="line"></div><div class="line">                if (getColumns(db, tableName).contains(columnName)) &#123;</div><div class="line">                    properties.add(columnName);</div><div class="line"></div><div class="line">                    String type = null;</div><div class="line"></div><div class="line">                    try &#123;</div><div class="line">                        type = getTypeByClass(daoConfig.properties[j].type);</div><div class="line">                    &#125; catch (Exception exception) &#123;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    createTableStringBuilder.append(divider).append(columnName).append(&quot; &quot;).append(type);</div><div class="line"></div><div class="line">                    if (daoConfig.properties[j].primaryKey) &#123;</div><div class="line">                        createTableStringBuilder.append(&quot; PRIMARY KEY&quot;);</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    divider = &quot;,&quot;;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            createTableStringBuilder.append(&quot;);&quot;);</div><div class="line"></div><div class="line">            db.execSQL(createTableStringBuilder.toString());</div><div class="line"></div><div class="line">            StringBuilder insertTableStringBuilder = new StringBuilder();</div><div class="line"></div><div class="line">            insertTableStringBuilder.append(&quot;INSERT INTO &quot;).append(tempTableName).append(&quot; (&quot;);</div><div class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</div><div class="line">            insertTableStringBuilder.append(&quot;) SELECT &quot;);</div><div class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</div><div class="line">            insertTableStringBuilder.append(&quot; FROM &quot;).append(tableName).append(&quot;;&quot;);</div><div class="line"></div><div class="line">            db.execSQL(insertTableStringBuilder.toString());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 数据库恢复</div><div class="line">     * @param db</div><div class="line">     * @param daoClasses</div><div class="line">     */</div><div class="line">    private void restoreData(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</div><div class="line">        for (int i = 0; i &lt; daoClasses.length; i++) &#123;</div><div class="line">            DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</div><div class="line"></div><div class="line">            String tableName = daoConfig.tablename;</div><div class="line">            String tempTableName = daoConfig.tablename.concat(&quot;_TEMP&quot;);</div><div class="line">            ArrayList&lt;String&gt; properties = new ArrayList();</div><div class="line"></div><div class="line">            for (int j = 0; j &lt; daoConfig.properties.length; j++) &#123;</div><div class="line">                String columnName = daoConfig.properties[j].columnName;</div><div class="line"></div><div class="line">                if (getColumns(db, tempTableName).contains(columnName)) &#123;</div><div class="line">                    properties.add(columnName);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            StringBuilder insertTableStringBuilder = new StringBuilder();</div><div class="line"></div><div class="line">            insertTableStringBuilder.append(&quot;INSERT INTO &quot;).append(tableName).append(&quot; (&quot;);</div><div class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</div><div class="line">            insertTableStringBuilder.append(&quot;) SELECT &quot;);</div><div class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</div><div class="line">            insertTableStringBuilder.append(&quot; FROM &quot;).append(tempTableName).append(&quot;;&quot;);</div><div class="line"></div><div class="line">            StringBuilder dropTableStringBuilder = new StringBuilder();</div><div class="line"></div><div class="line">            dropTableStringBuilder.append(&quot;DROP TABLE &quot;).append(tempTableName);</div><div class="line"></div><div class="line">            db.execSQL(insertTableStringBuilder.toString());</div><div class="line">            db.execSQL(dropTableStringBuilder.toString());</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private String getTypeByClass(Class&lt;?&gt; type) throws Exception &#123;</div><div class="line">        if (type.equals(String.class)) &#123;</div><div class="line">            return &quot;TEXT&quot;;</div><div class="line">        &#125;</div><div class="line">        if (type.equals(Long.class) || type.equals(Integer.class) || type.equals(long.class)) &#123;</div><div class="line">            return &quot;INTEGER&quot;;</div><div class="line">        &#125;</div><div class="line">        if (type.equals(Boolean.class)) &#123;</div><div class="line">            return &quot;BOOLEAN&quot;;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        Exception exception =</div><div class="line">                new Exception(CONVERSION_CLASS_NOT_FOUND_EXCEPTION.concat(&quot; - Class: &quot;).concat(type.toString()));</div><div class="line">        throw exception;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private static List&lt;String&gt; getColumns(Database db, String tableName) &#123;</div><div class="line">        List&lt;String&gt; columns = new ArrayList&lt;&gt;();</div><div class="line">        Cursor cursor = null;</div><div class="line">        try &#123;</div><div class="line">            cursor = db.rawQuery(&quot;SELECT * FROM &quot; + tableName + &quot; limit 1&quot;, null);</div><div class="line">            if (cursor != null) &#123;</div><div class="line">                columns = new ArrayList&lt;&gt;(Arrays.asList(cursor.getColumnNames()));</div><div class="line">            &#125;</div><div class="line">        &#125; catch (Exception e) &#123;</div><div class="line">            Log.v(tableName, e.getMessage(), e);</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125; finally &#123;</div><div class="line">            if (cursor != null) cursor.close();</div><div class="line">        &#125;</div><div class="line">        return columns;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;创建一个数据库帮助类&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div 
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>仿京东三级地址选择器</title>
    <link href="http://mzeht.com/2017/05/28/%E4%BB%BF%E4%BA%AC%E4%B8%9C%E4%B8%89%E7%BA%A7%E5%9C%B0%E5%9D%80%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://mzeht.com/2017/05/28/仿京东三级地址选择器/</id>
    <published>2017-05-28T07:16:56.000Z</published>
    <updated>2017-05-28T08:44:15.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/96157233.jpg" alt=""></p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@BindView(R.id.recive_address_txt)</div><div class="line">    TextView mReciveAddressTxt;</div></pre></td></tr></table></figure>
<p>根据tab的深度和前一项选择的id，获取下一级菜单项<br>下一级的数据都是由上一级参数网络请求而来</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">mReciveAddressTxt.setOnClickListener(new View.OnClickListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line"></div><div class="line">                Selector selector = new Selector(getActivity(), 3);</div><div class="line"></div><div class="line">                selector.setDataProvider(new DataProvider() &#123;</div><div class="line">                    @Override</div><div class="line">                    public void provideData(int currentDeep, int preId, DataReceiver receiver) &#123;</div><div class="line">                        //根据tab的深度和前一项选择的id，获取下一级菜单项</div><div class="line">                        Log.i(TAG, &quot;provideData: currentDeep &gt;&gt;&gt; &quot; + currentDeep + &quot; preId &gt;&gt;&gt; &quot; + preId);</div><div class="line">//                        ApiManager.getBaimiApi().getCity()</div><div class="line"></div><div class="line">                        switch (currentDeep) &#123;</div><div class="line">                            case 0:</div><div class="line">                                if (proviceList.size() &gt; 0) &#123;</div><div class="line">                                    receiver.send(getDatas(proviceList));</div><div class="line">                                    return;</div><div class="line">                                &#125;</div><div class="line">                                ApiManager.getBaimiApi().getProvince().subscribeOn(Schedulers.io())</div><div class="line">                                        .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                                        .subscribe(new Subscriber&lt;ApiResult&lt;List&lt;String&gt;&gt;&gt;() &#123;</div><div class="line">                                            @Override</div><div class="line">                                            public void onCompleted() &#123;</div><div class="line"></div><div class="line">                                            &#125;</div><div class="line"></div><div class="line">                                            @Override</div><div class="line">                                            public void onError(Throwable e) &#123;</div><div class="line"></div><div class="line">                                            &#125;</div><div class="line"></div><div class="line">                                            @Override</div><div class="line">                                            public void onNext(ApiResult&lt;List&lt;String&gt;&gt; listApiResult) &#123;</div><div class="line">                                                if (listApiResult.getContent().size() &gt; 0) &#123;</div><div class="line">                                                    proviceList = listApiResult.getContent();</div><div class="line">                                                    receiver.send(getDatas(proviceList));</div><div class="line">                                                &#125;</div><div class="line">                                            &#125;</div><div class="line">                                        &#125;);</div><div class="line">                                break;</div><div class="line">                            case 1:</div><div class="line"></div><div class="line">                                ApiManager.getBaimiApi().getCity(proviceList.get(preId))</div><div class="line">                                        .subscribeOn(Schedulers.io())</div><div class="line">                                        .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                                        .subscribe(new Subscriber&lt;ApiResult&lt;List&lt;String&gt;&gt;&gt;() &#123;</div><div class="line">                                            @Override</div><div class="line">                                            public void onCompleted() &#123;</div><div class="line"></div><div class="line">                                            &#125;</div><div class="line"></div><div class="line">                                            @Override</div><div class="line">                                            public void onError(Throwable e) &#123;</div><div class="line"></div><div class="line">                                            &#125;</div><div class="line"></div><div class="line">                                            @Override</div><div class="line">                                            public void onNext(ApiResult&lt;List&lt;String&gt;&gt; listApiResult) &#123;</div><div class="line">                                                if (listApiResult.getFlag().equals(&quot;1&quot;) || listApiResult.getContent().size() &gt; 0) &#123;</div><div class="line">                                                    cityList = listApiResult.getContent();</div><div class="line">                                                    receiver.send(getDatas(cityList));</div><div class="line">                                                &#125;</div><div class="line"></div><div class="line">                                            &#125;</div><div class="line">                                        &#125;);</div><div class="line">                                break;</div><div class="line">                            case 2:</div><div class="line">                                ApiManager.getBaimiApi().getArea(cityList.get(preId))</div><div class="line">                                        .subscribeOn(Schedulers.io())</div><div class="line">                                        .observeOn(AndroidSchedulers.mainThread())</div><div class="line">                                        .subscribe(new Subscriber&lt;ApiResult&lt;List&lt;String&gt;&gt;&gt;() &#123;</div><div class="line">                                            @Override</div><div class="line">                                            public void onCompleted() &#123;</div><div class="line"></div><div class="line">                                            &#125;</div><div class="line"></div><div class="line">                                            @Override</div><div class="line">                                            public void onError(Throwable e) &#123;</div><div class="line"></div><div class="line">                                            &#125;</div><div class="line"></div><div class="line">                                            @Override</div><div class="line">                                            public void onNext(ApiResult&lt;List&lt;String&gt;&gt; listApiResult) &#123;</div><div class="line">                                                if (listApiResult.getFlag().equals(&quot;1&quot;) || listApiResult.getContent().size() &gt; 0) &#123;</div><div class="line">                                                    areaList = listApiResult.getContent();</div><div class="line">                                                    receiver.send(getDatas(areaList));</div><div class="line">                                                &#125;</div><div class="line">                                            &#125;</div><div class="line">                                        &#125;);</div><div class="line">                                break;</div><div class="line">                        &#125;</div><div class="line"></div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    private ArrayList&lt;ISelectAble&gt; getDatas(List&lt;String&gt; list) &#123;</div><div class="line">                        int count = list.size();</div><div class="line">                        ArrayList&lt;ISelectAble&gt; data = new ArrayList&lt;&gt;(count);</div><div class="line">                        for (int j = 0; j &lt; count; j++) &#123;</div><div class="line"></div><div class="line">                            int finalJ = j;</div><div class="line">                            data.add(new ISelectAble() &#123;</div><div class="line">                                @Override</div><div class="line">                                public String getName() &#123;</div><div class="line">                                    return list.get(finalJ);</div><div class="line">                                &#125;</div><div class="line"></div><div class="line">                                @Override</div><div class="line">                                public int getId() &#123;</div><div class="line">                                    return finalJ;</div><div class="line">                                &#125;</div><div class="line"></div><div class="line">                                @Override</div><div class="line">                                public Object getArg() &#123;</div><div class="line">                                    return this;</div><div class="line">                                &#125;</div><div class="line">                            &#125;);</div><div class="line">                        &#125;</div><div class="line">                        return data;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line"></div><div class="line">                &#125;);</div><div class="line">                selector.setSelectedListener(new SelectedListener() &#123;</div><div class="line">                    @Override</div><div class="line">                    public void onAddressSelected(ArrayList&lt;ISelectAble&gt; selectAbles) &#123;</div><div class="line">                        String result = &quot;&quot;;</div><div class="line">                        for (ISelectAble selectAble : selectAbles) &#123;</div><div class="line">                            result += selectAble.getName() + &quot; &quot;;</div><div class="line">                        &#125;</div><div class="line">//                        Toast.makeText(getActivity(), result, Toast.LENGTH_SHORT).show();</div><div class="line">                        mReciveAddressTxt.setText(result);</div><div class="line">                    &#125;</div><div class="line">                &#125;);</div><div class="line"></div><div class="line">                BottomDialog dialog = new BottomDialog(getActivity());</div><div class="line">                dialog.init(getActivity(), selector);</div><div class="line">                dialog.show();</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div></pre></td></tr></table></figure>
<h2 id="库地址"><a href="#库地址" class="headerlink" title="库地址"></a>库地址</h2><p><a href="https://github.com/dunwen/JDSelector" target="_blank" rel="external">https://github.com/dunwen/JDSelector</a></p>
<p><a href="https://github.com/chihane/JDAddressSelector" target="_blank" rel="external">https://github.com/chihane/JDAddressSelector</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/96157233.j
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>popupwindow封装使用</title>
    <link href="http://mzeht.com/2017/05/28/popupwindow%E5%B0%81%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>http://mzeht.com/2017/05/28/popupwindow封装使用/</id>
    <published>2017-05-28T07:00:46.000Z</published>
    <updated>2017-05-28T08:44:19.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一个封装封装类"><a href="#一个封装封装类" class="headerlink" title="一个封装封装类"></a>一个封装封装类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div></pre></td><td class="code"><pre><div class="line">public class CustomPopWindow implements PopupWindow.OnDismissListener&#123;</div><div class="line">    private static final float DEFAULT_ALPHA = 0.7f;</div><div class="line">    private Context mContext;</div><div class="line">    private int mWidth;</div><div class="line">    private int mHeight;</div><div class="line">    private boolean mIsFocusable = true;</div><div class="line">    private boolean mIsOutside = true;</div><div class="line">    private int mResLayoutId = -1;</div><div class="line">    private View mContentView;</div><div class="line">    private PopupWindow mPopupWindow;</div><div class="line">    private int mAnimationStyle = -1;</div><div class="line"></div><div class="line">    private boolean mClippEnable = true;//default is true</div><div class="line">    private boolean mIgnoreCheekPress = false;</div><div class="line">    private int mInputMode = -1;</div><div class="line">    private PopupWindow.OnDismissListener mOnDismissListener;</div><div class="line">    private int mSoftInputMode = -1;</div><div class="line">    private boolean mTouchable = true;//default is ture</div><div class="line">    private View.OnTouchListener mOnTouchListener;</div><div class="line"></div><div class="line">    private Window mWindow;//当前Activity 的窗口</div><div class="line">    /**</div><div class="line">     * 弹出PopWindow 背景是否变暗，默认不会变暗。</div><div class="line">     */</div><div class="line">    private boolean mIsBackgroundDark = false;</div><div class="line"></div><div class="line">    private float mBackgroundDrakValue = 0;// 背景变暗的值，0 - 1</div><div class="line"></div><div class="line">    private CustomPopWindow(Context context)&#123;</div><div class="line">        mContext = context;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getWidth() &#123;</div><div class="line">        return mWidth;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getHeight() &#123;</div><div class="line">        return mHeight;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     *</div><div class="line">     * @param anchor</div><div class="line">     * @param xOff</div><div class="line">     * @param yOff</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public CustomPopWindow showAsDropDown(View anchor, int xOff, int yOff)&#123;</div><div class="line">        if(mPopupWindow!=null)&#123;</div><div class="line">            mPopupWindow.showAsDropDown(anchor,xOff,yOff);</div><div class="line">        &#125;</div><div class="line">        return this;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public CustomPopWindow showAsDropDown(View anchor)&#123;</div><div class="line">        if(mPopupWindow!=null)&#123;</div><div class="line">            mPopupWindow.showAsDropDown(anchor);</div><div class="line">        &#125;</div><div class="line">        return this;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @RequiresApi(api = Build.VERSION_CODES.KITKAT)</div><div class="line">    public CustomPopWindow showAsDropDown(View anchor, int xOff, int yOff, int gravity)&#123;</div><div class="line">        if(mPopupWindow!=null)&#123;</div><div class="line">            mPopupWindow.showAsDropDown(anchor,xOff,yOff,gravity);</div><div class="line">        &#125;</div><div class="line">        return this;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    /**</div><div class="line">     * 相对于父控件的位置（通过设置Gravity.CENTER，下方Gravity.BOTTOM等 ），可以设置具体位置坐标</div><div class="line">     * @param parent 父控件</div><div class="line">     * @param gravity</div><div class="line">     * @param x the popup&apos;s x location offset</div><div class="line">     * @param y the popup&apos;s y location offset</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public CustomPopWindow showAtLocation(View parent, int gravity, int x, int y)&#123;</div><div class="line">        if(mPopupWindow!=null)&#123;</div><div class="line">            mPopupWindow.showAtLocation(parent,gravity,x,y);</div><div class="line">        &#125;</div><div class="line">        return this;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 添加一些属性设置</div><div class="line">     * @param popupWindow</div><div class="line">     */</div><div class="line">    private void apply(PopupWindow popupWindow)&#123;</div><div class="line">        popupWindow.setClippingEnabled(mClippEnable);</div><div class="line">        if(mIgnoreCheekPress)&#123;</div><div class="line">            popupWindow.setIgnoreCheekPress();</div><div class="line">        &#125;</div><div class="line">        if(mInputMode!=-1)&#123;</div><div class="line">            popupWindow.setInputMethodMode(mInputMode);</div><div class="line">        &#125;</div><div class="line">        if(mSoftInputMode!=-1)&#123;</div><div class="line">            popupWindow.setSoftInputMode(mSoftInputMode);</div><div class="line">        &#125;</div><div class="line">        if(mOnDismissListener!=null)&#123;</div><div class="line">            popupWindow.setOnDismissListener(mOnDismissListener);</div><div class="line">        &#125;</div><div class="line">        if(mOnTouchListener!=null)&#123;</div><div class="line">            popupWindow.setTouchInterceptor(mOnTouchListener);</div><div class="line">        &#125;</div><div class="line">        popupWindow.setTouchable(mTouchable);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private PopupWindow build()&#123;</div><div class="line"></div><div class="line">        if(mContentView == null)&#123;</div><div class="line">            mContentView = LayoutInflater.from(mContext).inflate(mResLayoutId,null);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        // 2017.3.17 add</div><div class="line">        // 获取当前Activity的window</div><div class="line">        Activity activity = (Activity) mContentView.getContext();</div><div class="line">        if(activity!=null &amp;&amp; mIsBackgroundDark)&#123;</div><div class="line">            //如果设置的值在0 - 1的范围内，则用设置的值，否则用默认值</div><div class="line">            final  float alpha = (mBackgroundDrakValue &gt; 0 &amp;&amp; mBackgroundDrakValue &lt; 1) ? mBackgroundDrakValue : DEFAULT_ALPHA;</div><div class="line">            mWindow = activity.getWindow();</div><div class="line">            WindowManager.LayoutParams params = mWindow.getAttributes();</div><div class="line">            params.alpha = alpha;</div><div class="line">            mWindow.setAttributes(params);</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        if(mWidth != 0 &amp;&amp; mHeight!=0 )&#123;</div><div class="line">            mPopupWindow = new PopupWindow(mContentView,mWidth,mHeight);</div><div class="line">        &#125;else&#123;</div><div class="line">            mPopupWindow = new PopupWindow(mContentView, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</div><div class="line">        &#125;</div><div class="line">        if(mAnimationStyle!=-1)&#123;</div><div class="line">            mPopupWindow.setAnimationStyle(mAnimationStyle);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        apply(mPopupWindow);//设置一些属性</div><div class="line"></div><div class="line">        mPopupWindow.setFocusable(mIsFocusable);</div><div class="line">        mPopupWindow.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));</div><div class="line">        mPopupWindow.setOutsideTouchable(mIsOutside);</div><div class="line"></div><div class="line">        if(mWidth == 0 || mHeight == 0)&#123;</div><div class="line">            mPopupWindow.getContentView().measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);</div><div class="line">            //如果外面没有设置宽高的情况下，计算宽高并赋值</div><div class="line">            mWidth = mPopupWindow.getContentView().getMeasuredWidth();</div><div class="line">            mHeight = mPopupWindow.getContentView().getMeasuredHeight();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        // 添加dissmiss 监听</div><div class="line">        mPopupWindow.setOnDismissListener(this);</div><div class="line"></div><div class="line"></div><div class="line">        mPopupWindow.update();</div><div class="line"></div><div class="line">        return mPopupWindow;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onDismiss() &#123;</div><div class="line">        dissmiss();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 关闭popWindow</div><div class="line">     */</div><div class="line">    public void dissmiss()&#123;</div><div class="line"></div><div class="line">        if(mOnDismissListener!=null)&#123;</div><div class="line">            mOnDismissListener.onDismiss();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        //如果设置了背景变暗，那么在dissmiss的时候需要还原</div><div class="line">        if(mWindow!=null)&#123;</div><div class="line">            WindowManager.LayoutParams params = mWindow.getAttributes();</div><div class="line">            params.alpha = 1.0f;</div><div class="line">            mWindow.setAttributes(params);</div><div class="line">        &#125;</div><div class="line">        if(mPopupWindow!=null &amp;&amp; mPopupWindow.isShowing())&#123;</div><div class="line">            mPopupWindow.dismiss();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    public static class PopupWindowBuilder&#123;</div><div class="line">        private CustomPopWindow mCustomPopWindow;</div><div class="line"></div><div class="line">        public PopupWindowBuilder(Context context)&#123;</div><div class="line">            mCustomPopWindow = new CustomPopWindow(context);</div><div class="line">        &#125;</div><div class="line">        public PopupWindowBuilder size(int width,int height)&#123;</div><div class="line">            mCustomPopWindow.mWidth = width;</div><div class="line">            mCustomPopWindow.mHeight = height;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        public PopupWindowBuilder setFocusable(boolean focusable)&#123;</div><div class="line">            mCustomPopWindow.mIsFocusable = focusable;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">        public PopupWindowBuilder setView(int resLayoutId)&#123;</div><div class="line">            mCustomPopWindow.mResLayoutId = resLayoutId;</div><div class="line">            mCustomPopWindow.mContentView = null;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public PopupWindowBuilder setView(View view)&#123;</div><div class="line">            mCustomPopWindow.mContentView = view;</div><div class="line">            mCustomPopWindow.mResLayoutId = -1;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public PopupWindowBuilder setOutsideTouchable(boolean outsideTouchable)&#123;</div><div class="line">            mCustomPopWindow.mIsOutside = outsideTouchable;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        /**</div><div class="line">         * 设置弹窗动画</div><div class="line">         * @param animationStyle</div><div class="line">         * @return</div><div class="line">         */</div><div class="line">        public PopupWindowBuilder setAnimationStyle(int animationStyle)&#123;</div><div class="line">            mCustomPopWindow.mAnimationStyle = animationStyle;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        public PopupWindowBuilder setClippingEnable(boolean enable)&#123;</div><div class="line">            mCustomPopWindow.mClippEnable =enable;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        public PopupWindowBuilder setIgnoreCheekPress(boolean ignoreCheekPress)&#123;</div><div class="line">            mCustomPopWindow.mIgnoreCheekPress = ignoreCheekPress;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public PopupWindowBuilder setInputMethodMode(int mode)&#123;</div><div class="line">            mCustomPopWindow.mInputMode = mode;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public PopupWindowBuilder setOnDissmissListener(PopupWindow.OnDismissListener onDissmissListener)&#123;</div><div class="line">            mCustomPopWindow.mOnDismissListener = onDissmissListener;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        public PopupWindowBuilder setSoftInputMode(int softInputMode)&#123;</div><div class="line">            mCustomPopWindow.mSoftInputMode = softInputMode;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        public PopupWindowBuilder setTouchable(boolean touchable)&#123;</div><div class="line">            mCustomPopWindow.mTouchable = touchable;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        public PopupWindowBuilder setTouchIntercepter(View.OnTouchListener touchIntercepter)&#123;</div><div class="line">            mCustomPopWindow.mOnTouchListener = touchIntercepter;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        /**</div><div class="line">         * 设置背景变暗是否可用</div><div class="line">         * @param isDark</div><div class="line">         * @return</div><div class="line">         */</div><div class="line">        public PopupWindowBuilder enableBackgroundDark(boolean isDark)&#123;</div><div class="line">            mCustomPopWindow.mIsBackgroundDark = isDark;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        /**</div><div class="line">         * 设置北京变暗的值</div><div class="line">         * @param darkValue</div><div class="line">         * @return</div><div class="line">         */</div><div class="line">        public PopupWindowBuilder setBgDarkAlpha(float darkValue)&#123;</div><div class="line">            mCustomPopWindow.mBackgroundDrakValue = darkValue;</div><div class="line">            return this;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">        public CustomPopWindow create()&#123;</div><div class="line">            //构建PopWindow</div><div class="line">            mCustomPopWindow.build();</div><div class="line">            return mCustomPopWindow;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="实际使用"><a href="#实际使用" class="headerlink" title="实际使用"></a>实际使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div></pre></td><td class="code"><pre><div class="line">public class ReadMineActivity extends BaseActivity &#123;</div><div class="line"></div><div class="line">    CustomPopWindow mCustomPopWindow;</div><div class="line"></div><div class="line"></div><div class="line">    Dialog dateDialog, timeDialog;</div><div class="line"></div><div class="line">    final popupwindow p = new popupwindow();</div><div class="line"></div><div class="line"></div><div class="line">    class popupwindow &#123;</div><div class="line"></div><div class="line">        @BindView(R.id.is_switch)</div><div class="line">        SwitchCompat is_switch;//是否重复</div><div class="line">        @BindView(R.id.set_dataandtime)</div><div class="line">        LinearLayout setDateAndTimeLL;//选择日期时间菜单</div><div class="line"></div><div class="line">        @BindView(R.id.set_dataandtime_detail)</div><div class="line">        LinearLayout setDateAndTimeDetailLL;//选择日期时间</div><div class="line"></div><div class="line">        @BindView(R.id.set_time)</div><div class="line">        LinearLayout setTimeLL;</div><div class="line"></div><div class="line">        @BindView(R.id.set_time_detail)</div><div class="line">        LinearLayout setTimeDetailLL;</div><div class="line"></div><div class="line">        @BindView(R.id.data_text)</div><div class="line">        TextView dateText;//日期</div><div class="line"></div><div class="line">        @BindView(R.id.time1)</div><div class="line">        TextView time1;//time</div><div class="line"></div><div class="line">        @BindView(R.id.time2)</div><div class="line">        TextView time2;//time</div><div class="line"></div><div class="line">        @BindView(R.id.day1)</div><div class="line">        CheckBox day1;</div><div class="line">        @BindView(R.id.day2)</div><div class="line">        CheckBox day2;</div><div class="line">        @BindView(R.id.day3)</div><div class="line">        CheckBox day3;</div><div class="line">        @BindView(R.id.day4)</div><div class="line">        CheckBox day4;</div><div class="line">        @BindView(R.id.day5)</div><div class="line">        CheckBox day5;</div><div class="line">        @BindView(R.id.day6)</div><div class="line">        CheckBox day6;</div><div class="line">        @BindView(R.id.day7)</div><div class="line">        CheckBox day7;</div><div class="line"></div><div class="line">        @BindView(R.id.add_readmine_submit)</div><div class="line">        TextView submit;</div><div class="line"></div><div class="line">        @BindView(R.id.readmine_message_edit)</div><div class="line">        EditText message;</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    @BindView(R.id.bind_newreadmie_ll)</div><div class="line">    LinearLayout bindNewReadMineLL;</div><div class="line"></div><div class="line">    @BindView(R.id.recyclerView)</div><div class="line">    RecyclerView mRecyclerView;</div><div class="line"></div><div class="line">    MultiTypeAdapter mAdapter;</div><div class="line">    Items items = new Items();</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.activity_read_mine);</div><div class="line">        ButterKnife.bind(this);</div><div class="line">        initView();</div><div class="line">        setListener();</div><div class="line">        initData();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void initData() &#123;</div><div class="line">        for (int i = 0; i &lt;25 ; i++) &#123;</div><div class="line">            ReadmineItem item = new ReadmineItem();</div><div class="line">            items.add(item);</div><div class="line">        &#125;</div><div class="line">        mAdapter.notifyDataSetChanged();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void setListener() &#123;</div><div class="line">        bindNewReadMineLL.setOnClickListener(new View.OnClickListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                mCustomPopWindow.showAsDropDown(bindNewReadMineLL, 0, 20);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void initView() &#123;</div><div class="line">        //=======================================mCustomPopWindow============================================//</div><div class="line">        View contentView = LayoutInflater.from(getActivity()).inflate(R.layout.popwindow_add_readmine, null);</div><div class="line">        //处理popWindow 显示内容</div><div class="line">        handleLogic(contentView);</div><div class="line">        //创建并显示popWindow</div><div class="line">        mCustomPopWindow = new CustomPopWindow.PopupWindowBuilder(getActivity())</div><div class="line">                .setView(contentView)</div><div class="line">                .size(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)</div><div class="line">                .enableBackgroundDark(false) //弹出popWindow时，背景是否变暗</div><div class="line">                .setBgDarkAlpha(0.7f) // 控制亮度</div><div class="line">                .setOnDissmissListener(new PopupWindow.OnDismissListener() &#123;</div><div class="line">                    @Override</div><div class="line">                    public void onDismiss() &#123;</div><div class="line">                        Log.e(&quot;TAG&quot;, &quot;onDismiss&quot;);</div><div class="line">                    &#125;</div><div class="line">                &#125;)</div><div class="line">                .create();</div><div class="line"></div><div class="line"></div><div class="line">        //=======================================recyclerView============================================//</div><div class="line">        mRecyclerView.setLayoutManager(new WrapContentLinearLayoutManager(getActivity()));</div><div class="line">        mAdapter = new MultiTypeAdapter();</div><div class="line">        mAdapter.register(ReadmineItem.class, new ReadmineItemViewBinder());</div><div class="line">        mAdapter.setItems(items);</div><div class="line">        mRecyclerView.setAdapter(mAdapter);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void handleLogic(View contentView) &#123;</div><div class="line"></div><div class="line">        ButterKnife.bind(p, contentView);</div><div class="line"></div><div class="line">        p.dateText.setOnClickListener(new View.OnClickListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                showDateDialog(DateUtil.getDateForString(p.dateText.getText().toString()));</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        p.time1.setOnClickListener(new View.OnClickListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                showTimeDialog();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        p.time2.setOnClickListener(new View.OnClickListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                showTimeDialog();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        p.setTimeLL.setVisibility(View.GONE);</div><div class="line">        p.setTimeDetailLL.setVisibility(View.GONE);</div><div class="line">        p.is_switch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) &#123;</div><div class="line">                if (isChecked) &#123;</div><div class="line">                    p.setDateAndTimeLL.setVisibility(View.GONE);</div><div class="line">                    p.setDateAndTimeDetailLL.setVisibility(View.GONE);</div><div class="line">                    p.setTimeLL.setVisibility(View.VISIBLE);</div><div class="line">                    p.setTimeDetailLL.setVisibility(View.VISIBLE);</div><div class="line">                &#125; else &#123;</div><div class="line">                    p.setDateAndTimeLL.setVisibility(View.VISIBLE);</div><div class="line">                    p.setDateAndTimeDetailLL.setVisibility(View.VISIBLE);</div><div class="line">                    p.setTimeLL.setVisibility(View.GONE);</div><div class="line">                    p.setTimeDetailLL.setVisibility(View.GONE);</div><div class="line"></div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        p.submit.setOnClickListener(new View.OnClickListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                T.showShort(getActivity(),p.dateText.getText().toString()+p.time1.getText().toString()+p.day1.isChecked()+p.message.getText().toString());</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void showTimeDialog() &#123;</div><div class="line">        if (timeDialog == null) &#123;</div><div class="line"></div><div class="line">            TimePickerDialog.Builder builder = new TimePickerDialog.Builder(this);</div><div class="line">            timeDialog = builder.setOnTimeSelectedListener(new TimePickerDialog.OnTimeSelectedListener() &#123;</div><div class="line">                @Override</div><div class="line">                public void onTimeSelected(int[] times) &#123;</div><div class="line"></div><div class="line">                    p.time1.setText(times[0] + &quot;:&quot; + times[1]);</div><div class="line">                    p.time2.setText(times[0] + &quot;:&quot; + times[1]);</div><div class="line"></div><div class="line">                &#125;</div><div class="line">            &#125;).create();</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        timeDialog.show();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void showDateDialog(List&lt;Integer&gt; date) &#123;</div><div class="line"></div><div class="line">        //==============================DatePickerDialog===================================//</div><div class="line"></div><div class="line"></div><div class="line">        if (dateDialog==null)&#123;</div><div class="line">            DatePickerDialog.Builder Datebuilder = new DatePickerDialog.Builder(this);</div><div class="line">            dateDialog=Datebuilder.setOnDateSelectedListener(new DatePickerDialog.OnDateSelectedListener() &#123;</div><div class="line">                @Override</div><div class="line">                public void onDateSelected(int[] dates) &#123;</div><div class="line"></div><div class="line">                    p.dateText.setText(dates[0] + &quot;-&quot; + (dates[1] &gt; 9 ? dates[1] : (&quot;0&quot; + dates[1])) + &quot;-&quot;</div><div class="line">                            + (dates[2] &gt; 9 ? dates[2] : (&quot;0&quot; + dates[2])));</div><div class="line"></div><div class="line">                &#125;</div><div class="line"></div><div class="line">                @Override</div><div class="line">                public void onCancel() &#123;</div><div class="line"></div><div class="line">                &#125;</div><div class="line">            &#125;).setSelectYear(date.get(0) - 1)</div><div class="line">                    .setSelectMonth(date.get(1) - 1)</div><div class="line">                    .setSelectDay(date.get(2) - 1)</div><div class="line">                    .setMaxYear(DateUtil.getYear())</div><div class="line">                    .setMaxMonth(DateUtil.getDateForString(DateUtil.getToday()).get(1))</div><div class="line">                    .setMaxDay(DateUtil.getDateForString(DateUtil.getToday()).get(2)).create();</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        dateDialog.show();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/39434013.jpg" alt=""></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一个封装封装类&quot;&gt;&lt;a href=&quot;#一个封装封装类&quot; class=&quot;headerlink&quot; title=&quot;一个封装封装类&quot;&gt;&lt;/a&gt;一个封装封装类&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Recycleview Mutitype的使用</title>
    <link href="http://mzeht.com/2017/05/04/2017-05-05-2/"/>
    <id>http://mzeht.com/2017/05/04/2017-05-05-2/</id>
    <published>2017-05-04T15:50:16.000Z</published>
    <updated>2017-05-28T08:44:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>安利一波<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">compile(&apos;me.drakeet.multitype:multitype:2.5.0&apos;, &#123;</div><div class="line">       exclude group: &apos;com.android.support&apos;</div><div class="line">   &#125;)</div></pre></td></tr></table></figure></p>
<p>基本文档github主页写的较好</p>
<p>基本使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public class EmptyDataViewProvider extends ItemViewBinder&lt;EmptyData,EmptyDataViewProvider.ViewHolder&gt;&#123;</div><div class="line"></div><div class="line"></div><div class="line">    @NonNull</div><div class="line">    @Override</div><div class="line">    protected ViewHolder onCreateViewHolder(@NonNull LayoutInflater inflater, @NonNull ViewGroup parent) &#123;</div><div class="line">        return new ViewHolder(inflater.inflate(R.layout.bm_list_empty_view,parent,false));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onBindViewHolder(@NonNull ViewHolder holder, @NonNull EmptyData item) &#123;</div><div class="line">        if (TextUtils.isEmpty(item.getMessage()))&#123;</div><div class="line">        holder.messageTextView.setText(&quot;你来到一片荒芜之地, 空空如也, 什么都没有\\n实在是太冷清了╮(╯_╰)╭&quot;);</div><div class="line">        &#125;else&#123;</div><div class="line">            holder.messageTextView.setText(item.getMessage());</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    static class ViewHolder extends RecyclerView.ViewHolder &#123;</div><div class="line">        private TextView messageTextView;</div><div class="line"></div><div class="line">        public ViewHolder(View itemView) &#123;</div><div class="line">            super(itemView);</div><div class="line">            this.messageTextView = (TextView) itemView.findViewById(R.id.bm_empty_text);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));</div><div class="line">       mAdapter = new MultiTypeAdapter();</div><div class="line">       mAdapter.register(EmptyData.class,new EmptyDataViewProvider());</div><div class="line">       mAdapter.register(SendExpressOrder.class,new OrderViewProvider(new OrderViewProvider.OnItemClickListener() &#123;</div><div class="line">           @Override</div><div class="line">           public void onItemClick(View view, int position, SendExpressOrder order) &#123;</div><div class="line">               Intent intent=new Intent();</div><div class="line">               intent.setClass(getActivity(), JijianSearchDetailActivity.class);</div><div class="line">               intent.putExtra(&quot;order&quot;, order);</div><div class="line">               startActivity(intent);</div><div class="line">           &#125;</div><div class="line">       &#125;));</div><div class="line">       mRecyclerView.setAdapter(mAdapter);</div><div class="line">       mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() &#123;</div><div class="line">           @Override</div><div class="line">           public void onRefresh() &#123;</div><div class="line">               new Handler().postDelayed(new Runnable() &#123;</div><div class="line">                   @Override</div><div class="line">                   public void run() &#123;</div><div class="line">                       searchData();</div><div class="line">                   &#125;</div><div class="line">               &#125;, 1000);</div><div class="line">           &#125;</div><div class="line">       &#125;);</div></pre></td></tr></table></figure>
<h3 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h3><p>针对LinearLayoutManager</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">public abstract class OnLoadMoreListener extends RecyclerView.OnScrollListener&#123;</div><div class="line">    private LinearLayoutManager layoutManager;</div><div class="line">    private int itemCount, lastPosition, lastItemCount;</div><div class="line"></div><div class="line">    public abstract void onLoadMore();</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onScrolled(RecyclerView recyclerView, int dx, int dy) &#123;</div><div class="line">        if (recyclerView.getLayoutManager() instanceof LinearLayoutManager) &#123;</div><div class="line">            layoutManager = (LinearLayoutManager) recyclerView.getLayoutManager();</div><div class="line"></div><div class="line">            itemCount = layoutManager.getItemCount();</div><div class="line">            lastPosition = layoutManager.findLastCompletelyVisibleItemPosition();</div><div class="line">        &#125; else &#123;</div><div class="line">            L.e(&quot;OnLoadMoreListener&quot;, &quot;The OnLoadMoreListener only support LinearLayoutManager&quot;);</div><div class="line">            return;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        if ( lastPosition == itemCount - 1) &#123;</div><div class="line">            lastItemCount = itemCount;</div><div class="line">            this.onLoadMore();</div><div class="line">        &#125;</div><div class="line">        L.d(&quot;itemCount&quot;,itemCount+&quot;&quot;);</div><div class="line">        L.d(&quot;lastPosition&quot;,lastPosition+&quot;&quot;);</div><div class="line">        L.d(&quot;lastItemCount&quot;,lastItemCount+&quot;&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>暴露子视图接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">public class PayMentTempLateProvider extends ItemViewBinder&lt;PayMentTempLatePO,PayMentTempLateProvider.ViewHolder&gt; &#123;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    public PayMentTempLateProvider(OnItemClickListener onItemClickListener) &#123;</div><div class="line">        this.mOnItemClickListener=onItemClickListener;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public interface OnItemClickListener&#123;</div><div class="line">        void onItemClick(View view,int position,PayMentTempLatePO payMentTempLatePO);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private OnItemClickListener mOnItemClickListener;</div><div class="line"></div><div class="line"></div><div class="line">    @NonNull</div><div class="line">    @Override</div><div class="line">    protected ViewHolder onCreateViewHolder(@NonNull LayoutInflater inflater, @NonNull ViewGroup parent) &#123;</div><div class="line">        return new ViewHolder(inflater.inflate(R.layout.item_express_template,parent,false));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onBindViewHolder(@NonNull ViewHolder holder, @NonNull PayMentTempLatePO item) &#123;</div><div class="line">        holder.templateName_tv.setText(item.getTemplateName());</div><div class="line">        holder.templatCode.setText(item.getTemplateCode());</div><div class="line">        holder.itemView.setOnClickListener(new View.OnClickListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                mOnItemClickListener.onItemClick(holder.itemView,holder.getLayoutPosition(),item);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    class ViewHolder extends RecyclerView.ViewHolder &#123;</div><div class="line">        private TextView templateName_tv;</div><div class="line">        private TextView templatCode;</div><div class="line">        public ViewHolder(View itemView) &#123;</div><div class="line">            super(itemView);</div><div class="line">            templateName_tv = (TextView) itemView.findViewById(R.id.templateName);</div><div class="line">            templatCode = (TextView) itemView.findViewById(R.id.templateCode);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>更新ui</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">                   public void onCompleted() &#123;</div><div class="line">                       QujianFragment.getInstance().setWeiquItemText(count);</div><div class="line">                   &#125;</div><div class="line"></div><div class="line">                   @Override</div><div class="line">                   public void onError(Throwable e) &#123;</div><div class="line">                       L.e(e.getMessage());</div><div class="line">                       if (mSwipeRefreshLayout.isRefreshing()) &#123;</div><div class="line">                           mSwipeRefreshLayout.setRefreshing(false);</div><div class="line">                       &#125;</div><div class="line">                       Items items = new Items();</div><div class="line">                       items.add(new EmptyData(&quot;请求失败&quot;));</div><div class="line">                       adapter.setItems(items);</div><div class="line">                       adapter.notifyDataSetChanged();</div><div class="line"></div><div class="line"></div><div class="line">                   &#125;</div><div class="line"></div><div class="line">                   @Override</div><div class="line">                   public void onNext(ApiPagesResult&lt;SendExpressOrder&gt; listApiResult) &#123;</div><div class="line">                       if (mSwipeRefreshLayout.isRefreshing()) &#123;</div><div class="line">                           mSwipeRefreshLayout.setRefreshing(false);</div><div class="line">                       &#125;</div><div class="line">                       mRecyclerView.scrollToPosition(0);</div><div class="line">                       if (listApiResult.getFlag().equals(&quot;1&quot;)) &#123;</div><div class="line">                           Items items = new Items();</div><div class="line">                           if (listApiResult.getContent().getCount() == 0) &#123;</div><div class="line">                               items.add(new EmptyData());</div><div class="line">                           &#125; else &#123;</div><div class="line">                               items.addAll(listApiResult.getContent().getContent());</div><div class="line">                               count = listApiResult.getContent().getCount();</div><div class="line"></div><div class="line">                           &#125;</div><div class="line"></div><div class="line">                           adapter.setItems(items);</div><div class="line">                           adapter.notifyDataSetChanged();</div><div class="line"></div><div class="line">                       &#125;</div><div class="line"></div><div class="line">                   &#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;安利一波&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
      <category term="multitype" scheme="http://mzeht.com/tags/multitype/"/>
    
  </entry>
  
  <entry>
    <title>重构到springboot注意事项</title>
    <link href="http://mzeht.com/2017/05/03/2017-05-05-1/"/>
    <id>http://mzeht.com/2017/05/03/2017-05-05-1/</id>
    <published>2017-05-03T13:47:33.000Z</published>
    <updated>2017-05-28T08:44:26.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>旧web项目没有采用maven管理依赖包，jsp页面，xml配置环境，mybatis数据库交互，现在改造为springboot项目，最终打包为war包，java命令直接启动，不依赖tomcat容器</p>
<p>开发环境 idea</p>
<p>###idea新建springboot项目<br>选择web支持</p>
<p>生成的项目src／main下有java，resource两个文件夹</p>
<p>新建第三个文件夹webapp，和之上两个同级，最终<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-5/36622722-file_1493976502014_16cc0.png" alt=""></p>
<h3 id="jsp依赖配置（同时适配本地运行和打包）"><a href="#jsp依赖配置（同时适配本地运行和打包）" class="headerlink" title="jsp依赖配置（同时适配本地运行和打包）"></a>jsp依赖配置（同时适配本地运行和打包）</h3><p>注意有些依赖改为<code>&lt;scope&gt;compile&lt;/scope&gt;</code>， 参考maven的scope解释(test,runtime,provide,complie)<br>这样通过idea的application或者打包都不会有问题</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;</div><div class="line">			&lt;scope&gt;compile&lt;/scope&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</div><div class="line">			&lt;scope&gt;test&lt;/scope&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">		</div><div class="line">		&lt;dependency&gt;</div><div class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</div><div class="line">            &lt;artifactId&gt;jstl&lt;/artifactId&gt;</div><div class="line">        &lt;/dependency&gt;</div><div class="line">		&lt;!--用于编译jsp--&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt;</div><div class="line">			&lt;scope&gt;compile&lt;/scope&gt;</div><div class="line">		&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<p>jsp映射路径</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">spring:</div><div class="line">  profiles: dev</div><div class="line">  mvc:</div><div class="line">    view:</div><div class="line">      prefix: /WEB-INF/jsp/</div><div class="line">      suffix: .jsp</div></pre></td></tr></table></figure>
<h3 id="serverlet支持"><a href="#serverlet支持" class="headerlink" title="serverlet支持"></a>serverlet支持</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">@SpringBootApplication</div><div class="line">public class BootlabbookmanagerApplication  extends SpringBootServletInitializer&#123;</div><div class="line">	 @Override</div><div class="line">    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) &#123;</div><div class="line">        return application.sources(BootlabbookmanagerApplication.class);</div><div class="line">    &#125;</div><div class="line">.......</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>###拦截器，资源映射，</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@Component</div><div class="line">public class WebMVCConfig extends WebMvcConfigurerAdapter</div><div class="line">&#123;</div><div class="line"></div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public HandlerInterceptor getLoginInterceptor()&#123;</div><div class="line">        return new LoginInterceptor();</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     *  * &lt;mvc:mapping path=&quot;/**&quot; /&gt;</div><div class="line">     &lt;mvc:exclude-mapping path=&quot;/assets/**&quot; /&gt;</div><div class="line">     &lt;mvc:exclude-mapping path=&quot;/images/**&quot; /&gt;</div><div class="line">     &lt;mvc:exclude-mapping path=&quot;/upload/**&quot; /&gt;</div><div class="line">     &lt;mvc:exclude-mapping path=&quot;/login/**&quot; /&gt;</div><div class="line">     &lt;mvc:exclude-mapping path=&quot;/register/**&quot; /&gt;</div><div class="line">     &lt;mvc:exclude-mapping path=&quot;/forgetPassword/**&quot; /&gt;</div><div class="line">     &lt;mvc:exclude-mapping path=&quot;/check/**&quot; /&gt;</div><div class="line">     &lt;mvc:exclude-mapping path=&quot;/exists/**&quot; /&gt;</div><div class="line">     &lt;mvc:exclude-mapping path=&quot;/code/**&quot; /&gt;</div><div class="line">     * @param registry</div><div class="line">     */</div><div class="line">    @Override</div><div class="line">    public void addInterceptors(InterceptorRegistry registry) &#123;</div><div class="line">        registry.addInterceptor(getLoginInterceptor()).addPathPatterns(&quot;/**&quot;);</div><div class="line">        registry.addInterceptor(getLoginInterceptor()).excludePathPatterns(&quot;/assets/**&quot;,&quot;/images/**&quot;,&quot;/upload/**&quot;,&quot;/login/**&quot;,&quot;/register/**&quot;,&quot;/forgetPassword/**&quot;,&quot;/check/**&quot;,&quot;/exists/**&quot;,&quot;/code/**&quot;);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * &lt;mvc:resources location=&quot;/WEB-INF/assets/&quot; mapping=&quot;/assets/**&quot; /&gt;</div><div class="line">     &lt;mvc:resources location=&quot;/WEB-INF/images/&quot; mapping=&quot;/images/**&quot; /&gt;</div><div class="line">     &lt;mvc:resources location=&quot;/upload/&quot; mapping=&quot;/upload/**&quot; /&gt;</div><div class="line">     * @param registry</div><div class="line">     */</div><div class="line">    @Override</div><div class="line">    public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</div><div class="line">        registry.addResourceHandler(&quot;/assets/**&quot;).addResourceLocations(&quot;classpath:/WEB-INF/assets/&quot;);</div><div class="line">        registry.addResourceHandler(&quot;/images/**&quot;).addResourceLocations(&quot;classpath:/WEB-INF/images/&quot;);</div><div class="line">        registry.addResourceHandler(&quot;/upload/**&quot;).addResourceLocations(&quot;classpath:/upload&quot;);</div><div class="line">        super.addResourceHandlers(registry);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>注释对象旧web项目中的设置，注意拦截器之中引用service或其他需要注入的变量时</p>
<p>配置拦截器不能写成以下形式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@Override</div><div class="line">    public void addInterceptors(InterceptorRegistry registry) &#123;</div><div class="line">        registry.addInterceptor(new LoginInterceptor().addPathPatterns(&quot;/**&quot;);</div><div class="line">       </div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>必须要提前注入，否则LoginInterceptor中变量注入失败</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@Bean</div><div class="line">   public HandlerInterceptor getLoginInterceptor()&#123;</div><div class="line">       return new LoginInterceptor();</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<h3 id="默认error页面"><a href="#默认error页面" class="headerlink" title="默认error页面"></a>默认error页面</h3><p>Application中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"> @Bean</div><div class="line">    public EmbeddedServletContainerCustomizer containerCustomizer() &#123;</div><div class="line"></div><div class="line">        return new EmbeddedServletContainerCustomizer() &#123;</div><div class="line">            @Override</div><div class="line">            public void customize(ConfigurableEmbeddedServletContainer container) &#123;</div><div class="line"></div><div class="line">//                ErrorPage error401Page = new ErrorPage(HttpStatus.UNAUTHORIZED, &quot;/401.html&quot;);</div><div class="line">                ErrorPage error404Page = new ErrorPage(HttpStatus.NOT_FOUND, &quot;/error&quot;);</div><div class="line">//                ErrorPage error500Page = new ErrorPage(HttpStatus.INTERNAL_SERVER_ERROR, &quot;/500.html&quot;);</div><div class="line"></div><div class="line">                container.addErrorPages( error404Page);</div><div class="line">            &#125;</div><div class="line">        &#125;;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="全局错误处理"><a href="#全局错误处理" class="headerlink" title="全局错误处理"></a>全局错误处理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">@ControllerAdvice</div><div class="line">public class GlobalExceptionHandler &#123;</div><div class="line"></div><div class="line"></div><div class="line">    public static final String DEFAULT_ERROR_VIEW = &quot;error&quot;;</div><div class="line">    public static final String DEFAULT_NOT_LOG = &quot;login&quot;;</div><div class="line">    public static final String DEFAULT_INDEX = &quot;index&quot;;</div><div class="line"></div><div class="line"></div><div class="line">    @ExceptionHandler(value = UserNotLoginException.class)</div><div class="line">    public ModelAndView defaultErrorHandler(HttpServletRequest req, Exception e) throws Exception &#123;</div><div class="line">        ModelAndView mav = new ModelAndView();</div><div class="line">        mav.setViewName(DEFAULT_NOT_LOG);</div><div class="line">        return mav;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>数据库源，mybatis，redis之类的就很常规了</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;旧web项目没有采用maven管理依赖包，jsp页面，xml配置环境，mybatis数据库交互，现在改造为springboot项目，最终打包
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
      <category term="springboot" scheme="http://mzeht.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>老式web项目重构springboot帮助文档</title>
    <link href="http://mzeht.com/2017/05/03/2017-05-05/"/>
    <id>http://mzeht.com/2017/05/03/2017-05-05/</id>
    <published>2017-05-03T12:47:33.000Z</published>
    <updated>2017-05-28T08:44:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ol>
<li>采用springboot 1.5.3 重构现有项目</li>
<li>配置文件精简，提高开发效率</li>
<li>maven管理依赖包</li>
<li>注解代替xml</li>
</ol>
<h2 id="如何启动"><a href="#如何启动" class="headerlink" title="如何启动"></a>如何启动</h2><p>开发时idea<br><code>BootlabbookmanagerApplication</code>文件右侧绿色三角形，启动即可</p>
<h2 id="如何打包发布"><a href="#如何打包发布" class="headerlink" title="如何打包发布"></a>如何打包发布</h2><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>本地需要安装maven，添加环境变量<br>项目根目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn clean &amp;&amp; mvn package -Dmaven.test.skip</div></pre></td></tr></table></figure>
<p>在target目录下生成<br><code>bootlabbookmanager-0.0.1-SNAPSHOT.war</code></p>
<h3 id="前台运行"><a href="#前台运行" class="headerlink" title="前台运行"></a>前台运行</h3><p>前台启动（命令行启动，退出命令行，进程跟着退出）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -jar bootlabbookmanager-0.0.1-SNAPSHOT.war</div></pre></td></tr></table></figure>
<h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>后台运行（命令行关闭后进程仍在，发布到服务器上用）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">nohup java -jar  bootlabbookmanager-0.0.1-SNAPSHOT.war &amp;</div></pre></td></tr></table></figure>
<h3 id="重新发布"><a href="#重新发布" class="headerlink" title="重新发布"></a>重新发布</h3><p>查找旧进程并kill</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">➜  target git:(master) ✗ ps -ef|grep bootlabbookmanager-0.0.1-SNAPSHOT.war</div><div class="line">  501  3524  2794   0 12:25上午 ttys000    0:32.90 /usr/bin/java -jar bootlabbookmanager-0.0.1-SNAPSHOT.war</div><div class="line">  501  3536  2794   0 12:25上午 ttys000    0:00.00 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn bootlabbookmanager-0.0.1-SNAPSHOT.war</div><div class="line">➜  target git:(master) ✗ kill 3524</div><div class="line">➜  target git:(master) ✗ </div><div class="line">[1]  + 3524 exit 143   nohup java -jar bootlabbookmanager-0.0.1-SNAPSHOT.war</div><div class="line">➜  target git:(master) ✗ ps -ef|grep bootlabbookmanager-0.0.1-SNAPSHOT.war</div><div class="line">  501  3580  2794   0 12:27上午 ttys000    0:00.00 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn bootlabbookmanager-0.0.1-SNAPSHOT.war</div><div class="line">➜  target git:(master) ✗</div></pre></td></tr></table></figure>
<p>然后替换war包 后台启动新war包</p>
<h2 id="改造概述"><a href="#改造概述" class="headerlink" title="改造概述"></a>改造概述</h2><p>推荐两本书，电子版／实体<br><code>springboot实战</code><br><code>spring实战第四版</code></p>
<p>点到即止，零碎知识点可以以下方式查阅资料<br>推荐</p>
<ol>
<li><code>简书</code> 很多很好的spring文章和系列博客</li>
<li><code>stackoverflow</code> </li>
<li>springboot的官方<code>github</code> 本身就有很多示例了</li>
</ol>
<h3 id="添加jsp支持"><a href="#添加jsp支持" class="headerlink" title="添加jsp支持"></a>添加jsp支持</h3><ol>
<li>Application继承<code>SpringBootServletInitializer</code></li>
<li>pom文件添加jsp支持，servlet，标签，tomcat等等</li>
<li>view解析规则配置</li>
</ol>
<h3 id="登录拦截器"><a href="#登录拦截器" class="headerlink" title="登录拦截器"></a>登录拦截器</h3><p>见<code>WebMvcConfigurerAdapter</code>–》<code>addInterceptors</code></p>
<h3 id="资源映射"><a href="#资源映射" class="headerlink" title="资源映射"></a>资源映射</h3><p>见<code>WebMvcConfigurerAdapter</code>–》<code>addResourceHandlers</code></p>
<h3 id="UserNotLoginException-处理"><a href="#UserNotLoginException-处理" class="headerlink" title="UserNotLoginException 处理"></a>UserNotLoginException 处理</h3><p>见<code>GlobalExceptionHandler</code>–》<code>defaultErrorHandler</code></p>
<h3 id="全局错误页面处理"><a href="#全局错误页面处理" class="headerlink" title="全局错误页面处理"></a>全局错误页面处理</h3><p>见<code>BootlabbookmanagerApplication</code>–》<br><code>EmbeddedServletContainerCustomizer</code></p>
<h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><p>阿里开源druid数据库连接池<br>见<code>LabBookDBConfig</code>，时间问题，未启用数据库连接加密，但加入了监控页面<br>访问<code>http://localhost:8080/druid</code><br>yml文件中找到用户名，密码 登录<br>可查看sql监控，访问，servlet监控</p>
<p>注意：<code>ApplyPurchaseMapper</code>之类文件要添加注解</p>
<h3 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h3><p>见<code>log4j.xml</code></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>Service 相关类都要<code>@Service</code>注解</li>
<li><code>@Autowired</code>一般直接标注在变量上，不用set</li>
<li><code>application.yml</code>可以定义常量</li>
<li>有兴趣可以用jenkins配置自动发布</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;采用springboot 1.5.3 重构现有项目&lt;/li&gt;
&lt;li&gt;配置文件精简，提高开发效率&lt;/li&gt;
&lt;li&gt;maven管
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
      <category term="springboot" scheme="http://mzeht.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>android ndk开发检查包名，签名</title>
    <link href="http://mzeht.com/2017/04/28/2017-04-28-2/"/>
    <id>http://mzeht.com/2017/04/28/2017-04-28-2/</id>
    <published>2017-04-28T06:53:01.000Z</published>
    <updated>2017-05-28T08:44:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>java层传入app的Context，ndk内检查包名和签名特征</p>
<h2 id="java-native-方法"><a href="#java-native-方法" class="headerlink" title="java native 方法"></a>java native 方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">public static native String getSignIfo(Context context);</div></pre></td></tr></table></figure>
<h2 id="c语言调用"><a href="#c语言调用" class="headerlink" title="c语言调用"></a>c语言调用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">JNIEXPORT jstring JNICALL</div><div class="line">Java_com_example_hehe_utils_StringUtils_getSignIfo(JNIEnv *env, jclass type, jobject obj) &#123;</div><div class="line"></div><div class="line"></div><div class="line">    // 获得Context类</div><div class="line">    jclass cls = (*env)-&gt;GetObjectClass(env, obj);</div><div class="line">    // 得到getPackageManager方法的ID</div><div class="line">    jmethodID mid = (*env)-&gt;GetMethodID(env, cls, &quot;getPackageManager&quot;, &quot;()Landroid/content/pm/PackageManager;&quot;);</div><div class="line"></div><div class="line">    // 获得应用包的管理器</div><div class="line">    jobject pm = (*env)-&gt;CallObjectMethod(env, obj, mid);</div><div class="line"></div><div class="line">    // 得到getPackageName方法的ID</div><div class="line">    mid = (*env)-&gt;GetMethodID(env, cls, &quot;getPackageName&quot;, &quot;()Ljava/lang/String;&quot;);</div><div class="line">    // 获得当前应用包名</div><div class="line">    jstring packageName = (jstring)(*env)-&gt;CallObjectMethod(env, obj, mid);</div><div class="line"></div><div class="line">//    printf(&quot;%s&quot;,packageName);</div><div class="line">//    const jbyte *str = (*env)-&gt;GetStringUTFChars(env, packageName, NULL);</div><div class="line">//    __android_log_print(ANDROID_LOG_INFO, &quot;JNITag&quot;,&quot;string From Java To C : %s&quot;, str);</div><div class="line"></div><div class="line">    // 获得PackageManager类</div><div class="line">    cls = (*env)-&gt;GetObjectClass(env, pm);</div><div class="line">    // 得到getPackageInfo方法的ID</div><div class="line">    mid  = (*env)-&gt;GetMethodID(env, cls, &quot;getPackageInfo&quot;, &quot;(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;&quot;);</div><div class="line">    // 获得应用包的信息</div><div class="line">    jobject packageInfo = (*env)-&gt;CallObjectMethod(env, pm, mid, packageName, 0x40); //GET_SIGNATURES = 64;</div><div class="line">    // 获得PackageInfo 类</div><div class="line">    cls = (*env)-&gt;GetObjectClass(env, packageInfo);</div><div class="line">    // 获得签名数组属性的ID</div><div class="line">    jfieldID fid = (*env)-&gt;GetFieldID(env, cls, &quot;signatures&quot;, &quot;[Landroid/content/pm/Signature;&quot;);</div><div class="line">    // 得到签名数组</div><div class="line">    jobjectArray signatures = (jobjectArray)(*env)-&gt;GetObjectField(env, packageInfo, fid);</div><div class="line">    // 得到签名</div><div class="line">    jobject sign = (*env)-&gt;GetObjectArrayElement(env, signatures, 0);</div><div class="line"></div><div class="line">    // 获得Signature类</div><div class="line">    cls = (*env)-&gt;GetObjectClass(env, sign);</div><div class="line">    // 得到toCharsString方法的ID</div><div class="line">    mid = (*env)-&gt;GetMethodID(env, cls, &quot;toCharsString&quot;, &quot;()Ljava/lang/String;&quot;);</div><div class="line"></div><div class="line"></div><div class="line">    jstring signString=(jstring)(*env)-&gt;CallObjectMethod(env, sign, mid);</div><div class="line">//    const jbyte *singn = (*env)-&gt;GetStringUTFChars(env, signString, NULL);</div><div class="line">//    __android_log_print(ANDROID_LOG_INFO, &quot;JNITag&quot;,&quot;string From Java To C : %s&quot;, singn);</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    return packageName;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="http://blog.csdn.net/grafx/article/details/40403577" target="_blank" rel="external">参考链接</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;java层传入app的Context，ndk内检查包名和签名特征&lt;/p&gt;
&lt;h2 id=&quot;java-native-方法&quot;&gt;&lt;a href=&quot;#java-native-方法&quot; class=&quot;headerlink&quot; title=&quot;java native 方法&quot;&gt;&lt;/a&gt;java
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
      <category term="ndk" scheme="http://mzeht.com/tags/ndk/"/>
    
  </entry>
  
  <entry>
    <title>android项目利用cmake方式实现ndk开发</title>
    <link href="http://mzeht.com/2017/04/28/2017-04-28-1/"/>
    <id>http://mzeht.com/2017/04/28/2017-04-28-1/</id>
    <published>2017-04-28T06:53:01.000Z</published>
    <updated>2017-05-28T08:44:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加ndk支持"><a href="#添加ndk支持" class="headerlink" title="添加ndk支持"></a>添加ndk支持</h2><p><code>gradle.properties</code>(project properties)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">org.gradle.daemon=true</div><div class="line">org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8</div><div class="line">org.gradle.parallel=true</div><div class="line">org.gradle.configureondemand=true</div><div class="line">android.useDeprecatedNdk=true</div></pre></td></tr></table></figure>
<h2 id="在需要ndk的模块新建JNI-Folder"><a href="#在需要ndk的模块新建JNI-Folder" class="headerlink" title="在需要ndk的模块新建JNI Folder"></a>在需要ndk的模块新建JNI Folder</h2><p>当前模块下生成了/src/main/jni</p>
<p>这个文件夹下放置<code>CMakeLists.txt</code>，和c文件<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-4-28/13776882-file_1493364079424_4904.png" alt=""></p>
<h2 id="创建CMakeLists-txt"><a href="#创建CMakeLists-txt" class="headerlink" title="创建CMakeLists.txt"></a>创建CMakeLists.txt</h2><p><code>stringutils</code> cmake生成so包命名相关<br>反编译apk，可以发现so包名称为<code>libstringutils.so</code></p>
<p><code>SHARED</code>之后</p>
<p>打包进入so包的文件目录，可以多个</p>
<p><code>cmake_minimum_required(VERSION 3.4.1)</code>默认版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">cmake_minimum_required(VERSION 3.4.1)</div><div class="line"></div><div class="line">add_library(stringutils SHARED</div><div class="line">            stringutils.c)</div><div class="line"></div><div class="line"># Include libraries needed for stringutils lib</div><div class="line">target_link_libraries(stringutils log android)</div></pre></td></tr></table></figure>
<p>##在java文件中创建native方法</p>
<p>如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">public class StringUtils &#123;</div><div class="line"></div><div class="line">    public static native String makeSkey(String[] array, Context context);</div><div class="line">    static &#123;</div><div class="line">        System.loadLibrary(&quot;stringutils&quot;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="创建c文件"><a href="#创建c文件" class="headerlink" title="创建c文件"></a>创建c文件</h2><p>在java报红的方法名处查看智能提示，生成c文件</p>
<p>如</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">#include &lt;jni.h&gt;</div><div class="line"></div><div class="line">JNIEXPORT jstring JNICALL</div><div class="line">Java_com_mzeht_wp_skbyjni_StringUtils_makeSkey(JNIEnv *env, jclass type, jobjectArray array,</div><div class="line">                                               jobject context) &#123;</div><div class="line"></div><div class="line">    // TODO</div><div class="line"></div><div class="line"></div><div class="line">    return (*env)-&gt;NewStringUTF(env, &quot;hehe&quot;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>返回一个“hehe”，运行android项目即可</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;添加ndk支持&quot;&gt;&lt;a href=&quot;#添加ndk支持&quot; class=&quot;headerlink&quot; title=&quot;添加ndk支持&quot;&gt;&lt;/a&gt;添加ndk支持&lt;/h2&gt;&lt;p&gt;&lt;code&gt;gradle.properties&lt;/code&gt;(project properties)
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
      <category term="ndk" scheme="http://mzeht.com/tags/ndk/"/>
    
      <category term="cmake" scheme="http://mzeht.com/tags/cmake/"/>
    
  </entry>
  
  <entry>
    <title>jenkins 发布war包到远程tomcat(含脚本)</title>
    <link href="http://mzeht.com/2017/04/28/2017-04-28/"/>
    <id>http://mzeht.com/2017/04/28/2017-04-28/</id>
    <published>2017-04-28T04:53:01.000Z</published>
    <updated>2017-05-28T08:44:47.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总体步骤"><a href="#总体步骤" class="headerlink" title="总体步骤"></a>总体步骤</h2><ol>
<li>配置源码</li>
<li>编译打包</li>
<li>ssh传输到远处服务器</li>
<li>启动远程服务器脚本</li>
</ol>
<h3 id="配置代码源"><a href="#配置代码源" class="headerlink" title="配置代码源"></a>配置代码源</h3><p>jenkis上的git插件</p>
<h3 id="编译打包"><a href="#编译打包" class="headerlink" title="编译打包"></a>编译打包</h3><p>jenkins机器上安装需要的命令工具<br>一般是maven</p>
<p>构建选项卡中，配置和项目相对应的打包脚本</p>
<p>如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn clean &amp;&amp; mvn package -Dmaven.test.skip</div></pre></td></tr></table></figure>
<h3 id="传输到远程服务器"><a href="#传输到远程服务器" class="headerlink" title="传输到远程服务器"></a>传输到远程服务器</h3><p>jenkins插件<code>ssh publish</code></p>
<p>系统设置中配置远程服务器信息（密钥或用户名密码）</p>
<p><code>构建后操作</code>选项卡中<br>如：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-4-28/37403645-file_1493355931851_4fe5.png" alt=""></p>
<h2 id="启动远程服务器脚本"><a href="#启动远程服务器脚本" class="headerlink" title="启动远程服务器脚本"></a>启动远程服务器脚本</h2><p><code>project_name</code> 生成的war包名称，没有’.war’<br><code>jenkins_dir</code> 本机上jenkins传输来的war包的存储位置<br><code>tomcat_dir</code> 该war包需要放置的tomcat的位置<br><code>shell_name</code> 脚本自身的名称</p>
<p>test-deploy.sh</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"># !bin/sh</div><div class="line"># tomcat路径</div><div class="line">jenkins_dir=&quot;/root/jenkinsproject&quot;</div><div class="line">project_name=&quot;delopytest&quot;</div><div class="line">tomcat_dir=&quot;/usr/apache-tomcat-7.0.70&quot;</div><div class="line"># 当前脚本名称</div><div class="line">shell_name=&quot;test-deploy.sh&quot;</div><div class="line">pid=`ps -ef | grep $tomcat_dir | grep -v $shell_name | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</div><div class="line">echo &quot;old pid:&quot;.$pid</div><div class="line">if test &quot;$pid&quot;</div><div class="line">then </div><div class="line">  echo &quot;kill old pid: $pid ing&quot;</div><div class="line">  kill -9 $pid</div><div class="line">  # 睡眠10s</div><div class="line">  sleep 10s</div><div class="line">else</div><div class="line">	echo &quot;not find old pid&quot;</div><div class="line">fi</div><div class="line"># 删除旧的war包及解压文件夹，拷贝新的war包</div><div class="line">rm -rf $tomcat_dir/webapps/$project_name*</div><div class="line">cp $jenkins_dir/$project_name.war  $tomcat_dir/webapps</div><div class="line">sh $tomcat_dir/bin/startup.sh</div><div class="line">sleep 10s</div><div class="line"># 检查启动</div><div class="line">newpid=`ps -ef | grep $tomcat_dir | grep -v $shell_name | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</div><div class="line">if test &quot;$newpid&quot;</div><div class="line">then</div><div class="line">	echo &quot;new pid:&quot;.$newpid</div><div class="line">	exit</div><div class="line">else</div><div class="line">	echo &quot;not find new pid&quot;</div><div class="line">	exit 1</div><div class="line">fi</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;总体步骤&quot;&gt;&lt;a href=&quot;#总体步骤&quot; class=&quot;headerlink&quot; title=&quot;总体步骤&quot;&gt;&lt;/a&gt;总体步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;配置源码&lt;/li&gt;
&lt;li&gt;编译打包&lt;/li&gt;
&lt;li&gt;ssh传输到远处服务器&lt;/li&gt;
&lt;li&gt;启动远程服务器
    
    </summary>
    
      <category term="运维" scheme="http://mzeht.com/categories/operation/"/>
    
    
      <category term="jenkins" scheme="http://mzeht.com/tags/jenkins/"/>
    
      <category term="shell" scheme="http://mzeht.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis-plugin收费插件破解</title>
    <link href="http://mzeht.com/2017/02/10/Mybatis-plugin%E6%94%B6%E8%B4%B9%E6%8F%92%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    <id>http://mzeht.com/2017/02/10/Mybatis-plugin收费插件破解/</id>
    <published>2017-02-10T15:53:42.000Z</published>
    <updated>2017-05-28T08:44:51.000Z</updated>
    
    <content type="html"><![CDATA[<p>IDEA版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">IntelliJ IDEA 2016.3.4</div><div class="line">Build #IU-163.12024.16, built on January 31, 2017</div><div class="line">Licensed to lan yu</div><div class="line">Subscription is active until February 25, 2017</div><div class="line">JRE: 1.8.0_112-release-408-b6 x86_64</div><div class="line">JVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o</div></pre></td></tr></table></figure>
<p>Mybatis-plugin版本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Version: 2.9</div></pre></td></tr></table></figure>
<p>插件功能介绍地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://www.oschina.net/p/intellij-mybatis-plugin</div></pre></td></tr></table></figure>
<p>破解方法来院地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">http://myoss.github.io/2016/MyBatis-Plugin-%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">➜  IntelliJIdea2016.3 git clone https://github.com/myoss/profile.git</div><div class="line">Cloning into &apos;profile&apos;...</div><div class="line">remote: Counting objects: 297, done.</div><div class="line">remote: Total 297 (delta 0), reused 0 (delta 0), pack-reused 297</div><div class="line">Receiving objects: 100% (297/297), 87.32 KiB | 143.00 KiB/s, done.</div><div class="line">Resolving deltas: 100% (90/90), done.</div><div class="line">➜  IntelliJIdea2016.3 ls</div><div class="line">ECTranslation1.3.jar     GsonFormat.jar           Sexy_Editor.jar          availables.xml           idea-gitignore           jvm-memory-view          mybatis_plus</div><div class="line">GenerateSerialVersionUID MavenRunHelper           TranslationPlugin        codehelper.generator     jr-ide-idea              lombok-plugin            profile</div><div class="line">➜  IntelliJIdea2016.3 cd mybatis_plus</div><div class="line">➜  mybatis_plus ls</div><div class="line">lib</div><div class="line">➜  mybatis_plus cd lib</div><div class="line">➜  lib ls</div><div class="line">mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar</div><div class="line">➜  lib cp -R ~/Library/Application\ Support/IntelliJIdea2016.3/profile/idea/plugin</div><div class="line">usage: cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file target_file</div><div class="line">       cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file ... target_directory</div><div class="line">➜  lib cp -R ~/Library/Application\ Support/IntelliJIdea2016.3/profile/idea/plugin/MybatisPlugin/v2.7\~v2.87 .</div><div class="line">➜  lib ls</div><div class="line">mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar          v2.7~v2.87</div><div class="line">➜  lib cp -R ~/Library/Application\ Support/IntelliJIdea2016.3/profile/idea/plugin/MybatisPlugin/v2.7\~v2.87 .</div><div class="line">➜  lib ls</div><div class="line">mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar          v2.7~v2.87</div><div class="line">➜  lib cp -R ~/Library/Application\ Support/IntelliJIdea2016.3/profile/idea/plugin/MybatisPlugin/v2.7\~v2.87/com .</div><div class="line">➜  lib ls</div><div class="line">com                              mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar          v2.7~v2.87</div><div class="line">➜  lib jar uvf mybatis_plus.jar com</div><div class="line"></div><div class="line">正在添加: com/(输入 = 0) (输出 = 0)(存储了 0%)</div><div class="line">正在添加: com/seventh7/(输入 = 0) (输出 = 0)(存储了 0%)</div><div class="line">正在添加: com/seventh7/mybatis/(输入 = 0) (输出 = 0)(存储了 0%)</div><div class="line">正在添加: com/seventh7/mybatis/dom/(输入 = 0) (输出 = 0)(存储了 0%)</div><div class="line">正在添加: com/seventh7/mybatis/dom/model/(输入 = 0) (输出 = 0)(存储了 0%)</div><div class="line">正在添加: com/seventh7/mybatis/ref/(输入 = 0) (输出 = 0)(存储了 0%)</div><div class="line">正在添加: com/seventh7/mybatis/ref/license/(输入 = 0) (输出 = 0)(存储了 0%)</div><div class="line">正在添加: com/seventh7/mybatis/ref/license/ActivationDriver$1.class(输入 = 1926) (输出 = 797)(压缩了 58%)</div><div class="line">正在添加: com/seventh7/mybatis/ref/license/ActivationDriver.class(输入 = 1398) (输出 = 656)(压缩了 53%)</div><div class="line">正在添加: com/seventh7/mybatis/ref/RefProject$1.class(输入 = 2224) (输出 = 1092)(压缩了 50%)</div><div class="line">正在添加: com/seventh7/mybatis/ref/RefProject.class(输入 = 1982) (输出 = 919)(压缩了 53%)</div><div class="line">正在添加: com/seventh7/mybatis/service/(输入 = 0) (输出 = 0)(存储了 0%)</div><div class="line">正在添加: com/seventh7/mybatis/service/JavaService$1.class(输入 = 1408) (输出 = 613)(压缩了 56%)</div><div class="line">正在添加: com/seventh7/mybatis/service/JavaService$2.class(输入 = 1312) (输出 = 575)(压缩了 56%)</div><div class="line">正在添加: com/seventh7/mybatis/service/JavaService.class(输入 = 10921) (输出 = 4166)(压缩了 61%)</div><div class="line">正在添加: com/seventh7/mybatis/util/(输入 = 0) (输出 = 0)(存储了 0%)</div><div class="line">正在添加: com/seventh7/mybatis/util/JavaUtils$SystemData.class(输入 = 3412) (输出 = 1602)(压缩了 53%)</div><div class="line">正在添加: com/seventh7/mybatis/util/JavaUtils.class(输入 = 13339) (输出 = 4773)(压缩了 64%)</div><div class="line">正在添加: com/seventh7/mybatis/dom/model/Completion.class(输入 = 1663) (输出 = 923)(压缩了 44%)</div><div class="line">➜  lib ls</div><div class="line">com                              mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar          v2.7~v2.87</div><div class="line">➜  lib rm -rf v2.7\~v2.87</div><div class="line">➜  lib ls</div><div class="line">com                              mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;IDEA版本&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div clas
    
    </summary>
    
      <category term="工具" scheme="http://mzeht.com/categories/tool/"/>
    
      <category term="破解" scheme="http://mzeht.com/categories/tool/%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="Mybatis" scheme="http://mzeht.com/tags/Mybatis/"/>
    
      <category term="IDEA" scheme="http://mzeht.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Centos下docker导致的升级内核</title>
    <link href="http://mzeht.com/2017/02/01/Centos%E4%B8%8Bdocker%E5%AF%BC%E8%87%B4%E7%9A%84%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"/>
    <id>http://mzeht.com/2017/02/01/Centos下docker导致的升级内核/</id>
    <published>2017-02-01T05:50:42.000Z</published>
    <updated>2017-05-28T08:44:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>接着上一篇文章</p>
<p>形如下面的错误出现了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ docker run --rm -ti ubuntu:14.04 bin/bash                                       </div><div class="line">FATA[0000] Error response from daemon: mkdir /var/lib/docker/overlay/c4a8f5e516d401534f2d994f5546f7e08639ffd675eb3573267f76d79394f172-init/merged/dev/shm: invalid argument</div></pre></td></tr></table></figure>
<p>Centos下安装docker正常，拉取镜像正常，就在启动容器的时候报错<br><a id="more"></a></p>
<p>一番谷歌，github</p>
<p><a href="https://github.com/docker/docker/issues/10294" target="_blank" rel="external">https://github.com/docker/docker/issues/10294</a></p>
<h1 id="首先检查docker-info"><a href="#首先检查docker-info" class="headerlink" title="首先检查docker info"></a>首先检查docker info</h1><p>如果有</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">WARNING: bridge-nf-call-iptables is disabled</div><div class="line">WARNING: bridge-nf-call-ip6tables is disabled</div></pre></td></tr></table></figure>
<p>就需要添加内核参数，具体看上一篇</p>
<p>之后看到</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Fixed...</div><div class="line"></div><div class="line">from docker official site.</div><div class="line"></div><div class="line">To configure Docker to use the overlay storage driver your Docker host must be running version 3.18 of the Linux kernel (preferably newer) with the overlay kernel module loaded. OverlayFS can operate on top of most supported Linux filesystems. However, ext4 is currently recommended for use in production environments.</div><div class="line">so, update kernel from 3.10.0 to 3.18.0 + fixed the issue.</div></pre></td></tr></table></figure>
<p>提示我们要升级Centos内核3.10.0 to 3.18.0 + </p>
<h1 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h1><h2 id="查看机器内核版本"><a href="#查看机器内核版本" class="headerlink" title="查看机器内核版本"></a>查看机器内核版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">uname -r</div><div class="line">4.9.6-1.el7.elrepo.x86_64</div></pre></td></tr></table></figure>
<p>这里我是升级后在写的文章，升级之前是3.10</p>
<h2 id="查看Linux各版本内核"><a href="#查看Linux各版本内核" class="headerlink" title="查看Linux各版本内核"></a>查看Linux各版本内核</h2><p><a href="https://www.kernel.org/" target="_blank" rel="external">网站地址</a></p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/55278371-file_1485959943374_7bc7.png" alt=""></p>
<p>稳定版 4.9.7</p>
<h2 id="导入key"><a href="#导入key" class="headerlink" title="导入key"></a>导入key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</div></pre></td></tr></table></figure>
<h2 id="安装elrepo的yum源"><a href="#安装elrepo的yum源" class="headerlink" title="安装elrepo的yum源"></a>安装elrepo的yum源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</div></pre></td></tr></table></figure>
<h2 id="安装内核"><a href="#安装内核" class="headerlink" title="安装内核"></a>安装内核</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum --enablerepo=elrepo-kernel install  kernel-ml-devel kernel-ml -y</div></pre></td></tr></table></figure>
<h2 id="查看默认启动顺序"><a href="#查看默认启动顺序" class="headerlink" title="查看默认启动顺序"></a>查看默认启动顺序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">awk -F\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfg</div><div class="line">CentOS Linux (4.9.6-1.el7.elrepo.x86_64) 7 (Core)</div><div class="line">CentOS Linux (3.10.0-514.2.2.el7.x86_64) 7 (Core)</div><div class="line">CentOS Linux (3.10.0-327.22.2.el7.x86_64) 7 (Core)</div><div class="line">CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)</div><div class="line">CentOS Linux (0-rescue-7d26c16f128042a684ea474c9e2c240f) 7 (Core)</div></pre></td></tr></table></figure>
<h2 id="调整启动顺序"><a href="#调整启动顺序" class="headerlink" title="调整启动顺序"></a>调整启动顺序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">grub2-set-default 0</div></pre></td></tr></table></figure>
<h2 id="重新启动"><a href="#重新启动" class="headerlink" title="重新启动"></a>重新启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">reboot</div></pre></td></tr></table></figure>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"> uname -r</div><div class="line">4.9.6-1.el7.elrepo.x86_64</div></pre></td></tr></table></figure>
<p>成功</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接着上一篇文章&lt;/p&gt;
&lt;p&gt;形如下面的错误出现了&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ docker run --rm -ti ubuntu:14.04 bin/bash                                       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FATA[0000] Error response from daemon: mkdir /var/lib/docker/overlay/c4a8f5e516d401534f2d994f5546f7e08639ffd675eb3573267f76d79394f172-init/merged/dev/shm: invalid argument&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Centos下安装docker正常，拉取镜像正常，就在启动容器的时候报错&lt;br&gt;
    
    </summary>
    
      <category term="运维" scheme="http://mzeht.com/categories/operation/"/>
    
      <category term="docker" scheme="http://mzeht.com/categories/operation/docker/"/>
    
    
      <category term="Centos" scheme="http://mzeht.com/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Centos下docker部署rap</title>
    <link href="http://mzeht.com/2017/02/01/Centos%E4%B8%8Bdocker%E9%83%A8%E7%BD%B2rap/"/>
    <id>http://mzeht.com/2017/02/01/Centos下docker部署rap/</id>
    <published>2017-02-01T05:43:42.000Z</published>
    <updated>2017-05-28T08:45:01.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://rap.taobao.org/org/index.do" target="_blank" rel="external">rap官网</a><br><a href="https://github.com/thx/RAP/wiki/home_cn" target="_blank" rel="external">rapgithub地址</a></p>
<p>RAP是一个GUI的WEB接口管理工具。在RAP中，您可定义接口的URL、请求&amp;响应细节格式等等。通过分析这些数据，RAP提供MOCK服务、测试服务等自动化工具。RAP同时提供大量企业级功能，帮助企业和团队高效的工作。</p>
<p>在前后端分离的开发模式下，我们通常需要定义一份接口文档来规范接口的具体信息。如一个请求的地址、有几个参数、参数名称及类型含义等等。RAP 首先方便团队录入、查看和管理这些接口文档，并通过分析结构化的文档数据，重复利用并生成自测数据、提供自测控制台等等… 大幅度提升开发效率</p>
<a id="more"></a>
<p>1.<code>强大的GUI工具</code> 给力的用户体验，你将会爱上使用RAP来管理您的API文档。<br>2.<code>完善的MOCK服务</code> 文档定义好的瞬间，所有接口已经准备就绪。有了MockJS，无论您的业务模型有多复杂，它都能很好的满足。</p>
<h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>由于我是在阿里云上的服务器</p>
<h2 id="采用阿里云的脚本进行安装"><a href="#采用阿里云的脚本进行安装" class="headerlink" title="采用阿里云的脚本进行安装"></a>采用阿里云的脚本进行安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</div></pre></td></tr></table></figure>
<h2 id="添加内核参数"><a href="#添加内核参数" class="headerlink" title="添加内核参数"></a>添加内核参数</h2><p>默认配置下，在 CentOS 使用 Docker 可能会碰到下面的这些警告信息：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">WARNING: bridge-nf-call-iptables is disabled</div><div class="line">WARNING: bridge-nf-call-ip6tables is disabled</div></pre></td></tr></table></figure>
<p>很不巧我就遇到了</p>
<p>添加内核配置参数以启用这些功能。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ sudo tee -a /etc/sysctl.conf &lt;&lt;-EOF</div><div class="line">net.bridge.bridge-nf-call-ip6tables = 1</div><div class="line">net.bridge.bridge-nf-call-iptables = 1</div><div class="line">EOF</div></pre></td></tr></table></figure>
<p>然后重新加载 sysctl.conf</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ sudo sysctl -p</div></pre></td></tr></table></figure>
<h1 id="配置加速器"><a href="#配置加速器" class="headerlink" title="配置加速器"></a>配置加速器</h1><p> 参考阿里云论坛的一篇文章<a href="https://yq.aliyun.com/articles/29941" target="_blank" rel="external">here</a></p>
<p>CentOS的配置方式略微复杂，需要先将默认的配置文件复制出来<br>/lib/systemd/system/docker.service -&gt; /etc/systemd/system/docker.service<br>然后再将加速器地址添加到配置文件的启动命令<br>重启Docker就可以了。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sudo cp -n /lib/systemd/system/docker.service /etc/systemd/system/docker.service</div><div class="line">sudo sed -i &quot;s|ExecStart=/usr/bin/docker daemon|ExecStart=/usr/bin/docker daemon --registry-mirror=&lt;your accelerate address&gt;|g&quot; /etc/systemd/system/docker.service</div><div class="line">sudo systemctl daemon-reload</div><div class="line">sudo service docker restart</div></pre></td></tr></table></figure>
<p>your accelerate address 处填入阿里云账号分配的加速器地址</p>
<h1 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">docker search rap</div><div class="line">NAME                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</div><div class="line">neo4j                           Neo4j is a highly scalable, robust native ...   282       [OK]</div><div class="line">r-base                          R is a system for statistical computation ...   147       [OK]</div><div class="line">arangodb                        ArangoDB - a distributed database with a f...   78        [OK]</div><div class="line">orientdb                        OrientDB a Multi-Model Open Source NoSQL D...   46        [OK]</div><div class="line">ubuntu-debootstrap              debootstrap --variant=minbase --components...   27        [OK]</div><div class="line">rapidftr/rapidftr               UNICEF RapidFTR (Family Tracing and Reunif...   2                    [OK]</div><div class="line">rapi/psgi                       Image for running PSGI apps, comes with Ra...   2                    [OK]</div><div class="line">huangfushun/rap                 ali rap web ui docker file                      1                    [OK]</div><div class="line">lihuansse/rap                   RAP 接口管理工具                                      1</div><div class="line">masonliu/rap                    Docker Image for RAP https://github.com/th...   1</div><div class="line">rapidoid                        Rapidoid is a high-performance HTTP server...   1         [OK]</div><div class="line">ukgovdatascience/rap-docker     Environment for reproducible analytical pi...   0                    [OK]</div><div class="line">rapidreg/rapidreg                                                               0                    [OK]</div><div class="line">raphiz/raphael.li                                                               0                    [OK]</div><div class="line">rapi/rapidapp                   Standard RapidApp base image, from officia...   0                    [OK]</div><div class="line">team19awshack/rapidprowebhook   RapidProWebhook                                 0                    [OK]</div><div class="line">tp81/rapidstorm                 RapidSTORM docker image                         0                    [OK]</div><div class="line">qdsang/rap                      docker rap alpine                               0                    [OK]</div><div class="line">raphsfeir/raphaelsfeir          Portfolio and blog for me                       0                    [OK]</div><div class="line">rapidpro/rapidpro-base          Base Python 2.7 + geolibs Docker image for...   0                    [OK]</div><div class="line">tonimichel/rapidflask           A boilerplate flask application for easy s...   0                    [OK]</div><div class="line">andreweskeclarke/rapidftr                                                       0                    [OK]</div><div class="line">raphiz/mathe.raphael.li                                                         0                    [OK]</div><div class="line">raphaelgroup/magi                                                               0                    [OK]</div><div class="line">divio/rapidpro                  RapidPro in docker.                             0                    [OK]</div></pre></td></tr></table></figure>
<p>这里选择lihuansse/rap</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker pull lihuansse/rap</div></pre></td></tr></table></figure>
<p>创建并启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker run --name rap -p 8080:8080 -d lihuansse/rap:latest</div></pre></td></tr></table></figure>
<p>然而就在即将完成这最后一步的时候</p>
<p>形如下面的错误出现了</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ docker run --rm -ti ubuntu:14.04 bin/bash                                       </div><div class="line">FATA[0000] Error response from daemon: mkdir /var/lib/docker/overlay/c4a8f5e516d401534f2d994f5546f7e08639ffd675eb3573267f76d79394f172-init/merged/dev/shm: invalid argument</div></pre></td></tr></table></figure>
<p>请看下回分解</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://rap.taobao.org/org/index.do&quot;&gt;rap官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/thx/RAP/wiki/home_cn&quot;&gt;rapgithub地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RAP是一个GUI的WEB接口管理工具。在RAP中，您可定义接口的URL、请求&amp;amp;响应细节格式等等。通过分析这些数据，RAP提供MOCK服务、测试服务等自动化工具。RAP同时提供大量企业级功能，帮助企业和团队高效的工作。&lt;/p&gt;
&lt;p&gt;在前后端分离的开发模式下，我们通常需要定义一份接口文档来规范接口的具体信息。如一个请求的地址、有几个参数、参数名称及类型含义等等。RAP 首先方便团队录入、查看和管理这些接口文档，并通过分析结构化的文档数据，重复利用并生成自测数据、提供自测控制台等等… 大幅度提升开发效率&lt;/p&gt;
    
    </summary>
    
      <category term="运维" scheme="http://mzeht.com/categories/operation/"/>
    
      <category term="docker" scheme="http://mzeht.com/categories/operation/docker/"/>
    
    
      <category term="Centos" scheme="http://mzeht.com/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>docker相关概念</title>
    <link href="http://mzeht.com/2017/02/01/dokcer%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/"/>
    <id>http://mzeht.com/2017/02/01/dokcer相关概念/</id>
    <published>2017-02-01T03:43:42.000Z</published>
    <updated>2017-05-28T08:45:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Docker-容器"><a href="#Docker-容器" class="headerlink" title="Docker 容器"></a>Docker 容器</h2><p>镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</p>
<p>容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 命名空间。因此容器可以拥有自己的 root 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。这种特性使得容器封装的应用比直接在宿主运行更加安全。也因为这种隔离的特性，很多人初学 Docker 时常常会把容器和虚拟机搞混。</p>
<a id="more"></a>
<p>前面讲过镜像使用的是分层存储，容器也是如此。每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为容器存储层。</p>
<p>容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保存于容器存储层的信息都会随容器删除而丢失。</p>
<p>按照 Docker 最佳实践的要求，容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操作，都应该使用 数据卷（Volume）、或者绑定宿主目录，在这些位置的读写会跳过容器存储层，直接对宿主(或网络存储)发生读写，其性能和稳定性更高。</p>
<p>数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡。因此，使用数据卷后，容器可以随意删除、重新 run，数据却不会丢失。</p>
<h2 id="Docker-镜像"><a href="#Docker-镜像" class="headerlink" title="Docker 镜像"></a>Docker 镜像</h2><p>我们都知道，操作系统分为内核和用户空间。对于 Linux 而言，内核启动后，会挂载 root 文件系统为其提供用户空间支持。而 Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:14.04 就包含了完整的一套 Ubuntu 14.04 最小系统的 root 文件系统。</p>
<p>Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。</p>
<h3 id="分层存储"><a href="#分层存储" class="headerlink" title="分层存储"></a>分层存储</h3><p>因为镜像包含操作系统完整的 root 文件系统，其体积往往是庞大的，因此在 Docker 设计时，就充分利用 Union FS 的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 ISO 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。</p>
<p>镜像构建时，会一层层构建，前一层是后一层的基础。每一层构建完就不会再发生改变，后一层上的任何改变只发生在自己这一层。比如，删除前一层文件的操作，实际不是真的删除前一层的文件，而是仅在当前层标记为该文件已删除。在最终容器运行的时候，虽然不会看到这个文件，但是实际上该文件会一直跟随镜像。因此，在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。</p>
<p>分层存储的特征还使得镜像的复用、定制变的更为容易。甚至可以用之前构建好的镜像作为基础层，然后进一步添加新的层，以定制自己所需的内容，构建新的镜像。</p>
<p>关于镜像构建，将会在后续相关章节中做进一步的讲解。</p>
<h2 id="Docker-Registry"><a href="#Docker-Registry" class="headerlink" title="Docker Registry"></a>Docker Registry</h2><p>镜像构建完成后，可以很容易的在当前宿主上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，<a href="https://docs.docker.com/registry/" target="_blank" rel="external">Docker Registry</a> 就是这样的服务。</p>
<p>一个 <strong>Docker Registry</strong> 中可以包含多个<strong>仓库</strong>（Repository）；每个仓库可以包含多个<strong>标签</strong>（Tag）；每个标签对应一个镜像。</p>
<p>一般而言，一个仓库包含的是同一个软件的不同版本的镜像，而标签则用于对应于软件的的不同版本。我们可以通过 <code>&lt;仓库名&gt;:&lt;标签&gt;</code> 的格式来指定具体是哪个版本的镜像。如果不给出标签，将以 <code>latest</code> 作为默认标签。</p>
<p>以 <a href="https://hub.docker.com/_/ubuntu/" target="_blank" rel="external">Ubuntu 镜像</a> 为例，<code>ubuntu</code> 是仓库的名字，其内包含有不同的版本标签，如，<code>14.04</code>, <code>16.04</code>。我们可以通过 <code>ubuntu:14.04</code>，或者 <code>ubuntu:16.04</code> 来具体指定所需哪个版本的镜像。如果忽略了标签，比如 <code>ubuntu</code>，那将视为 <code>ubuntu:latest</code>。</p>
<p>仓库名经常以 <em>两段式路径</em> 形式出现，比如 <code>jwilder/nginx-proxy</code>，前者往往意味着 Docker Registry 多用户环境下的用户名，后者则往往是对应的软件名。但这并非绝对，取决于所使用的具体 Docker Registry 的软件或服务。</p>
<h3 id="Docker-Registry-公开服务"><a href="#Docker-Registry-公开服务" class="headerlink" title="Docker Registry 公开服务"></a>Docker Registry 公开服务</h3><p>Docker Registry 公开服务是开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。</p>
<p>最常使用的 Registry 公开服务是官方的 <a href="https://hub.docker.com/" target="_blank" rel="external">Docker Hub</a>，这也是默认的 Registry，并拥有大量的高质量的官方镜像。除此以外，还有 <a href="https://coreos.com/" target="_blank" rel="external">CoreOS</a> 的 <a href="https://quay.io/repository/" target="_blank" rel="external">Quay.io</a>，CoreOS 相关的镜像存储在这里；Google 的 <a href="https://cloud.google.com/container-registry/" target="_blank" rel="external">Google Container Registry</a>，<a href="http://kubernetes.io/" target="_blank" rel="external">Kubernetes</a> 的镜像使用的就是这个服务。</p>
<p>由于某些原因，在国内访问这些服务可能会比较慢。国内的一些云服务商提供了针对 Docker Hub 的镜像服务（Registry Mirror），这些镜像服务被称为<strong>加速器</strong>。常见的有 <a href="https://cr.console.aliyun.com/#/accelerator" target="_blank" rel="external">阿里云加速器</a>、<a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="external">DaoCloud 加速器</a>、<a href="http://docs.alauda.cn/feature/accelerator.html" target="_blank" rel="external">灵雀云加速器</a>等。使用加速器会直接从国内的地址下载 Docker Hub 的镜像，比直接从官方网站下载速度会提高很多。在后面的章节中会有进一步如何配置加速器的讲解。</p>
<p>国内也有一些云服务商提供类似于 Docker Hub 的公开服务。比如 <a href="https://hub.tenxcloud.com/" target="_blank" rel="external">时速云镜像仓库</a>、<a href="https://c.163.com/hub#/m/library/" target="_blank" rel="external">网易云镜像服务</a>、<a href="https://hub.daocloud.io/" target="_blank" rel="external">DaoCloud 镜像市场</a>、<a href="https://cr.console.aliyun.com" target="_blank" rel="external">阿里云镜像库</a>等。</p>
<h3 id="私有-Docker-Registry"><a href="#私有-Docker-Registry" class="headerlink" title="私有 Docker Registry"></a>私有 Docker Registry</h3><p>除了使用公开服务外，用户还可以在本地搭建私有 Docker Registry。Docker 官方提供了 <a href="https://hub.docker.com/_/registry/" target="_blank" rel="external">Docker Registry 镜像</a>，可以直接使用做为私有 Registry 服务。在后续的相关章节中，会有进一步的搭建私有 Registry 服务的讲解。</p>
<p>开源的 Docker Registry 镜像只提供了 <a href="https://docs.docker.com/registry/spec/api/" target="_blank" rel="external">Docker Registry API</a> 的服务端实现，足以支持 <code>docker</code> 命令，不影响使用。但不包含图形界面，以及镜像维护、用户管理、访问控制等高级功能。在官方的商业化版本 <a href="https://docs.docker.com/datacenter/dtr/2.0/" target="_blank" rel="external">Docker Trusted Registry</a> 中，提供了这些高级功能。</p>
<p>除了官方的 Docker Registry 外，还有第三方软件实现了 Docker Registry API，甚至提供了用户界面以及一些高级功能。比如，<a href="http://vmware.github.io/harbor/index_cn.html" target="_blank" rel="external">VMWare Harbor</a> 和 <a href="https://www.sonatype.com/docker" target="_blank" rel="external">Sonatype Nexus</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Docker-容器&quot;&gt;&lt;a href=&quot;#Docker-容器&quot; class=&quot;headerlink&quot; title=&quot;Docker 容器&quot;&gt;&lt;/a&gt;Docker 容器&lt;/h2&gt;&lt;p&gt;镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。&lt;/p&gt;
&lt;p&gt;容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 命名空间。因此容器可以拥有自己的 root 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。这种特性使得容器封装的应用比直接在宿主运行更加安全。也因为这种隔离的特性，很多人初学 Docker 时常常会把容器和虚拟机搞混。&lt;/p&gt;
    
    </summary>
    
      <category term="运维" scheme="http://mzeht.com/categories/operation/"/>
    
      <category term="docker" scheme="http://mzeht.com/categories/operation/docker/"/>
    
    
      <category term="docker" scheme="http://mzeht.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>mac下docker的应用</title>
    <link href="http://mzeht.com/2017/01/28/Mac%E4%B8%8Bdocker%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://mzeht.com/2017/01/28/Mac下docker的应用/</id>
    <published>2017-01-28T01:17:42.000Z</published>
    <updated>2017-05-28T08:45:08.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mac安装docker"><a href="#mac安装docker" class="headerlink" title="mac安装docker"></a>mac安装docker</h1><p><a href="https://download.docker.com/mac/stable/Docker.dmg" target="_blank" rel="external">下载地址</a><br>一路next</p>
<p>最新版<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-1-28/31352377-file_1485609643545_57d2.png" alt=""></p>
<p>安装好以上安装包后，打开kitematic,提示下载此软件，<br>下载好后拖入application</p>
<p> kitematic是docker收购的gui客户端<br> <a id="more"></a><br> ktematic启动方式既可以是监控已运行的docker，也可以是另启动一个虚拟机，如图<br> <img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/67359041-file_1485919722478_98b.png" alt=""><br> 此处建议前者（启动速度快，ktematic默认就是前者启动方式，后者还要virtualbox）</p>
<p> <img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/41048694-file_1485919676611_9d85.png" alt=""></p>
<p>上图左侧就是docker客户端启动后，存在的容器及相关信息，可以运行，重启，查看dockerhub上的文档，有容器内日志，web项目右侧还有预览画面，非常方便，但是相关命令还是要熟悉，gui为辅助，大部分服务器上的操作还是要靠手敲命令</p>
<h2 id="配置加速器"><a href="#配置加速器" class="headerlink" title="配置加速器"></a>配置加速器</h2><p><a href="https://cr.console.aliyun.com/#/accelerator" target="_blank" rel="external">阿里云加速器获取地址</a><br>注册一个阿里云账号，访问以上地址，查看加速器，就可以看到分配的加速器地址</p>
<p><a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="external">DaoCloud加速器</a><br>注册并获得加速器地址</p>
<p>到客户端的Daemon选项卡配置获取到的地址<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/58855725-file_1485919966984_1093e.png" alt=""><br>preferens-Damon-Basic<br>Registry mirrors</p>
<h2 id="命令测试"><a href="#命令测试" class="headerlink" title="命令测试"></a>命令测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">➜  ~ docker --version</div><div class="line">Docker version 1.13.0, build 49bf474</div><div class="line">➜  ~ docker--compose --version</div><div class="line">zsh: command not found: docker--compose</div><div class="line">➜  ~ docker-compose --version</div><div class="line">docker-compose version 1.10.0, build 4bd6f1a</div><div class="line">➜  ~ docker-machine --version</div><div class="line">docker-machine version 0.9.0, build 15fd4c7</div><div class="line">➜  ~</div></pre></td></tr></table></figure>
<h1 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h1><p>docker search </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">➜  ~ docker search rap</div><div class="line">NAME                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</div><div class="line">neo4j                           Neo4j is a highly scalable, robust native ...   282       [OK]</div><div class="line">r-base                          R is a system for statistical computation ...   147       [OK]</div><div class="line">arangodb                        ArangoDB - a distributed database with a f...   78        [OK]</div><div class="line">orientdb                        OrientDB a Multi-Model Open Source NoSQL D...   46        [OK]</div><div class="line">ubuntu-debootstrap              debootstrap --variant=minbase --components...   27        [OK]</div><div class="line">rapidftr/rapidftr               UNICEF RapidFTR (Family Tracing and Reunif...   2                    [OK]</div><div class="line">rapi/psgi                       Image for running PSGI apps, comes with Ra...   2                    [OK]</div><div class="line">masonliu/rap                    Docker Image for RAP https://github.com/th...   1</div><div class="line">huangfushun/rap                 ali rap web ui docker file                      1                    [OK]</div><div class="line">lihuansse/rap                   RAP 接口管理工具                                      1</div><div class="line">rapidoid                        Rapidoid is a high-performance HTTP server...   1         [OK]</div><div class="line">ukgovdatascience/rap-docker     Environment for reproducible analytical pi...   0                    [OK]</div><div class="line">rapidreg/rapidreg                                                               0                    [OK]</div><div class="line">raphiz/raphael.li                                                               0                    [OK]</div><div class="line">rapi/rapidapp                   Standard RapidApp base image, from officia...   0                    [OK]</div><div class="line">team19awshack/rapidprowebhook   RapidProWebhook                                 0                    [OK]</div><div class="line">tp81/rapidstorm                 RapidSTORM docker image                         0                    [OK]</div><div class="line">qdsang/rap                      docker rap alpine                               0                    [OK]</div><div class="line">raphsfeir/raphaelsfeir          Portfolio and blog for me                       0                    [OK]</div><div class="line">rapidpro/rapidpro-base          Base Python 2.7 + geolibs Docker image for...   0                    [OK]</div><div class="line">tonimichel/rapidflask           A boilerplate flask application for easy s...   0                    [OK]</div><div class="line">raphaelgroup/magi                                                               0                    [OK]</div><div class="line">andreweskeclarke/rapidftr                                                       0                    [OK]</div><div class="line">raphiz/mathe.raphael.li                                                         0                    [OK]</div><div class="line">divio/rapidpro                  RapidPro in docker.                             0                    [OK]</div></pre></td></tr></table></figure>
<p>GUI</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/45031596-file_1485920300648_448b.png" alt=""></p>
<p>我有时gui客户端网络错误，修改偏好设置-网络-dns-8.8.8.8后正常</p>
<h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><p> docker pull 【镜像名称】</p>
<h2 id="列出镜像"><a href="#列出镜像" class="headerlink" title="列出镜像"></a>列出镜像</h2><p>docker images</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">➜  ~ docker images</div><div class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">mzeht/webv2         latest              8e684c1fb7d3        30 hours ago        182 MB</div><div class="line">nginx               v2                  8e684c1fb7d3        30 hours ago        182 MB</div><div class="line">nginx               latest              cc1b61406712        7 days ago          182 MB</div><div class="line">ubuntu              14.04               b969ab9f929b        11 days ago         188 MB</div><div class="line">hello-world         latest              48b5124b2768        2 weeks ago         1.84 kB</div><div class="line">centos              latest              67591570dd29        6 weeks ago         192 MB</div><div class="line">lihuansse/rap       latest              3ded84cdf4f5        3 months ago        1.14 GB</div></pre></td></tr></table></figure>
<h2 id="删除本地镜像"><a href="#删除本地镜像" class="headerlink" title="删除本地镜像"></a>删除本地镜像</h2><p>如果要删除本地的镜像，可以使用 <code>docker rmi</code> 命令，其格式为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker rmi [选项] &lt;镜像1&gt; [&lt;镜像2&gt; ...]</div></pre></td></tr></table></figure>
<p><em>注意 <code>docker rm</code> 命令是删除容器，不要混淆。</em></p>
<h3 id="用-ID、镜像名、摘要删除镜像"><a href="#用-ID、镜像名、摘要删除镜像" class="headerlink" title="用 ID、镜像名、摘要删除镜像"></a>用 ID、镜像名、摘要删除镜像</h3><p>其中，<code>&lt;镜像&gt;</code> 可以是 <code>镜像短 ID</code>、<code>镜像长 ID</code>、<code>镜像名</code> 或者 <code>镜像摘要</code>。</p>
<p>比如我们有这么一些镜像：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ docker images</div><div class="line">REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">centos                      latest              0584b3d2cf6d        3 weeks ago         196.5 MB</div><div class="line">redis                       alpine              501ad78535f0        3 weeks ago         21.03 MB</div><div class="line">docker                      latest              cf693ec9b5c7        3 weeks ago         105.1 MB</div><div class="line">nginx                       latest              e43d811ce2f4        5 weeks ago         181.5 MB</div></pre></td></tr></table></figure>
<p>我们可以用镜像的完整 ID，也称为 <code>长 ID</code>，来删除镜像。使用脚本的时候可能会用长 ID，但是人工输入就太累了，所以更多的时候是用 <code>短 ID</code> 来删除镜像。<code>docker images</code> 默认列出的就已经是短 ID 了，一般取前3个字符以上，只要足够区分于别的镜像就可以了。</p>
<p>比如这里，如果我们要删除 <code>redis:alpine</code> 镜像，可以执行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">$ docker rmi 501</div><div class="line">Untagged: redis:alpine</div><div class="line">Untagged: redis@sha256:f1ed3708f538b537eb9c2a7dd50dc90a706f7debd7e1196c9264edeea521a86d</div><div class="line">Deleted: sha256:501ad78535f015d88872e13fa87a828425117e3d28075d0c117932b05bf189b7</div><div class="line">Deleted: sha256:96167737e29ca8e9d74982ef2a0dda76ed7b430da55e321c071f0dbff8c2899b</div><div class="line">Deleted: sha256:32770d1dcf835f192cafd6b9263b7b597a1778a403a109e2cc2ee866f74adf23</div><div class="line">Deleted: sha256:127227698ad74a5846ff5153475e03439d96d4b1c7f2a449c7a826ef74a2d2fa</div><div class="line">Deleted: sha256:1333ecc582459bac54e1437335c0816bc17634e131ea0cc48daa27d32c75eab3</div><div class="line">Deleted: sha256:4<span class="built_in">fc</span>455b921edf9c4aea207c51ab39b10b06540c8b4825ba57b3feed1668fa7c7</div></pre></td></tr></table></figure>
<p>我们也可以用<code>镜像名</code>，也就是 <code>&lt;仓库名&gt;:&lt;标签&gt;</code>，来删除镜像。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ docker rmi centos</div><div class="line">Untagged: centos:latest</div><div class="line">Untagged: centos@sha256:b2f9d1c0ff5f87a4743104d099a3d561002ac500db1b9bfa02a783a46e0d366c</div><div class="line">Deleted: sha256:0584b3d2cf6d235ee310cf14b54667d889887b838d3f3d3033acd70<span class="built_in">fc</span>3c48b8a</div><div class="line">Deleted: sha256:97ca462ad9eeae25941546209454496e1d66749d53dfa2ee32bf1faabd239d38</div></pre></td></tr></table></figure>
<p>当然，更精确的是使用 <code>镜像摘要</code> 删除镜像。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ docker images --digests</div><div class="line">REPOSITORY                  TAG                 DIGEST                                                                    IMAGE ID            CREATED             SIZE</div><div class="line">node                        slim                sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228   6e0c4c8e3913        3 weeks ago         214 MB</div><div class="line"></div><div class="line">$ docker rmi node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228</div><div class="line">Untagged: node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228</div></pre></td></tr></table></figure>
<h3 id="Untagged-和-Deleted"><a href="#Untagged-和-Deleted" class="headerlink" title="Untagged 和 Deleted"></a>Untagged 和 Deleted</h3><p>如果观察上面这几个命令的运行输出信息的话，你会注意到删除行为分为两类，一类是 <code>Untagged</code>，另一类是 <code>Deleted</code>。我们之前介绍过，镜像的唯一标识是其 ID 和摘要，而一个镜像可以有多个标签。</p>
<p>因此当我们使用上面命令删除镜像的时候，实际上是在要求删除某个标签的镜像。所以首先需要做的是将满足我们要求的所有镜像标签都取消，这就是我们看到的 <code>Untagged</code> 的信息。因为一个镜像可以对应多个标签，因此当我们删除了所指定的标签后，可能还有别的标签指向了这个镜像，如果是这种情况，那么 <code>Delete</code> 行为就不会发生。所以并非所有的 <code>docker rmi</code> 都会产生删除镜像的行为，有可能仅仅是取消了某个标签而已。</p>
<p>当该镜像所有的标签都被取消了，该镜像很可能会失去了存在的意义，因此会触发删除行为。镜像是多层存储结构，因此在删除的时候也是从上层向基础层方向依次进行判断删除。镜像的多层结构让镜像复用变动非常容易，因此很有可能某个其它镜像正依赖于当前镜像的某一层。这种情况，依旧不会触发删除该层的行为。直到没有任何层依赖当前层时，才会真实的删除当前层。这就是为什么，有时候会奇怪，为什么明明没有别的标签指向这个镜像，但是它还是存在的原因，也是为什么有时候会发现所删除的层数和自己 <code>docker pull</code> 看到的层数不一样的源。</p>
<p>除了镜像依赖以外，还需要注意的是容器对镜像的依赖。如果有用这个镜像启动的容器存在（即使容器没有运行），那么同样不可以删除这个镜像。之前讲过，容器是以镜像为基础，再加一层容器存储层，组成这样的多层存储结构去运行的。因此该镜像如果被这个容器所依赖的，那么删除必然会导致故障。如果这些容器是不需要的，应该先将它们删除，然后再来删除镜像。</p>
<h3 id="用-docker-images-命令来配合"><a href="#用-docker-images-命令来配合" class="headerlink" title="用 docker images 命令来配合"></a>用 docker images 命令来配合</h3><p>像其它可以承接多个实体的命令一样，可以使用 <code>docker images -q</code> 来配合使用 <code>docker rmi</code>，这样可以成批的删除希望删除的镜像。比如之前我们介绍过的，删除虚悬镜像的指令是：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker rmi $(docker images -q <span class="_">-f</span> dangling=<span class="literal">true</span>)</div></pre></td></tr></table></figure>
<p>我们在“镜像列表”章节介绍过很多过滤镜像列表的方式都可以拿过来使用。</p>
<p>比如，我们需要删除所有仓库名为 <code>redis</code> 的镜像：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker rmi $(docker images -q redis)</div></pre></td></tr></table></figure>
<p>或者删除所有在 <code>mongo:3.2</code> 之前的镜像：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ docker rmi $(docker images -q <span class="_">-f</span> before=mongo:3.2)</div></pre></td></tr></table></figure>
<p>充分利用你的想象力和 Linux 命令行的强大，可以完成很多非常赞的功能。</p>
<h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><p>##启动容器<br>启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（stopped）的容器重新启动。</p>
<p>因为 Docker 的容器实在太轻量级了，很多时候用户都是随时删除和新创建容器。</p>
<p>###新建并启动<br>所需要的命令主要为 <code>docker run</code>。</p>
<p>例如，下面的命令输出一个 “Hello World”，之后终止容器。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo docker run ubuntu:14.04 /bin/echo &apos;Hello world&apos;</div><div class="line">Hello world</div></pre></td></tr></table></figure></p>
<p>这跟在本地直接执行 <code>/bin/echo &#39;hello world&#39;</code> 几乎感觉不出任何区别。</p>
<p>下面的命令则启动一个 bash 终端，允许用户进行交互。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo docker run -t -i ubuntu:14.04 /bin/bash</div><div class="line">root@af8bae53bdd3:/#</div></pre></td></tr></table></figure></p>
<p>其中，<code>-t</code> 选项让Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上， <code>-i</code> 则让容器的标准输入保持打开。</p>
<p>在交互模式下，用户可以通过所创建的终端来输入命令，例如</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">root@af8bae53bdd3:/# pwd</div><div class="line">/</div><div class="line">root@af8bae53bdd3:/# ls</div><div class="line">bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var</div></pre></td></tr></table></figure>
<p>当利用 <code>docker run</code> 来创建容器时，Docker 在后台运行的标准操作包括：</p>
<ul>
<li>检查本地是否存在指定的镜像，不存在就从公有仓库下载</li>
<li>利用镜像创建并启动一个容器</li>
<li>分配一个文件系统，并在只读的镜像层外面挂载一层可读写层</li>
<li>从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去</li>
<li>从地址池配置一个 ip 地址给容器</li>
<li>执行用户指定的应用程序</li>
<li>执行完毕后容器被终止</li>
</ul>
<p>###启动已终止容器<br>可以利用 <code>docker start</code> 命令，直接将一个已经终止的容器启动运行。</p>
<p>容器的核心为所执行的应用程序，所需要的资源都是应用程序运行所必需的。除此之外，并没有其它的资源。可以在伪终端中利用 <code>ps</code> 或 <code>top</code> 来查看进程信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">root@ba267838cc1b:/# ps</div><div class="line">  PID TTY          TIME CMD</div><div class="line">    1 ?        00:00:00 bash</div><div class="line">   11 ?        00:00:00 ps</div></pre></td></tr></table></figure>
<p>可见，容器中仅运行了指定的 bash 应用。这种特点使得 Docker 对资源的利用率极高，是货真价实的轻量级虚拟化。</p>
<p>##后台(background)运行</p>
<p>更多的时候，需要让 Docker在后台运行而不是直接把执行命令的结果输出在当前宿主机下。此时，可以通过添加 <code>-d</code> 参数来实现。</p>
<p>下面举两个例子来说明一下。</p>
<p>如果不使用 <code>-d</code> 参数运行容器。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sudo docker run ubuntu:14.04 /bin/sh -c &quot;while true; do echo hello world; sleep 1; done&quot;</div><div class="line">hello world</div><div class="line">hello world</div><div class="line">hello world</div><div class="line">hello world</div></pre></td></tr></table></figure>
<p>容器会把输出的结果(STDOUT)打印到宿主机上面</p>
<p>如果使用了 <code>-d</code> 参数运行容器。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ sudo docker run -d ubuntu:14.04 /bin/sh -c &quot;while true; do echo hello world; sleep 1; done&quot;</div><div class="line">77b2dc01fe0f3f1265df143181e7b9af5e05279a884f4776ee75350ea9d8017a</div></pre></td></tr></table></figure>
<p>此时容器会在后台运行并不会把输出的结果(STDOUT)打印到宿主机上面(输出结果可以用docker logs 查看)。</p>
<p><strong>注：</strong> 容器是否会长久运行，是和docker run指定的命令有关，和 <code>-d</code> 参数无关。</p>
<p>使用 <code>-d</code> 参数启动后会返回一个唯一的 id，也可以通过 <code>docker ps</code> 命令来查看容器信息。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ sudo docker ps</div><div class="line">CONTAINER ID  IMAGE         COMMAND               CREATED        STATUS       PORTS NAMES</div><div class="line">77b2dc01fe0f  ubuntu:14.04  /bin/sh -c &apos;while tr  2 minutes ago  Up 1 minute        agitated_wright</div></pre></td></tr></table></figure>
<p>要获取容器的输出信息，可以通过 <code>docker logs</code> 命令。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ sudo docker logs [container ID or NAMES]</div><div class="line">hello world</div><div class="line">hello world</div><div class="line">hello world</div><div class="line">. . .</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;mac安装docker&quot;&gt;&lt;a href=&quot;#mac安装docker&quot; class=&quot;headerlink&quot; title=&quot;mac安装docker&quot;&gt;&lt;/a&gt;mac安装docker&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://download.docker.com/mac/stable/Docker.dmg&quot;&gt;下载地址&lt;/a&gt;&lt;br&gt;一路next&lt;/p&gt;
&lt;p&gt;最新版&lt;br&gt;&lt;img src=&quot;http://7xqtsx.com1.z0.glb.clouddn.com/17-1-28/31352377-file_1485609643545_57d2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;安装好以上安装包后，打开kitematic,提示下载此软件，&lt;br&gt;下载好后拖入application&lt;/p&gt;
&lt;p&gt; kitematic是docker收购的gui客户端&lt;br&gt;
    
    </summary>
    
      <category term="运维" scheme="http://mzeht.com/categories/operation/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/operation/java/"/>
    
    
      <category term="docker" scheme="http://mzeht.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>阿里云Centos配置nginx</title>
    <link href="http://mzeht.com/2017/01/24/%E9%98%BF%E9%87%8C%E4%BA%91centos%E9%85%8D%E7%BD%AEnginx/"/>
    <id>http://mzeht.com/2017/01/24/阿里云centos配置nginx/</id>
    <published>2017-01-23T16:17:23.000Z</published>
    <updated>2017-05-28T08:45:18.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近写了一个自已用的微服务，放在阿里云主机上，但是带ip的接口看着还是很别扭的，于是安装nginx设置一下域名<br><a id="more"></a></p>
<p>采用的是下载源码包，编译安装的方式</p>
<h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><p>make</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install gcc automake autoconf libtool make</div></pre></td></tr></table></figure>
<p>g++</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install gcc gcc-c++</div></pre></td></tr></table></figure>
<p>PCRE</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install pcre pcre-devel</div></pre></td></tr></table></figure>
<p>zlib</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install zlib zlib-devel</div></pre></td></tr></table></figure>
<p>OpenSSL</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install openssl openssl-devel</div></pre></td></tr></table></figure>
<h1 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://nginx.org/download/nginx-1.10.1.tar.gz</div><div class="line">tar zxf nginx-1.10.1.tar.gz</div><div class="line">cd nginx-1.10.1/</div></pre></td></tr></table></figure>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>./configure<br>make<br>make install</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>安装好后出现以下目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/usr/local/nginx</div><div class="line">ls</div><div class="line">client_body_temp  fastcgi_temp  logs        sbin       uwsgi_temp</div><div class="line">conf              html          proxy_temp  scgi_temp</div></pre></td></tr></table></figure></p>
<p>conf文件夹下nginx.conf文件就是我们要动刀的配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line">#user  nobody;</div><div class="line">worker_processes  1;</div><div class="line"></div><div class="line">#error_log  logs/error.log;</div><div class="line">#error_log  logs/error.log  notice;</div><div class="line">#error_log  logs/error.log  info;</div><div class="line"></div><div class="line">#pid        logs/nginx.pid;</div><div class="line"></div><div class="line"></div><div class="line">events &#123;</div><div class="line">##并发连接数量</div><div class="line">    worker_connections  100;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">http &#123;</div><div class="line">    include       mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line"></div><div class="line">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</div><div class="line">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</div><div class="line">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</div><div class="line"></div><div class="line">    #access_log  logs/access.log  main;</div><div class="line"></div><div class="line">    sendfile        on;</div><div class="line">    #tcp_nopush     on;</div><div class="line"></div><div class="line">    #keepalive_timeout  0;</div><div class="line">    keepalive_timeout  65;</div><div class="line"></div><div class="line">    #gzip  on;</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen       80;</div><div class="line">        server_name  ******.com;##域名</div><div class="line"></div><div class="line">        #charset koi8-r;</div><div class="line">        </div><div class="line">         #access_log  logs/host.access.log  main;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">            proxy_pass http://127.0.0.1:****;##服务器端口号</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">            proxy_pass http://127.0.0.1:10101;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        #error_page  404              /404.html;</div><div class="line"></div><div class="line">        # redirect server error pages to the static page /50x.html</div><div class="line">        #</div><div class="line">        error_page   500 502 503 504  /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">            root   html;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</div><div class="line">        #</div><div class="line">        #location ~ \.php$ &#123;</div><div class="line">        #    proxy_pass   http://127.0.0.1;</div><div class="line">        #&#125;</div><div class="line"></div><div class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">        #</div><div class="line">        #location ~ \.php$ &#123;</div><div class="line">        #    root           html;</div><div class="line">        #    fastcgi_pass   127.0.0.1:9000;</div><div class="line">        #    fastcgi_index  index.php;</div><div class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</div><div class="line">        #    include        fastcgi_params;</div><div class="line">        #&#125;</div><div class="line"></div><div class="line">        # deny access to .htaccess files, if Apache&apos;s document root</div><div class="line">        # concurs with nginx&apos;s one</div><div class="line">        #</div><div class="line">        #location ~ /\.ht &#123;</div><div class="line">        #    deny  all;</div><div class="line">        #&#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>好了配置完成，效果是访问域名，请求被转发到服务器本地的对应端口号</p>
<p>然而就在我成功一次之后，阿里云就报警了，访问网页提示我没有备案，会杭州了再捣鼓备案</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近写了一个自已用的微服务，放在阿里云主机上，但是带ip的接口看着还是很别扭的，于是安装nginx设置一下域名&lt;br&gt;
    
    </summary>
    
      <category term="运维" scheme="http://mzeht.com/categories/operation/"/>
    
    
      <category term="Centos" scheme="http://mzeht.com/tags/Centos/"/>
    
      <category term="nginx" scheme="http://mzeht.com/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Spring cloud服务注册与发现</title>
    <link href="http://mzeht.com/2017/01/22/2017-02-08/"/>
    <id>http://mzeht.com/2017/01/22/2017-02-08/</id>
    <published>2017-01-22T07:05:33.000Z</published>
    <updated>2017-05-28T08:44:54.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</div><div class="line">	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line"></div><div class="line">	&lt;groupId&gt;com.example&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;mzeht-eureka&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</div><div class="line">	&lt;packaging&gt;jar&lt;/packaging&gt;</div><div class="line"></div><div class="line">	&lt;name&gt;mzeht-eureka&lt;/name&gt;</div><div class="line">	&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</div><div class="line"></div><div class="line">	&lt;parent&gt;</div><div class="line">		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</div><div class="line">		&lt;version&gt;1.5.1.RELEASE&lt;/version&gt;</div><div class="line">		&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</div><div class="line">	&lt;/parent&gt;</div><div class="line"></div><div class="line">	&lt;properties&gt;</div><div class="line">		&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</div><div class="line">		&lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</div><div class="line">		&lt;java.version&gt;1.7&lt;/java.version&gt;</div><div class="line">	&lt;/properties&gt;</div><div class="line"></div><div class="line">	&lt;dependencies&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</div><div class="line">			&lt;scope&gt;test&lt;/scope&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-cloud-starter-eureka-server&lt;/artifactId&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">	&lt;/dependencies&gt;</div><div class="line"></div><div class="line">	&lt;dependencyManagement&gt;</div><div class="line">		&lt;dependencies&gt;</div><div class="line">			&lt;dependency&gt;</div><div class="line">				&lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</div><div class="line">				&lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</div><div class="line">				&lt;version&gt;Brixton.RELEASE&lt;/version&gt;</div><div class="line">				&lt;type&gt;pom&lt;/type&gt;</div><div class="line">				&lt;scope&gt;import&lt;/scope&gt;</div><div class="line">			&lt;/dependency&gt;</div><div class="line">		&lt;/dependencies&gt;</div><div class="line">	&lt;/dependencyManagement&gt;</div><div class="line"></div><div class="line">	&lt;build&gt;</div><div class="line">		&lt;plugins&gt;</div><div class="line">			&lt;plugin&gt;</div><div class="line">				&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">				&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</div><div class="line">			&lt;/plugin&gt;</div><div class="line">		&lt;/plugins&gt;</div><div class="line">	&lt;/build&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;添加依赖&quot;&gt;&lt;a href=&quot;#添加依赖&quot; class=&quot;headerlink&quot; title=&quot;添加依赖&quot;&gt;&lt;/a&gt;添加依赖&lt;/h1&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
      <category term="Spring boot" scheme="http://mzeht.com/tags/Spring-boot/"/>
    
      <category term="Spring cloud" scheme="http://mzeht.com/tags/Spring-cloud/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot整合retrofit简化三方接口调用</title>
    <link href="http://mzeht.com/2017/01/22/%E5%9C%A8springboot%E4%B8%AD%E4%BD%BF%E7%94%A8retrofit%E5%8A%A0%E5%BF%AB%E4%B8%89%E6%96%B9%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8/"/>
    <id>http://mzeht.com/2017/01/22/在springboot中使用retrofit加快三方接口调用/</id>
    <published>2017-01-22T07:05:33.000Z</published>
    <updated>2017-05-28T08:45:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>公司改用srpingboot微服务架构后，服务之间的调用十分频繁，而同事的写法都是基于httpclient的简单工具类，写起来比较混乱，手动调用json转换为实体类，后期维护不方便，而且接口地址，参数（手动拼接）不好管理，于是想到了我在android中常常使用的retrofit+okhttp，于是动手移植到springboot项目上</p>
<a id="more"></a>
<h1 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;com.squareup.retrofit2&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;retrofit&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;2.1.0&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;com.squareup.retrofit2&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;converter-gson&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;2.1.0&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;com.squareup.okhttp3&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;logging-interceptor&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;3.1.2&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<p>从上到下为retrofit基本框架，gson解析器，日志拦截器</p>
<h2 id="初步实现方法（不结合spring特性）"><a href="#初步实现方法（不结合spring特性）" class="headerlink" title="初步实现方法（不结合spring特性）"></a>初步实现方法（不结合spring特性）</h2><p>提炼返回格式，使用泛型</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">public class BasicResult&lt;T&gt; implements Serializable &#123;</div><div class="line"></div><div class="line">	private static final long serialVersionUID = 517161603122400300L;</div><div class="line">	private boolean success = false;</div><div class="line">	private String message;</div><div class="line">	private T data;</div><div class="line"></div><div class="line">	public BasicResult(boolean success , String message)&#123;</div><div class="line">		this.success = success ;</div><div class="line">		this.message = message ;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public BasicResult(boolean success , String message, T data)&#123;</div><div class="line">		this.success = success ;</div><div class="line">		this.message = message ;</div><div class="line">		this.data = data ;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * @return the success</div><div class="line">	 */</div><div class="line">	public final boolean isSuccess() &#123;</div><div class="line">		return success;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * @param success</div><div class="line">	 *            the success to set</div><div class="line">	 */</div><div class="line">	public final void setSuccess(boolean success) &#123;</div><div class="line">		this.success = success;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * @return the message</div><div class="line">	 */</div><div class="line">	public final String getMessage() &#123;</div><div class="line">		return message;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * @param message</div><div class="line">	 *            the message to set</div><div class="line">	 */</div><div class="line">	public final void setMessage(String message) &#123;</div><div class="line">		this.message = message;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public T getData() &#123;</div><div class="line">		return data;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setData(T data) &#123;</div><div class="line">		this.data = data;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>定义请求体</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">public class Useregister &#123;</div><div class="line"></div><div class="line">    private String companyName;	//公司名称	string</div><div class="line">    private String emailAddress;    //邮箱地址	string</div><div class="line">    private String password; //登录密码;	string</div><div class="line">    private String phoneNumber;	//手机号码	string</div><div class="line">    private String verificationCode;	//验证码</div><div class="line"></div><div class="line">    ....</div></pre></td></tr></table></figure>
<p>定义api接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public interface UserApi &#123;</div><div class="line"></div><div class="line">    @POST(&quot;/common/user/v1/register&quot;)</div><div class="line">    Call&lt;BasicResult&gt; listRepos(@Body Useregister useregister);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>构造api接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public class ApiRetrofit &#123;</div><div class="line"></div><div class="line">    public UserApi userApi;</div><div class="line">    public static final String USER_BASE_URL = &quot;http://10.10.168.79:10100/&quot;;</div><div class="line"></div><div class="line">    public UserApi getUserApi() &#123;</div><div class="line">        return userApi;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ApiRetrofit() &#123;</div><div class="line">        HttpLoggingInterceptor logInterceptor = new HttpLoggingInterceptor(new HttpLoggingInterceptor.Logger() &#123;</div><div class="line">            public void log(String s) &#123;</div><div class="line">                //打印日志</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        logInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</div><div class="line">        OkHttpClient client = new OkHttpClient.Builder()</div><div class="line">                .addInterceptor(logInterceptor)</div><div class="line">                .build();</div><div class="line">        Retrofit retrofit_user = new Retrofit.Builder()</div><div class="line">                .baseUrl(USER_BASE_URL)</div><div class="line">                .client(client)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .build();</div><div class="line">        userApi = retrofit_user.create(UserApi.class);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>工厂类提供单列api</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">public class ApiFactory &#123;</div><div class="line">    protected static final Object monitor = new Object();</div><div class="line">    static UserApi userApi = null;</div><div class="line"></div><div class="line">    public static UserApi getUserApi() &#123;</div><div class="line">        synchronized (monitor) &#123;</div><div class="line">            if (userApi == null) &#123;</div><div class="line">                userApi = new ApiRetrofit().getUserApi();</div><div class="line">            &#125;</div><div class="line">            return userApi;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>较为通用的java实现，没有结合spring注入的特性，</p>
<p>实际调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Useregister useregister=new Useregister();</div><div class="line">Call&lt;BaseResult&gt; res=ApiFactory.getUserApi.listRepos(useregister);</div><div class="line">Response&lt;BaseResult&gt; response = call.execute();</div><div class="line">if (!response.isSuccessful()) &#123;</div><div class="line">            throw new Exception(response.message());</div><div class="line">&#125; else &#123;</div><div class="line">            return response.body();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>BaseResult里面传入实体类也是OK的，可以直接拿到解析好的实体对象，如</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Call&lt;ApiResult&lt;UserBean&gt;&gt; call = apiRetrofit.getCommonApi().info(userParam);</div><div class="line">        Response&lt;ApiResult&lt;UserBean&gt;&gt; response = call.execute();</div><div class="line">        if (!response.isSuccessful()) &#123;</div><div class="line">            throw new Exception(response.message());</div><div class="line">        &#125; else &#123;</div><div class="line">            return response.body();</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<h2 id="结合springboot，去除工厂类，改为注入"><a href="#结合springboot，去除工厂类，改为注入" class="headerlink" title="结合springboot，去除工厂类，改为注入"></a>结合springboot，去除工厂类，改为注入</h2><p>以上实现在非spring框架下也可用，但是既然用了spring，就要好好利用，spring框架下还有工厂类代码，有点说不过去</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@Component</div><div class="line">public class ApiRetrofit &#123;</div><div class="line"></div><div class="line">    private static final Logger log = Logger.getLogger(ApiRetrofit.class);</div><div class="line"></div><div class="line">    private CommonApi commonApi;</div><div class="line"></div><div class="line">    public CommonApi getCommonApi() &#123;</div><div class="line">        return commonApi;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private CorpApi corpApi;</div><div class="line"></div><div class="line">    public CorpApi getCorpApi()&#123;</div><div class="line">        return corpApi;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Value(&quot;$&#123;api.common&#125;&quot;)</div><div class="line">    private  String COMMON_BASE_URL ;//= &quot;http://10.10.168.79:10100/&quot;;</div><div class="line"></div><div class="line">    @Value(&quot;$&#123;api.corp&#125;&quot;)</div><div class="line">    private String CROP_BASE_URL;</div><div class="line"></div><div class="line">    @PostConstruct</div><div class="line">    public void init()&#123;</div><div class="line">        HttpLoggingInterceptor logInterceptor = new HttpLoggingInterceptor(new HttpLogger());</div><div class="line">        logInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</div><div class="line"></div><div class="line">        OkHttpClient client = new OkHttpClient.Builder()</div><div class="line">                .addNetworkInterceptor(logInterceptor)</div><div class="line">                .build();</div><div class="line"></div><div class="line">        Retrofit retrofit_common = new Retrofit.Builder()</div><div class="line">                .baseUrl(COMMON_BASE_URL)</div><div class="line">                .client(client)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .build();</div><div class="line">        commonApi = retrofit_common.create(CommonApi.class);</div><div class="line"></div><div class="line">        Retrofit retrofit_corp = new Retrofit.Builder()</div><div class="line">                .baseUrl(CROP_BASE_URL+&quot;/&quot;)</div><div class="line">                .client(client)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .build();</div><div class="line">        corpApi = retrofit_corp.create(CorpApi.class);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    private class HttpLogger implements HttpLoggingInterceptor.Logger &#123;</div><div class="line">//        private StringBuilder mMessage = new StringBuilder();</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void log(String message) &#123;</div><div class="line">            log.info(message);</div><div class="line">//</div><div class="line">//            if (message.startsWith(&quot;--&gt; POST&quot;)) &#123;</div><div class="line">//                mMessage.setLength(0);</div><div class="line">//                mMessage.append(&quot;\n&quot;);</div><div class="line">//            &#125;</div><div class="line">//            // 以&#123;&#125;或者[]形式的说明是响应结果的json数据，需要进行格式化</div><div class="line">//            if ((message.startsWith(&quot;&#123;&quot;) &amp;&amp; message.endsWith(&quot;&#125;&quot;))</div><div class="line">//                    || (message.startsWith(&quot;[&quot;) &amp;&amp; message.endsWith(&quot;]&quot;))) &#123;</div><div class="line">//                message = JSONUtil.formatJson(message);</div><div class="line">//            &#125;</div><div class="line">//            mMessage.append(message.concat(&quot;\n&quot;));</div><div class="line">//            // 请求或者响应结束，打印整条日志</div><div class="line">//            if (message.startsWith(&quot;&lt;-- END HTTP&quot;)) &#123;</div><div class="line">//                log.info(mMessage.toString());</div><div class="line">//            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>@Value注入配置的baseurl的值<br>@Component 申明注入<br>@PostConstruct 在构造方法前初始化相关变量</p>
<p>实际调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/**</div><div class="line">     * 获取用户信息</div><div class="line">     * @param phone</div><div class="line">     * @return</div><div class="line">     * @throws Exception</div><div class="line">     */</div><div class="line">    public ApiResult&lt;UserBean&gt; info(String phone) throws Exception &#123;</div><div class="line">        if (StringUtils.isEmpty(phone))</div><div class="line">            throw new Exception(&quot;手机号不能为空&quot;);</div><div class="line">        UserParam userParam = new UserParam();</div><div class="line">        userParam.setPhoneNumber(phone);</div><div class="line">        Call&lt;ApiResult&lt;UserBean&gt;&gt; call = apiRetrofit.getCommonApi().info(userParam);</div><div class="line">        Response&lt;ApiResult&lt;UserBean&gt;&gt; response = call.execute();</div><div class="line">        if (!response.isSuccessful()) &#123;</div><div class="line">            throw new Exception(response.message());</div><div class="line">        &#125; else &#123;</div><div class="line">            return response.body();</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h2 id="分页请求泛型"><a href="#分页请求泛型" class="headerlink" title="分页请求泛型"></a>分页请求泛型</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@JsonInclude(JsonInclude.Include.NON_NULL)</div><div class="line">public class ApiPagesResult&lt;T&gt; implements Serializable&#123;</div><div class="line"></div><div class="line"></div><div class="line">    private static final long serialVersionUID = -8421200997970330114L;</div><div class="line">    @JsonProperty(&quot;success&quot;)</div><div class="line">    private boolean success = false;</div><div class="line">    @JsonProperty(&quot;message&quot;)</div><div class="line">    private String message;</div><div class="line">    @JsonProperty(&quot;data&quot;)</div><div class="line">    private Data&lt;T&gt; data;</div><div class="line"></div><div class="line">    </div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"></div><div class="line">@JsonInclude(JsonInclude.Include.NON_NULL)</div><div class="line">public class Data&lt;R&gt;  implements Serializable&#123;</div><div class="line"></div><div class="line">    @JsonProperty(&quot;total&quot;)</div><div class="line">    private Integer total;</div><div class="line"></div><div class="line">    @JsonProperty(&quot;currentPage&quot;)</div><div class="line">    private Integer currentPage;</div><div class="line"></div><div class="line">    @JsonProperty(&quot;pageSize&quot;)</div><div class="line">    private Integer pageSize;</div><div class="line"></div><div class="line">    @JsonProperty(&quot;pages&quot;)</div><div class="line">    private Integer pages;</div><div class="line"></div><div class="line">    @JsonProperty(&quot;dataList&quot;)</div><div class="line">    private List&lt;R&gt; dataList;</div></pre></td></tr></table></figure>
<p>1</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;公司改用srpingboot微服务架构后，服务之间的调用十分频繁，而同事的写法都是基于httpclient的简单工具类，写起来比较混乱，手动调用json转换为实体类，后期维护不方便，而且接口地址，参数（手动拼接）不好管理，于是想到了我在android中常常使用的retrofit+okhttp，于是动手移植到springboot项目上&lt;/p&gt;
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
      <category term="Spring boot" scheme="http://mzeht.com/tags/Spring-boot/"/>
    
      <category term="retrofit" scheme="http://mzeht.com/tags/retrofit/"/>
    
      <category term="okHttp" scheme="http://mzeht.com/tags/okHttp/"/>
    
  </entry>
  
  <entry>
    <title>Spring boot整合redis</title>
    <link href="http://mzeht.com/2017/01/03/spring%20boot%20%E5%88%9D%E6%AD%A5%E6%95%B4%E5%90%88redis/"/>
    <id>http://mzeht.com/2017/01/03/spring boot 初步整合redis/</id>
    <published>2017-01-03T02:34:33.000Z</published>
    <updated>2017-05-28T08:45:22.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本准备"><a href="#基本准备" class="headerlink" title="基本准备"></a>基本准备</h1><ol>
<li>本地通过brew安装redis</li>
<li>安装一个redis的可视化管理工具<br>我安装的是<a href="http://mac.softpedia.com/get/Utilities/Redis-Desktop-Manager.shtml" target="_blank" rel="external">Redis Desktop Manager for Mac</a></li>
</ol>
<a id="more"></a>
<p>#工程配置</p>
<h2 id="新建配置文件"><a href="#新建配置文件" class="headerlink" title="新建配置文件"></a>新建配置文件</h2><p>redis.properties</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># redis</div><div class="line">redis.host=localhost</div><div class="line">redis.port=6379</div><div class="line">redis.password=</div><div class="line">redis.database=1</div></pre></td></tr></table></figure>
<h2 id="注入数据源"><a href="#注入数据源" class="headerlink" title="注入数据源"></a>注入数据源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@PropertySource(&quot;classpath:config/redis.properties&quot;)</div><div class="line">public class RedisConfig &#123;</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    private Environment env;</div><div class="line">    @Bean</div><div class="line">    public RedisConnectionFactory redisConnectionFactory() &#123;</div><div class="line">        JedisPoolConfig jedisPoolConfig = new JedisPoolConfig();</div><div class="line">        JedisConnectionFactory jedisConnectionFactory = new JedisConnectionFactory();</div><div class="line">        jedisConnectionFactory.setHostName(env.getProperty(&quot;redis.host&quot;).trim());</div><div class="line">        jedisConnectionFactory.setPort(Integer.parseInt(env.getProperty(&quot;redis.port&quot;).trim()));</div><div class="line">        jedisConnectionFactory.setPassword(env.getProperty(&quot;redis.password&quot;).trim());</div><div class="line">        jedisConnectionFactory.setDatabase(Integer.parseInt(env.getProperty(&quot;redis.database&quot;).trim()));</div><div class="line">        jedisConnectionFactory.setUsePool(true);</div><div class="line">        jedisConnectionFactory.setPoolConfig(jedisPoolConfig);</div><div class="line">        return jedisConnectionFactory;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public RedisTemplate&lt;String, String&gt; redisTemplate() &#123;</div><div class="line">        RedisTemplate&lt;String, String&gt; redisTemplate = new StringRedisTemplate();</div><div class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory());</div><div class="line">        redisTemplate.afterPropertiesSet();</div><div class="line">        return redisTemplate;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">@Repository</div><div class="line">public class RedisBaseDao &#123;</div><div class="line"></div><div class="line">    @Resource(name=&quot;redisTemplate&quot;)</div><div class="line">    protected ValueOperations&lt;String, String&gt; valueOperations;</div><div class="line"></div><div class="line">    public void addValue(String key, String value)&#123;</div><div class="line">        valueOperations.set(key, value);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getValue(String key)&#123;</div><div class="line">        return valueOperations.get(key);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">@Repository</div><div class="line">public class ValueRedisDao &#123;</div><div class="line">    @Autowired</div><div class="line">    public RedisBaseDao redisBaseDao;</div><div class="line"></div><div class="line">    private String getKey()&#123;</div><div class="line">        return &quot;param&quot;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void save(String param)&#123;</div><div class="line">        this.redisBaseDao.addValue(this.getKey(), param);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getParam()&#123;</div><div class="line">        return this.redisBaseDao.getValue(this.getKey());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="测试类进行测试"><a href="#测试类进行测试" class="headerlink" title="测试类进行测试"></a>测试类进行测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">@RunWith(SpringRunner.class)</div><div class="line">@SpringBootTest</div><div class="line">public class WpspringbootmybatisApplicationTests &#123;</div><div class="line"></div><div class="line">	@Autowired</div><div class="line">	private StringRedisTemplate stringRedisTemplate;</div><div class="line">	@Test</div><div class="line">	public void test() throws Exception &#123;</div><div class="line">		// 保存字符串</div><div class="line">		stringRedisTemplate.opsForValue().set(&quot;aaa&quot;, &quot;111&quot;);</div><div class="line">		Assert.assertEquals(&quot;111&quot;, stringRedisTemplate.opsForValue().get(&quot;aaa&quot;));</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Autowired</div><div class="line">	private ValueRedisDao valueRedisDao;</div><div class="line"></div><div class="line">	@Test</div><div class="line">	public void saveRedisTest() throws Exception &#123;</div><div class="line">		this.valueRedisDao.save(&quot;LiangGzone&quot;);</div><div class="line">		System.out.println(this.valueRedisDao.getParam());</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	@Test</div><div class="line">	public void readRedisTest() throws Exception&#123;</div><div class="line">		String value=valueRedisDao.getParam();</div><div class="line">		System.out.println(value);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结合可视化软件，可以确定redis的操作<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-1-3/52959099-file_1483411275568_ad88.png" alt=""></p>
<p>不过这样的使用还是比较初级，之后结合公司的项目进行封装</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基本准备&quot;&gt;&lt;a href=&quot;#基本准备&quot; class=&quot;headerlink&quot; title=&quot;基本准备&quot;&gt;&lt;/a&gt;基本准备&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;本地通过brew安装redis&lt;/li&gt;
&lt;li&gt;安装一个redis的可视化管理工具&lt;br&gt;我安装的是&lt;a href=&quot;http://mac.softpedia.com/get/Utilities/Redis-Desktop-Manager.shtml&quot;&gt;Redis Desktop Manager for Mac&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
      <category term="Spring boot" scheme="http://mzeht.com/tags/Spring-boot/"/>
    
      <category term="redis" scheme="http://mzeht.com/tags/redis/"/>
    
  </entry>
  
</feed>
