<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[my soul your beats]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://mzeht.com/"/>
  <updated>2017-01-23T16:44:13.000Z</updated>
  <id>http://mzeht.com/</id>
  
  <author>
    <name><![CDATA[mzeht]]></name>
    <email><![CDATA[mzeht@outlook.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[阿里云Centos配置nginx]]></title>
    <link href="http://mzeht.com/2017/01/24/%E9%98%BF%E9%87%8C%E4%BA%91centos%E9%85%8D%E7%BD%AEnginx/"/>
    <id>http://mzeht.com/2017/01/24/阿里云centos配置nginx/</id>
    <published>2017-01-23T16:17:23.000Z</published>
    <updated>2017-01-23T16:44:13.000Z</updated>
    <content type="html"><![CDATA[<p>最近写了一个自已用的微服务，放在阿里云主机上，但是带ip的接口看着还是很别扭的，于是安装nginx设置一下域名<br>&lt;— more —&gt;</p>
<p>采用的是下载源码包，编译安装的方式</p>
<h1 id="安装依赖">安装依赖</h1><p>make</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum -y install gcc automake autoconf libtool make</div></pre></td></tr></table></figure>
<p>g++</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install gcc gcc-c++</div></pre></td></tr></table></figure>
<p>PCRE</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install pcre pcre-devel</div></pre></td></tr></table></figure>
<p>zlib</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install zlib zlib-devel</div></pre></td></tr></table></figure>
<p>OpenSSL</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">yum install openssl openssl-devel</div></pre></td></tr></table></figure>
<h1 id="下载源码包">下载源码包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">wget https://nginx.org/download/nginx-1.10.1.tar.gz</div><div class="line">tar zxf nginx-1.10.1.tar.gz</div><div class="line">cd nginx-1.10.1/</div></pre></td></tr></table></figure>
<h1 id="安装">安装</h1><p>./configure<br>make<br>make install</p>
<h1 id="配置">配置</h1><p>安装好后出现以下目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">/usr/local/nginx</div><div class="line">ls</div><div class="line">client_body_temp  fastcgi_temp  logs        sbin       uwsgi_temp</div><div class="line">conf              html          proxy_temp  scgi_temp</div></pre></td></tr></table></figure></p>
<p>conf文件夹下nginx.conf文件就是我们要动刀的配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div></pre></td><td class="code"><pre><div class="line">#user  nobody;</div><div class="line">worker_processes  1;</div><div class="line"></div><div class="line">#error_log  logs/error.log;</div><div class="line">#error_log  logs/error.log  notice;</div><div class="line">#error_log  logs/error.log  info;</div><div class="line"></div><div class="line">#pid        logs/nginx.pid;</div><div class="line"></div><div class="line"></div><div class="line">events &#123;</div><div class="line">##并发连接数量</div><div class="line">    worker_connections  100;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">http &#123;</div><div class="line">    include       mime.types;</div><div class="line">    default_type  application/octet-stream;</div><div class="line"></div><div class="line">    #log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</div><div class="line">    #                  &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</div><div class="line">    #                  &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</div><div class="line"></div><div class="line">    #access_log  logs/access.log  main;</div><div class="line"></div><div class="line">    sendfile        on;</div><div class="line">    #tcp_nopush     on;</div><div class="line"></div><div class="line">    #keepalive_timeout  0;</div><div class="line">    keepalive_timeout  65;</div><div class="line"></div><div class="line">    #gzip  on;</div><div class="line"></div><div class="line">    server &#123;</div><div class="line">        listen       80;</div><div class="line">        server_name  ******.com;##域名</div><div class="line"></div><div class="line">        #charset koi8-r;</div><div class="line">        </div><div class="line">         #access_log  logs/host.access.log  main;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">            proxy_pass http://127.0.0.1:****;##服务器端口号</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        location / &#123;</div><div class="line">            proxy_pass http://127.0.0.1:10101;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        #error_page  404              /404.html;</div><div class="line"></div><div class="line">        # redirect server error pages to the static page /50x.html</div><div class="line">        #</div><div class="line">        error_page   500 502 503 504  /50x.html;</div><div class="line">        location = /50x.html &#123;</div><div class="line">            root   html;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        # proxy the PHP scripts to Apache listening on 127.0.0.1:80</div><div class="line">        #</div><div class="line">        #location ~ \.php$ &#123;</div><div class="line">        #    proxy_pass   http://127.0.0.1;</div><div class="line">        #&#125;</div><div class="line"></div><div class="line">        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</div><div class="line">        #</div><div class="line">        #location ~ \.php$ &#123;</div><div class="line">        #    root           html;</div><div class="line">        #    fastcgi_pass   127.0.0.1:9000;</div><div class="line">        #    fastcgi_index  index.php;</div><div class="line">        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</div><div class="line">        #    include        fastcgi_params;</div><div class="line">        #&#125;</div><div class="line"></div><div class="line">        # deny access to .htaccess files, if Apache&apos;s document root</div><div class="line">        # concurs with nginx&apos;s one</div><div class="line">        #</div><div class="line">        #location ~ /\.ht &#123;</div><div class="line">        #    deny  all;</div><div class="line">        #&#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>好了配置完成，效果是访问域名，请求被转发到服务器本地的对应端口号</p>
<p>然而就在我成功一次之后，阿里云就报警了，访问网页提示我没有备案，会杭州了再捣鼓备案</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近写了一个自已用的微服务，放在阿里云主机上，但是带ip的接口看着还是很别扭的，于是安装nginx设置一下域名<br>&lt;— more —&gt;</p>
<p>采用的是下载源码包，编译安装的方式</p>
<h1 id="安装依赖">安装依赖</h1><p>make</]]>
    </summary>
    
      <category term="Centos" scheme="http://mzeht.com/tags/Centos/"/>
    
      <category term="nginx" scheme="http://mzeht.com/tags/nginx/"/>
    
      <category term="运维" scheme="http://mzeht.com/categories/%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring boot整合retrofit简化三方接口调用]]></title>
    <link href="http://mzeht.com/2017/01/22/%E5%9C%A8springboot%E4%B8%AD%E4%BD%BF%E7%94%A8retrofit%E5%8A%A0%E5%BF%AB%E4%B8%89%E6%96%B9%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8/"/>
    <id>http://mzeht.com/2017/01/22/在springboot中使用retrofit加快三方接口调用/</id>
    <published>2017-01-22T07:05:33.000Z</published>
    <updated>2017-01-23T07:35:28.000Z</updated>
    <content type="html"><![CDATA[<p>公司改用srpingboot微服务架构后，服务之间的调用十分频繁，而同事的写法都是基于httpclient的简单工具类，写起来比较混乱，手动调用json转换为实体类，后期维护不方便，而且接口地址，参数（手动拼接）不好管理，于是想到了我在android中常常使用的retrofit+okhttp，于是动手移植到springboot项目上</p>
<a id="more"></a>
<h1 id="引入依赖">引入依赖</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;com.squareup.retrofit2&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;retrofit&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;2.1.0&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;com.squareup.retrofit2&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;converter-gson&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;2.1.0&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;com.squareup.okhttp3&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;logging-interceptor&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;3.1.2&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<p>从上到下为retrofit基本框架，gson解析器，日志拦截器</p>
<h2 id="初步实现方法（不结合spring特性）">初步实现方法（不结合spring特性）</h2><p>提炼返回格式，使用泛型</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line">public class BasicResult&lt;T&gt; implements Serializable &#123;</div><div class="line"></div><div class="line">	private static final long serialVersionUID = 517161603122400300L;</div><div class="line">	private boolean success = false;</div><div class="line">	private String message;</div><div class="line">	private T data;</div><div class="line"></div><div class="line">	public BasicResult(boolean success , String message)&#123;</div><div class="line">		this.success = success ;</div><div class="line">		this.message = message ;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public BasicResult(boolean success , String message, T data)&#123;</div><div class="line">		this.success = success ;</div><div class="line">		this.message = message ;</div><div class="line">		this.data = data ;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * @return the success</div><div class="line">	 */</div><div class="line">	public final boolean isSuccess() &#123;</div><div class="line">		return success;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * @param success</div><div class="line">	 *            the success to set</div><div class="line">	 */</div><div class="line">	public final void setSuccess(boolean success) &#123;</div><div class="line">		this.success = success;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * @return the message</div><div class="line">	 */</div><div class="line">	public final String getMessage() &#123;</div><div class="line">		return message;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	/**</div><div class="line">	 * @param message</div><div class="line">	 *            the message to set</div><div class="line">	 */</div><div class="line">	public final void setMessage(String message) &#123;</div><div class="line">		this.message = message;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public T getData() &#123;</div><div class="line">		return data;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public void setData(T data) &#123;</div><div class="line">		this.data = data;</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>定义请求体</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">public class Useregister &#123;</div><div class="line"></div><div class="line">    private String companyName;	//公司名称	string</div><div class="line">    private String emailAddress;    //邮箱地址	string</div><div class="line">    private String password; //登录密码;	string</div><div class="line">    private String phoneNumber;	//手机号码	string</div><div class="line">    private String verificationCode;	//验证码</div><div class="line"></div><div class="line">    ....</div></pre></td></tr></table></figure>
<p>定义api接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public interface UserApi &#123;</div><div class="line"></div><div class="line">    @POST(&quot;/common/user/v1/register&quot;)</div><div class="line">    Call&lt;BasicResult&gt; listRepos(@Body Useregister useregister);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>构造api接口</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public class ApiRetrofit &#123;</div><div class="line"></div><div class="line">    public UserApi userApi;</div><div class="line">    public static final String USER_BASE_URL = &quot;http://10.10.168.79:10100/&quot;;</div><div class="line"></div><div class="line">    public UserApi getUserApi() &#123;</div><div class="line">        return userApi;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    ApiRetrofit() &#123;</div><div class="line">        HttpLoggingInterceptor logInterceptor = new HttpLoggingInterceptor(new HttpLoggingInterceptor.Logger() &#123;</div><div class="line">            public void log(String s) &#123;</div><div class="line">                //打印日志</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        logInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</div><div class="line">        OkHttpClient client = new OkHttpClient.Builder()</div><div class="line">                .addInterceptor(logInterceptor)</div><div class="line">                .build();</div><div class="line">        Retrofit retrofit_user = new Retrofit.Builder()</div><div class="line">                .baseUrl(USER_BASE_URL)</div><div class="line">                .client(client)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .build();</div><div class="line">        userApi = retrofit_user.create(UserApi.class);</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>工厂类提供单列api</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">public class ApiFactory &#123;</div><div class="line">    protected static final Object monitor = new Object();</div><div class="line">    static UserApi userApi = null;</div><div class="line"></div><div class="line">    public static UserApi getUserApi() &#123;</div><div class="line">        synchronized (monitor) &#123;</div><div class="line">            if (userApi == null) &#123;</div><div class="line">                userApi = new ApiRetrofit().getUserApi();</div><div class="line">            &#125;</div><div class="line">            return userApi;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>较为通用的java实现，没有结合spring注入的特性，</p>
<p>实际调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">Useregister useregister=new Useregister();</div><div class="line">Call&lt;BaseResult&gt; res=ApiFactory.getUserApi.listRepos(useregister);</div><div class="line">Response&lt;BaseResult&gt; response = call.execute();</div><div class="line">if (!response.isSuccessful()) &#123;</div><div class="line">            throw new Exception(response.message());</div><div class="line">&#125; else &#123;</div><div class="line">            return response.body();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>BaseResult里面传入实体类也是OK的，可以直接拿到解析好的实体对象，如</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Call&lt;ApiResult&lt;UserBean&gt;&gt; call = apiRetrofit.getCommonApi().info(userParam);</div><div class="line">        Response&lt;ApiResult&lt;UserBean&gt;&gt; response = call.execute();</div><div class="line">        if (!response.isSuccessful()) &#123;</div><div class="line">            throw new Exception(response.message());</div><div class="line">        &#125; else &#123;</div><div class="line">            return response.body();</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<h2 id="结合springboot，去除工厂类，改为注入">结合springboot，去除工厂类，改为注入</h2><p>以上实现在非spring框架下也可用，但是既然用了spring，就要好好利用，spring框架下还有工厂类代码，有点说不过去</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@Component</div><div class="line">public class ApiRetrofit &#123;</div><div class="line"></div><div class="line">    private static final Logger log = Logger.getLogger(ApiRetrofit.class);</div><div class="line"></div><div class="line">    private CommonApi commonApi;</div><div class="line"></div><div class="line">    public CommonApi getCommonApi() &#123;</div><div class="line">        return commonApi;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private CorpApi corpApi;</div><div class="line"></div><div class="line">    public CorpApi getCorpApi()&#123;</div><div class="line">        return corpApi;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Value(&quot;$&#123;api.common&#125;&quot;)</div><div class="line">    private  String COMMON_BASE_URL ;//= &quot;http://10.10.168.79:10100/&quot;;</div><div class="line"></div><div class="line">    @Value(&quot;$&#123;api.corp&#125;&quot;)</div><div class="line">    private String CROP_BASE_URL;</div><div class="line"></div><div class="line">    @PostConstruct</div><div class="line">    public void init()&#123;</div><div class="line">        HttpLoggingInterceptor logInterceptor = new HttpLoggingInterceptor(new HttpLogger());</div><div class="line">        logInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</div><div class="line"></div><div class="line">        OkHttpClient client = new OkHttpClient.Builder()</div><div class="line">                .addNetworkInterceptor(logInterceptor)</div><div class="line">                .build();</div><div class="line"></div><div class="line">        Retrofit retrofit_common = new Retrofit.Builder()</div><div class="line">                .baseUrl(COMMON_BASE_URL)</div><div class="line">                .client(client)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .build();</div><div class="line">        commonApi = retrofit_common.create(CommonApi.class);</div><div class="line"></div><div class="line">        Retrofit retrofit_corp = new Retrofit.Builder()</div><div class="line">                .baseUrl(CROP_BASE_URL+&quot;/&quot;)</div><div class="line">                .client(client)</div><div class="line">                .addConverterFactory(GsonConverterFactory.create())</div><div class="line">                .build();</div><div class="line">        corpApi = retrofit_corp.create(CorpApi.class);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    private class HttpLogger implements HttpLoggingInterceptor.Logger &#123;</div><div class="line">//        private StringBuilder mMessage = new StringBuilder();</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void log(String message) &#123;</div><div class="line">            log.info(message);</div><div class="line">//</div><div class="line">//            if (message.startsWith(&quot;--&gt; POST&quot;)) &#123;</div><div class="line">//                mMessage.setLength(0);</div><div class="line">//                mMessage.append(&quot;\n&quot;);</div><div class="line">//            &#125;</div><div class="line">//            // 以&#123;&#125;或者[]形式的说明是响应结果的json数据，需要进行格式化</div><div class="line">//            if ((message.startsWith(&quot;&#123;&quot;) &amp;&amp; message.endsWith(&quot;&#125;&quot;))</div><div class="line">//                    || (message.startsWith(&quot;[&quot;) &amp;&amp; message.endsWith(&quot;]&quot;))) &#123;</div><div class="line">//                message = JSONUtil.formatJson(message);</div><div class="line">//            &#125;</div><div class="line">//            mMessage.append(message.concat(&quot;\n&quot;));</div><div class="line">//            // 请求或者响应结束，打印整条日志</div><div class="line">//            if (message.startsWith(&quot;&lt;-- END HTTP&quot;)) &#123;</div><div class="line">//                log.info(mMessage.toString());</div><div class="line">//            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>@Value注入配置的baseurl的值<br>@Component 申明注入<br>@PostConstruct 在构造方法前初始化相关变量</p>
<p>实际调用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">/**</div><div class="line">     * 获取用户信息</div><div class="line">     * @param phone</div><div class="line">     * @return</div><div class="line">     * @throws Exception</div><div class="line">     */</div><div class="line">    public ApiResult&lt;UserBean&gt; info(String phone) throws Exception &#123;</div><div class="line">        if (StringUtils.isEmpty(phone))</div><div class="line">            throw new Exception(&quot;手机号不能为空&quot;);</div><div class="line">        UserParam userParam = new UserParam();</div><div class="line">        userParam.setPhoneNumber(phone);</div><div class="line">        Call&lt;ApiResult&lt;UserBean&gt;&gt; call = apiRetrofit.getCommonApi().info(userParam);</div><div class="line">        Response&lt;ApiResult&lt;UserBean&gt;&gt; response = call.execute();</div><div class="line">        if (!response.isSuccessful()) &#123;</div><div class="line">            throw new Exception(response.message());</div><div class="line">        &#125; else &#123;</div><div class="line">            return response.body();</div><div class="line">        &#125;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>公司改用srpingboot微服务架构后，服务之间的调用十分频繁，而同事的写法都是基于httpclient的简单工具类，写起来比较混乱，手动调用json转换为实体类，后期维护不方便，而且接口地址，参数（手动拼接）不好管理，于是想到了我在android中常常使用的retrofit+okhttp，于是动手移植到springboot项目上</p>]]>
    
    </summary>
    
      <category term="Spring boot" scheme="http://mzeht.com/tags/Spring-boot/"/>
    
      <category term="retrofit" scheme="http://mzeht.com/tags/retrofit/"/>
    
      <category term="okHttp" scheme="http://mzeht.com/tags/okHttp/"/>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring boot整合redis]]></title>
    <link href="http://mzeht.com/2017/01/03/spring%20boot%20%E5%88%9D%E6%AD%A5%E6%95%B4%E5%90%88redis/"/>
    <id>http://mzeht.com/2017/01/03/spring boot 初步整合redis/</id>
    <published>2017-01-03T02:34:33.000Z</published>
    <updated>2017-01-23T07:03:15.000Z</updated>
    <content type="html"><![CDATA[<h1 id="基本准备">基本准备</h1><ol>
<li>本地通过brew安装redis</li>
<li>安装一个redis的可视化管理工具<br>我安装的是<a href="http://mac.softpedia.com/get/Utilities/Redis-Desktop-Manager.shtml" target="_blank" rel="external">Redis Desktop Manager for Mac</a></li>
</ol>
<a id="more"></a>
<h1 id="工程配置">工程配置</h1><h2 id="新建配置文件">新建配置文件</h2><p>redis.properties</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># redis</div><div class="line">redis.host=localhost</div><div class="line">redis.port=6379</div><div class="line">redis.password=</div><div class="line">redis.database=1</div></pre></td></tr></table></figure>
<h2 id="注入数据源">注入数据源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@PropertySource(&quot;classpath:config/redis.properties&quot;)</div><div class="line">public class RedisConfig &#123;</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    private Environment env;</div><div class="line">    @Bean</div><div class="line">    public RedisConnectionFactory redisConnectionFactory() &#123;</div><div class="line">        JedisPoolConfig jedisPoolConfig = new JedisPoolConfig();</div><div class="line">        JedisConnectionFactory jedisConnectionFactory = new JedisConnectionFactory();</div><div class="line">        jedisConnectionFactory.setHostName(env.getProperty(&quot;redis.host&quot;).trim());</div><div class="line">        jedisConnectionFactory.setPort(Integer.parseInt(env.getProperty(&quot;redis.port&quot;).trim()));</div><div class="line">        jedisConnectionFactory.setPassword(env.getProperty(&quot;redis.password&quot;).trim());</div><div class="line">        jedisConnectionFactory.setDatabase(Integer.parseInt(env.getProperty(&quot;redis.database&quot;).trim()));</div><div class="line">        jedisConnectionFactory.setUsePool(true);</div><div class="line">        jedisConnectionFactory.setPoolConfig(jedisPoolConfig);</div><div class="line">        return jedisConnectionFactory;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public RedisTemplate&lt;String, String&gt; redisTemplate() &#123;</div><div class="line">        RedisTemplate&lt;String, String&gt; redisTemplate = new StringRedisTemplate();</div><div class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory());</div><div class="line">        redisTemplate.afterPropertiesSet();</div><div class="line">        return redisTemplate;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="工具类">工具类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">@Repository</div><div class="line">public class RedisBaseDao &#123;</div><div class="line"></div><div class="line">    @Resource(name=&quot;redisTemplate&quot;)</div><div class="line">    protected ValueOperations&lt;String, String&gt; valueOperations;</div><div class="line"></div><div class="line">    public void addValue(String key, String value)&#123;</div><div class="line">        valueOperations.set(key, value);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getValue(String key)&#123;</div><div class="line">        return valueOperations.get(key);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">@Repository</div><div class="line">public class ValueRedisDao &#123;</div><div class="line">    @Autowired</div><div class="line">    public RedisBaseDao redisBaseDao;</div><div class="line"></div><div class="line">    private String getKey()&#123;</div><div class="line">        return &quot;param&quot;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void save(String param)&#123;</div><div class="line">        this.redisBaseDao.addValue(this.getKey(), param);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getParam()&#123;</div><div class="line">        return this.redisBaseDao.getValue(this.getKey());</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="测试类进行测试">测试类进行测试</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">@RunWith(SpringRunner.class)</div><div class="line">@SpringBootTest</div><div class="line">public class WpspringbootmybatisApplicationTests &#123;</div><div class="line"></div><div class="line">	@Autowired</div><div class="line">	private StringRedisTemplate stringRedisTemplate;</div><div class="line">	@Test</div><div class="line">	public void test() throws Exception &#123;</div><div class="line">		// 保存字符串</div><div class="line">		stringRedisTemplate.opsForValue().set(&quot;aaa&quot;, &quot;111&quot;);</div><div class="line">		Assert.assertEquals(&quot;111&quot;, stringRedisTemplate.opsForValue().get(&quot;aaa&quot;));</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Autowired</div><div class="line">	private ValueRedisDao valueRedisDao;</div><div class="line"></div><div class="line">	@Test</div><div class="line">	public void saveRedisTest() throws Exception &#123;</div><div class="line">		this.valueRedisDao.save(&quot;LiangGzone&quot;);</div><div class="line">		System.out.println(this.valueRedisDao.getParam());</div><div class="line">	&#125;</div><div class="line"></div><div class="line"></div><div class="line">	@Test</div><div class="line">	public void readRedisTest() throws Exception&#123;</div><div class="line">		String value=valueRedisDao.getParam();</div><div class="line">		System.out.println(value);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>结合可视化软件，可以确定redis的操作<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-1-3/52959099-file_1483411275568_ad88.png" alt=""></p>
<p>不过这样的使用还是比较初级，之后结合公司的项目进行封装</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="基本准备">基本准备</h1><ol>
<li>本地通过brew安装redis</li>
<li>安装一个redis的可视化管理工具<br>我安装的是<a href="http://mac.softpedia.com/get/Utilities/Redis-Desktop-Manager.shtml">Redis Desktop Manager for Mac</a></li>
</ol>]]>
    
    </summary>
    
      <category term="Spring boot" scheme="http://mzeht.com/tags/Spring-boot/"/>
    
      <category term="redis" scheme="http://mzeht.com/tags/redis/"/>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android数据库框架GreenDao的使用]]></title>
    <link href="http://mzeht.com/2017/01/02/Android%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A1%86%E6%9E%B6GreenDao%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://mzeht.com/2017/01/02/Android数据库框架GreenDao的使用/</id>
    <published>2017-01-01T17:01:33.000Z</published>
    <updated>2017-01-23T07:03:00.000Z</updated>
    <content type="html"><![CDATA[<p>最近的一个Android项目需要用到数据库的功能，之前的一个项目采用的是xutis，感觉用起来不是很方便，公司的项目我来之前同事用的基本实现<br>为了开发效率，决定采用greendao，看了不少介绍greendao的文章, 发现3.0前后用法变化较大，版本介绍各有不同，到了官方网站确定最新版本，开始研究</p>
<p><a href="https://github.com/greenrobot/greenDAO" target="_blank" rel="external">greendao github地址</a><br><a href="http://greenrobot.org/greendao/" target="_blank" rel="external">greendao 官方网站地址</a></p>
<a id="more"></a>
<h1 id="基本配置">基本配置</h1><p>在项目的project的build.gradle文件中配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">        classpath &apos;com.android.tools.build:gradle:2.2.3&apos;</div><div class="line">        classpath &apos;com.neenbedankt.gradle.plugins:android-apt:1.8&apos;</div><div class="line">        // NOTE: Do not place your application dependencies here; they belong</div><div class="line">        // in the individual module build.gradle files</div><div class="line">        classpath &apos;org.greenrobot:greendao-gradle-plugin:3.2.1&apos;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>在项目需要用到的module的build.gradle文件中配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">apply plugin: &apos;org.greenrobot.greendao&apos;</div><div class="line">android &#123;</div><div class="line">		//greendao 数据库版本</div><div class="line">		schemaVersion 2</div><div class="line">		//greendao 插件生成代码位置</div><div class="line">        targetGenDir &apos;src/main/java&apos;</div><div class="line">&#125;</div><div class="line">dependencies &#123;</div><div class="line"> compile &apos;org.greenrobot:greendao:3.2.0&apos;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<h1 id="流程概要">流程概要</h1><ol>
<li>编写数据库实体类</li>
<li>Make project编译工程，greendao插件生成代码</li>
<li>编写代码，封装使用</li>
</ol>
<h1 id="使用示例">使用示例</h1><h2 id="新建实体类">新建实体类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">@Entity</div><div class="line">public class Order &#123;</div><div class="line"></div><div class="line">    @Id</div><div class="line">    private Long id;</div><div class="line">    @Property</div><div class="line">    private String userId;</div><div class="line">    @Property</div><div class="line">    private String OrderNumber;</div><div class="line">    @Property</div><div class="line">    private String phoneNumber;</div><div class="line">    @Property</div><div class="line">    private String PaymentType;</div><div class="line">    @Property</div><div class="line">    private boolean isChecked;</div><div class="line">    @Property</div><div class="line">    private String moudleName;</div><div class="line">    </div><div class="line">    //...............</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="markeproject">markeproject</h2><p>Androidstudio （顶部工具栏上那个绿色小锤子，想xcode学习？），<br>生成代码<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-1-2/55678525-file_1483291295356_2436.png" alt=""><br>可以看见没有被git跟踪的三个棕色文件就是生成的文件</p>
<h2 id="封装使用">封装使用</h2><p>新建一个DbManager.java</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div></pre></td><td class="code"><pre><div class="line">public class DBManager &#123;</div><div class="line"></div><div class="line">    private final static String dbName = &quot;test_db&quot;;</div><div class="line">    private static DBManager mInstance;</div><div class="line">    private DaoMaster.DevOpenHelper openHelper;</div><div class="line">    private Context context;</div><div class="line">    private DaoSession daoSession;</div><div class="line">    private DaoMaster daoMaster;</div><div class="line"></div><div class="line"></div><div class="line">    public static void initialize(Context context) &#123;</div><div class="line">        if (mInstance == null) &#123;</div><div class="line">            synchronized (DBManager.class) &#123;</div><div class="line">                if (mInstance == null) &#123;</div><div class="line">                    mInstance = new DBManager(context);</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public DBManager(Context context) &#123;</div><div class="line">        this.context = context;</div><div class="line">        openHelper = new DaoMaster.DevOpenHelper(context, dbName, null);</div><div class="line">        daoMaster=new DaoMaster(openHelper.getWritableDb());</div><div class="line">        daoSession = daoMaster.newSession();</div><div class="line"></div><div class="line">        //打印日志</div><div class="line">        QueryBuilder.LOG_SQL=true;</div><div class="line">        QueryBuilder.LOG_VALUES=true;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取单例引用</div><div class="line">     *</div><div class="line">     * @param</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public static DBManager getInstance() &#123;</div><div class="line"></div><div class="line"></div><div class="line">        return mInstance;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 获取session对象</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public DaoSession getDaoSession() &#123;</div><div class="line">        return daoSession;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在Application中进行DbManager的初始化</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">public class BaimiApplication extends Application &#123;</div><div class="line"></div><div class="line"></div><div class="line">    private static Context mContext;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public void onCreate() &#123;</div><div class="line">        super.onCreate();</div><div class="line">        mContext = this;</div><div class="line">        BasePreference.initialize(mContext);</div><div class="line">        DBManager.initialize(mContext);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * @return</div><div class="line">     * 全局的上下文</div><div class="line">     */</div><div class="line">    public static Context getmContext() &#123;</div><div class="line">        return mContext;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>DbManager里面还可以进行进一步的封装，比如一些常用操作</p>
<h2 id="调用">调用</h2><h3 id="插入数据">插入数据</h3><p> 这部分我还没来的及封装</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">private void saveDb() &#123;</div><div class="line"></div><div class="line">        OrderDao orderdao = DBManager.getInstance().getDaoSession().getOrderDao();</div><div class="line">        Order order=new Order();</div><div class="line">        order.setPaymentType(paymentType);</div><div class="line">        order.setOrderNumber(orderEdit.getText().toString());</div><div class="line">        order.setPhoneNumber(phoneEdit.getText().toString());</div><div class="line">        order.setChecked(false);</div><div class="line">        order.setUserId(BasePreference.getInstance().getLoginName());</div><div class="line">        order.setMoudleName(&quot;快递接件&quot;);</div><div class="line">        orderdao.insert(order);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="查询数据">查询数据</h3><p>新建了一个DbHelper进行封装，主要是同种查询条件多处调用，写的累。。<br>链式调研，很舒服</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">public class DbHelper &#123;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * @param moduleName</div><div class="line">     * 获取当前用户订单列表</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    public  static  List&lt;Order&gt; getUserOrderByMouleName(String moduleName)&#123;</div><div class="line">        OrderDao orderdao = DBManager.getInstance().getDaoSession().getOrderDao();</div><div class="line">        List&lt;Order&gt; orders = orderdao.queryBuilder()</div><div class="line">                .where(OrderDao.Properties.MoudleName.eq(moduleName))</div><div class="line">                .where(OrderDao.Properties.UserId.eq(BasePreference.getInstance().getLoginName()))</div><div class="line">                .list();</div><div class="line"></div><div class="line">        return orders;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="删除数据">删除数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">OrderDao mOrderdao = DBManager.getInstance().getDaoSession().getOrderDao();</div><div class="line"> for (Order order : mOrderList) &#123;</div><div class="line">            if (order.isChecked() == true) &#123;</div><div class="line">                mOrderdao.delete(order);</div><div class="line">            &#125;</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<h3 id="更新数据">更新数据</h3><p>也是基于实体类生成的Dao文件,利用AS智能提示查看一下方法和参数信息，就可以使用了</p>
<h2 id="查看日志">查看日志</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">01-02 01:43:45.549 31150-31150/com.wpmac.momi D/greenDAO: Built SQL for query: SELECT T.&quot;_id&quot;,T.&quot;USER_ID&quot;,T.&quot;ORDER_NUMBER&quot;,T.&quot;PHONE_NUMBER&quot;,T.&quot;PAYMENT_TYPE&quot;,T.&quot;IS_CHECKED&quot;,T.&quot;MOUDLE_NAME&quot; FROM &quot;ORDER&quot; T  WHERE T.&quot;MOUDLE_NAME&quot;=? AND T.&quot;USER_ID&quot;=?</div><div class="line">01-02 01:43:45.549 31150-31150/com.wpmac.momi D/greenDAO: Values for query: [快递接件, 007]</div><div class="line">01-02 01:43:51.983 31150-31150/com.wpmac.momi D/greenDAO: Built SQL for query: SELECT T.&quot;_id&quot;,T.&quot;USER_ID&quot;,T.&quot;ORDER_NUMBER&quot;,T.&quot;PHONE_NUMBER&quot;,T.&quot;PAYMENT_TYPE&quot;,T.&quot;IS_CHECKED&quot;,T.&quot;MOUDLE_NAME&quot; FROM &quot;ORDER&quot; T  WHERE T.&quot;MOUDLE_NAME&quot;=? AND T.&quot;USER_ID&quot;=?</div><div class="line">01-02 01:43:51.983 31150-31150/com.wpmac.momi D/greenDAO: Values for query: [快递接件, 007]</div><div class="line">01-02 01:43:51.987 31150-31150/com.wpmac.momi D/greenDAO: Built SQL for query: SELECT T.&quot;_id&quot;,T.&quot;USER_ID&quot;,T.&quot;ORDER_NUMBER&quot;,T.&quot;PHONE_NUMBER&quot;,T.&quot;PAYMENT_TYPE&quot;,T.&quot;IS_CHECKED&quot;,T.&quot;MOUDLE_NAME&quot; FROM &quot;ORDER&quot; T  WHERE T.&quot;MOUDLE_NAME&quot;=? AND T.&quot;USER_ID&quot;=?</div><div class="line">01-02 01:43:51.987 31150-31150/com.wpmac.momi D/greenDAO: Values for query: [快递接件, 007]</div><div class="line">01-02 01:43:52.813 31150-31150/com.wpmac.momi D/greenDAO: Built SQL for query: SELECT T.&quot;_id&quot;,T.&quot;USER_ID&quot;,T.&quot;ORDER_NUMBER&quot;,T.&quot;PHONE_NUMBER&quot;,T.&quot;PAYMENT_TYPE&quot;,T.&quot;IS_CHECKED&quot;,T.&quot;MOUDLE_NAME&quot; FROM &quot;ORDER&quot; T  WHERE T.&quot;MOUDLE_NAME&quot;=? AND T.&quot;USER_ID&quot;=?</div><div class="line">01-02 01:43:52.813 31150-31150/com.wpmac.momi D/greenDAO: Values for query: [快递接件, 007]</div><div class="line">01-02 01:43:52.815 31150-31150/com.wpmac.momi D/greenDAO: Built SQL for query: SELECT T.&quot;_id&quot;,T.&quot;USER_ID&quot;,T.&quot;ORDER_NUMBER&quot;,T.&quot;PHONE_NUMBER&quot;,T.&quot;PAYMENT_TYPE&quot;,T.&quot;IS_CHECKED&quot;,T.&quot;MOUDLE_NAME&quot; FROM &quot;ORDER&quot; T  WHERE T.&quot;MOUDLE_NAME&quot;=? AND T.&quot;USER_ID&quot;=?</div><div class="line">01-02 01:43:52.815 31150-31150/com.wpmac.momi D/greenDAO: Values for query: [快递接件, 007]</div></pre></td></tr></table></figure>
<h1 id="后记">后记</h1><p>总的来说，greendao的使用和后端的hibernate ORM框架使用方式类似<br>以后会不会出现和Mybatis类似的androidORM框架呢，希望有生之年能看见<br>联想到Mybatis使用时的日志配置，可以实时打印出语句和参数信息<br>寻找了一下greendao打印日志的方法 在DbManager.java里面已经添加了</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近的一个Android项目需要用到数据库的功能，之前的一个项目采用的是xutis，感觉用起来不是很方便，公司的项目我来之前同事用的基本实现<br>为了开发效率，决定采用greendao，看了不少介绍greendao的文章, 发现3.0前后用法变化较大，版本介绍各有不同，到了官方网站确定最新版本，开始研究</p>
<p><a href="https://github.com/greenrobot/greenDAO">greendao github地址</a><br><a href="http://greenrobot.org/greendao/">greendao 官方网站地址</a></p>]]>
    
    </summary>
    
      <category term="数据库" scheme="http://mzeht.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="greendao" scheme="http://mzeht.com/tags/greendao/"/>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring boot整合mybatis]]></title>
    <link href="http://mzeht.com/2016/12/28/spring%20boot%E6%95%B4%E5%90%88mybatis/"/>
    <id>http://mzeht.com/2016/12/28/spring boot整合mybatis/</id>
    <published>2016-12-28T14:20:33.000Z</published>
    <updated>2017-01-23T07:02:46.000Z</updated>
    <content type="html"><![CDATA[<h1 id="基本配置">基本配置</h1><h2 id="配置数据库">配置数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@EnableTransactionManagement</div><div class="line">@PropertySource(value = &#123;&quot;classpath:config/source.properties&quot;&#125;)</div><div class="line">public class BeanConfig &#123;</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    private Environment env;</div><div class="line"></div><div class="line">    @Bean(destroyMethod = &quot;close&quot;)</div><div class="line">    public DataSource dataSource() &#123;</div><div class="line">        DruidDataSource dataSource = new DruidDataSource();</div><div class="line">        dataSource.setDriverClassName(env.getProperty(&quot;source.driverClassName&quot;).trim());</div><div class="line">        dataSource.setUrl(env.getProperty(&quot;source.url&quot;).trim());</div><div class="line">        dataSource.setUsername(env.getProperty(&quot;source.username&quot;).trim());</div><div class="line">        dataSource.setPassword(env.getProperty(&quot;source.password&quot;).trim());</div><div class="line">        return dataSource;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public JdbcTemplate jdbcTemplate() &#123;</div><div class="line">        JdbcTemplate jdbcTemplate = new JdbcTemplate();</div><div class="line">        jdbcTemplate.setDataSource(dataSource());</div><div class="line">        return jdbcTemplate;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>默认配置文件配置端口和Mapper文件位置</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"># mysql</div><div class="line">spring.datasource.one.driver-class-name=com.mysql.jdbc.Driver</div><div class="line">spring.datasource.one.url=jdbc:mysql://localhost:3306/wpspringboot?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp;zeroDateTimeBehavior=convertToNull</div><div class="line">spring.datasource.one.username=root</div><div class="line">spring.datasource.one.password=root</div><div class="line"></div><div class="line">spring.datasource.two.driver-class-name=com.mysql.jdbc.Driver</div><div class="line">spring.datasource.two.url=jdbc:mysql://localhost:3306/wpspringboottwo?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true&amp;zeroDateTimeBehavior=convertToNull</div><div class="line">spring.datasource.two.username=root</div><div class="line">spring.datasource.two.password=root</div><div class="line"></div><div class="line">spring.datasource.driver-class-name=com.mysql.jdbc.Driver</div><div class="line">spring.datasource.url=jdbc:mysql://localhost:3306/wpspringboot?useUnicode = true&amp;characterEncoding=UTF-8&amp;&amp;autoReconnect=true&amp;zeroDateTimeBehavior=convertToNull</div><div class="line">spring.datasource.username=root</div><div class="line">spring.datasource.password=root</div><div class="line"></div><div class="line">server.port=9688</div><div class="line">#mybatis配置文件位置</div><div class="line">mybatis.mapper-locations=classpath*:mybatis/*Mapper.xml</div></pre></td></tr></table></figure>
<p>自定义配置文件配置数据库地址</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># mysql</div><div class="line">source.driverClassName = com.mysql.jdbc.Driver</div><div class="line">source.url = jdbc:mysql://localhost:3306/wpspringboot?useUnicode = true&amp;characterEncoding=UTF-8&amp;zeroDateTimeBehavior=convertToNull</div><div class="line">source.username = root</div><div class="line">source.password = root</div></pre></td></tr></table></figure>
<h2 id="配置实体类">配置实体类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">public class Author &#123;</div><div class="line">    private Long id;</div><div class="line">    private String realName;</div><div class="line">    private String nickName;</div><div class="line"></div><div class="line">    public Long getId() &#123;</div><div class="line">        return id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setId(Long id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getRealName() &#123;</div><div class="line">        return realName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setRealName(String realName) &#123;</div><div class="line">        this.realName = realName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getNickName() &#123;</div><div class="line">        return nickName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setNickName(String nickName) &#123;</div><div class="line">        this.nickName = nickName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="配置Mapper对应接口">配置Mapper对应接口</h2><p>使用@Mapper注解</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">@Mapper</div><div class="line">public interface AuthorMapper &#123;</div><div class="line"></div><div class="line"></div><div class="line">    public Author findAuthor(Long id);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="配置Mapper文件">配置Mapper文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;!DOCTYPE mapper PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot; </div><div class="line">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;</div><div class="line">&lt;mapper namespace=&quot;com.example.mapper.AuthorMapper&quot;&gt;</div><div class="line"></div><div class="line"></div><div class="line">	&lt;resultMap id=&quot;authorResultMap&quot; type=&quot;com.example.po.Author&quot;&gt;</div><div class="line">		&lt;id property=&quot;id&quot; column=&quot;id&quot; /&gt;</div><div class="line">		&lt;result property=&quot;realName&quot; column=&quot;real_name&quot; /&gt;</div><div class="line">		&lt;result property=&quot;nickName&quot; column=&quot;nick_name&quot; /&gt;</div><div class="line">	&lt;/resultMap&gt;</div><div class="line"></div><div class="line">	&lt;select id=&quot;findAuthor&quot; parameterType=&quot;com.example.po.Author&quot; resultMap=&quot;authorResultMap&quot;&gt;</div><div class="line">		select id, real_name, nick_name from t_author where id = #&#123;id&#125;</div><div class="line">	&lt;/select&gt;</div><div class="line">&lt;/mapper&gt;</div></pre></td></tr></table></figure>
<h2 id="准备service">准备service</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">@Service</div><div class="line">public class AuthorService &#123;</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    private AuthorMapper authorMapper;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    public Author findAuthor(Long userId) &#123;</div><div class="line">        return authorMapper.findAuthor(userId);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Controller层">Controller层</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">@RestController</div><div class="line">@RequestMapping(value=&quot;/mybatis/author&quot;)</div><div class="line">public class AuthorController &#123;</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    private AuthorService authorService;</div><div class="line">//    /**</div><div class="line">//     * 查询用户列表</div><div class="line">//     */</div><div class="line">//    @RequestMapping(method = RequestMethod.GET)</div><div class="line">//    public Map&lt;String,Object&gt; getAuthorList(HttpServletRequest request) &#123;</div><div class="line">//        List&lt;Author&gt; authorList = this.authorService.findAuthorList();</div><div class="line">//        Map&lt;String,Object&gt; param = new HashMap&lt;String,Object&gt;();</div><div class="line">//        param.put(&quot;total&quot;, authorList.size());</div><div class="line">//        param.put(&quot;rows&quot;, authorList);</div><div class="line">//        return param;</div><div class="line">//    &#125;</div><div class="line">    /**</div><div class="line">     * 查询用户信息</div><div class="line">     */</div><div class="line">    @RequestMapping(value = &quot;/&#123;userId:\\d+&#125;&quot;, method = RequestMethod.GET)</div><div class="line">    public Author getAuthor(@PathVariable Long userId, HttpServletRequest request) &#123;</div><div class="line">        Author author = this.authorService.findAuthor(userId);</div><div class="line">        if(author == null)&#123;</div><div class="line">            throw new RuntimeException(&quot;查询错误&quot;);</div><div class="line">        &#125;</div><div class="line">        return author;</div><div class="line">    &#125;</div><div class="line">//</div><div class="line">//    /**</div><div class="line">//     * 新增方法</div><div class="line">//     */</div><div class="line">//    @RequestMapping(method = RequestMethod.POST)</div><div class="line">//    public void add(@RequestBody JSONObject jsonObject) &#123;</div><div class="line">//        String userId = jsonObject.getString(&quot;user_id&quot;);</div><div class="line">//        String realName = jsonObject.getString(&quot;real_name&quot;);</div><div class="line">//        String nickName = jsonObject.getString(&quot;nick_name&quot;);</div><div class="line">//</div><div class="line">//        try&#123;</div><div class="line">//            this.authorService.add(realName, nickName);</div><div class="line">//        &#125;catch(Exception e)&#123;</div><div class="line">//            e.printStackTrace();</div><div class="line">//            throw new RuntimeException(&quot;新增错误&quot;);</div><div class="line">//        &#125;</div><div class="line">//    &#125;</div><div class="line">//    /**</div><div class="line">//     * 更新方法</div><div class="line">//     */</div><div class="line">//    @RequestMapping(value = &quot;/&#123;userId:\\d+&#125;&quot;, method = RequestMethod.PUT)</div><div class="line">//    public void update(@PathVariable Long userId, @RequestBody JSONObject jsonObject) &#123;</div><div class="line">//        Author author = this.authorService.findAuthor(userId);</div><div class="line">//        String realName = jsonObject.getString(&quot;real_name&quot;);</div><div class="line">//        String nickName = jsonObject.getString(&quot;nick_name&quot;);</div><div class="line">//</div><div class="line">//        try&#123;</div><div class="line">//            this.authorService.update(realName, nickName, author.getId());</div><div class="line">//        &#125;catch(Exception e)&#123;</div><div class="line">//            e.printStackTrace();</div><div class="line">//            throw new RuntimeException(&quot;更新错误&quot;);</div><div class="line">//        &#125;</div><div class="line">//    &#125;</div><div class="line">//    /**</div><div class="line">//     * 删除方法</div><div class="line">//     */</div><div class="line">//    @RequestMapping(value = &quot;/&#123;userId:\\d+&#125;&quot;, method = RequestMethod.DELETE)</div><div class="line">//    public void delete(@PathVariable Long userId) &#123;</div><div class="line">//        try&#123;</div><div class="line">//            this.authorService.delete(userId);</div><div class="line">//        &#125;catch(Exception e)&#123;</div><div class="line">//            throw new RuntimeException(&quot;删除错误&quot;);</div><div class="line">//        &#125;</div><div class="line">//    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>测试通过</p>
<h1 id="配置日志">配置日志</h1><p>mybatis配置日志打印<br>resources文件夹下新建logback.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line"></div><div class="line">&lt;configuration scan=&quot;true&quot;&gt;</div><div class="line">    &lt;appender name=&quot;CONSOLE&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;</div><div class="line">        &lt;encoder&gt;</div><div class="line">            &lt;charset&gt;utf-8&lt;/charset&gt;</div><div class="line">            &lt;Pattern&gt;%d %-5level [%thread] %logger&#123;0&#125;: %msg%n&lt;/Pattern&gt;</div><div class="line">        &lt;/encoder&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">&lt;!-- The FILE and ASYNC appenders are here as examples for a production configuration --&gt;</div><div class="line"></div><div class="line">    &lt;appender name=&quot;FILE&quot; class=&quot;ch.qos.logback.core.rolling.RollingFileAppender&quot;&gt;</div><div class="line">        &lt;rollingPolicy class=&quot;ch.qos.logback.core.rolling.TimeBasedRollingPolicy&quot;&gt;</div><div class="line">            &lt;fileNamePattern&gt;log/wpspringbootmybatis.%d&#123;yyyy-MM-dd&#125;.log.zip&lt;/fileNamePattern&gt;</div><div class="line">            &lt;maxHistory&gt;90&lt;/maxHistory&gt;</div><div class="line">        &lt;/rollingPolicy&gt;</div><div class="line">        &lt;encoder&gt;</div><div class="line">            &lt;charset&gt;utf-8&lt;/charset&gt;</div><div class="line">            &lt;Pattern&gt;%d %-5level [%thread] %logger&#123;0&#125;: %msg%n&lt;/Pattern&gt;</div><div class="line">        &lt;/encoder&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">    &lt;appender name=&quot;ASYNC&quot; class=&quot;ch.qos.logback.classic.AsyncAppender&quot;&gt;</div><div class="line">        &lt;queueSize&gt;512&lt;/queueSize&gt;</div><div class="line">        &lt;appender-ref ref=&quot;FILE&quot;/&gt;</div><div class="line">    &lt;/appender&gt;</div><div class="line"></div><div class="line">    &lt;logger name=&quot;cn.upg&quot; level=&quot;$&#123;logback.loglevel&#125;&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;logger name=&quot;javax.activation&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;javax.mail&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;javax.xml.bind&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;ch.qos.logback&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;com.codahale.metrics&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;com.ryantenney&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;com.sun.xml.internal.bind&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;com.zaxxer&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;io.undertow&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.apache&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.apache.catalina.startup.DigesterFactory&quot; level=&quot;OFF&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.bson&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.hibernate.validator&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.hibernate&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.hibernate.ejb.HibernatePersistence&quot; level=&quot;OFF&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.springframework&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.springframework.web&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.springframework.security&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.springframework.cache&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.thymeleaf&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;org.xnio&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;com.mangofactory.swagger&quot; level=&quot;INFO&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;com.wordnik.swagger&quot; level=&quot;WARN&quot;/&gt;</div><div class="line">    &lt;logger name=&quot;sun.rmi.transport&quot; level=&quot;WARN&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;logger name=&quot;redis.clients.jedis&quot; level=&quot;WARN&quot; /&gt;</div><div class="line">    &lt;logger name=&quot;org.springframework.data.redis&quot; level=&quot;WARN&quot; /&gt;</div><div class="line">    &lt;logger name=&quot;org.springframework.data.mongodb&quot; level=&quot;INFO&quot;/&gt;</div><div class="line"></div><div class="line">    &lt;contextListener class=&quot;ch.qos.logback.classic.jul.LevelChangePropagator&quot;&gt;</div><div class="line">        &lt;resetJUL&gt;true&lt;/resetJUL&gt;</div><div class="line">    &lt;/contextListener&gt;</div><div class="line"></div><div class="line">    &lt;root level=&quot;$&#123;logback.loglevel&#125;&quot;&gt;</div><div class="line">        &lt;appender-ref ref=&quot;ASYNC&quot;/&gt;</div><div class="line">        &lt;appender-ref ref=&quot;CONSOLE&quot;/&gt;</div><div class="line">    &lt;/root&gt;</div><div class="line"></div><div class="line">&lt;/configuration&gt;</div></pre></td></tr></table></figure>
<p>效果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">2016-12-30 16:16:54,216 DEBUG [http-nio-9688-exec-1] SqlSessionUtils: Creating a new SqlSession</div><div class="line">2016-12-30 16:16:54,225 DEBUG [http-nio-9688-exec-1] SqlSessionUtils: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c3e793d] was not registered for synchronization because synchronization is not active</div><div class="line">2016-12-30 16:16:54,356 INFO  [http-nio-9688-exec-1] DruidDataSource: &#123;dataSource-1&#125; inited</div><div class="line">2016-12-30 16:16:54,621 DEBUG [http-nio-9688-exec-1] SpringManagedTransaction: JDBC Connection [com.mysql.jdbc.JDBC4Connection@20dc4786] will not be managed by Spring</div><div class="line">2016-12-30 16:16:54,629 DEBUG [http-nio-9688-exec-1] findAuthor: ==&gt;  Preparing: select id, real_name, nick_name from t_author where id = ? </div><div class="line">2016-12-30 16:16:54,672 DEBUG [http-nio-9688-exec-1] findAuthor: ==&gt; Parameters: 1(Long)</div><div class="line">2016-12-30 16:16:54,708 DEBUG [http-nio-9688-exec-1] findAuthor: &lt;==      Total: 1</div><div class="line">2016-12-30 16:16:54,710 DEBUG [http-nio-9688-exec-1] SqlSessionUtils: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c3e793d]</div></pre></td></tr></table></figure>
<hr>
<p>相关链接 </p>
<ol>
<li><a href="http://blog.didispace.com/springbootlog/" target="_blank" rel="external">spring boot日志管理</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="基本配置">基本配置</h1><h2 id="配置数据库">配置数据库</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@EnableTransactionManagement</div><div class="line">@PropertySource(value = &#123;&quot;classpath:config/source.properties&quot;&#125;)</div><div class="line">public class BeanConfig &#123;</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    private Environment env;</div><div class="line"></div><div class="line">    @Bean(destroyMethod = &quot;close&quot;)</div><div class="line">    public DataSource dataSource() &#123;</div><div class="line">        DruidDataSource dataSource = new DruidDataSource();</div><div class="line">        dataSource.setDriverClassName(env.getProperty(&quot;source.driverClassName&quot;).trim());</div><div class="line">        dataSource.setUrl(env.getProperty(&quot;source.url&quot;).trim());</div><div class="line">        dataSource.setUsername(env.getProperty(&quot;source.username&quot;).trim());</div><div class="line">        dataSource.setPassword(env.getProperty(&quot;source.password&quot;).trim());</div><div class="line">        return dataSource;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public JdbcTemplate jdbcTemplate() &#123;</div><div class="line">        JdbcTemplate jdbcTemplate = new JdbcTemplate();</div><div class="line">        jdbcTemplate.setDataSource(dataSource());</div><div class="line">        return jdbcTemplate;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>默认配置文件配置端口和Mapper文件位置</p>]]>
    
    </summary>
    
      <category term="Spring boot" scheme="http://mzeht.com/tags/Spring-boot/"/>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring boot配置多数据源]]></title>
    <link href="http://mzeht.com/2016/12/28/spring%20boot%20%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/"/>
    <id>http://mzeht.com/2016/12/28/spring boot 多数据源配置/</id>
    <published>2016-12-28T14:20:33.000Z</published>
    <updated>2017-01-23T07:02:35.000Z</updated>
    <content type="html"><![CDATA[<h2 id="编辑配置文件">编辑配置文件</h2><p>可以是默认的application.properties，亦可以是自定义的source.properties</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># mysql</div><div class="line">spring.datasource.one.driver-class-name=com.mysql.jdbc.Driver</div><div class="line">spring.datasource.one.url=jdbc:mysql://localhost:3306/wpspringboot</div><div class="line">spring.datasource.one.username=root</div><div class="line">spring.datasource.one.password=root</div><div class="line"></div><div class="line">spring.datasource.two.driver-class-name=com.mysql.jdbc.Driver</div><div class="line">spring.datasource.two.url=jdbc:mysql://localhost:3306/wpspringboottwo</div><div class="line">spring.datasource.two.username=root</div><div class="line">spring.datasource.two.password=root</div></pre></td></tr></table></figure>
<p>@Configuration</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">//@EnableTransactionManagement</div><div class="line">//@PropertySource(value = &#123;&quot;classpath:config/source.properties&quot;&#125;)</div><div class="line">public class BeanConfig &#123;</div><div class="line"></div><div class="line">//    @Autowired</div><div class="line">//    private Environment env;</div><div class="line">//</div><div class="line">//</div><div class="line">//    @Bean(destroyMethod = &quot;close&quot;)</div><div class="line">//    public DataSource dataSource() &#123;</div><div class="line">//        DruidDataSource dataSource = new DruidDataSource();</div><div class="line">//        dataSource.setDriverClassName(env.getProperty(&quot;source.driverClassName&quot;).trim());</div><div class="line">//        dataSource.setUrl(env.getProperty(&quot;source.url&quot;).trim());</div><div class="line">//        dataSource.setUsername(env.getProperty(&quot;source.username&quot;).trim());</div><div class="line">//        dataSource.setPassword(env.getProperty(&quot;source.password&quot;).trim());</div><div class="line">//</div><div class="line">//        return dataSource;</div><div class="line">//    &#125;</div><div class="line">//</div><div class="line">//    @Bean</div><div class="line">//    public JdbcTemplate jdbcTemplate() &#123;</div><div class="line">//        JdbcTemplate jdbcTemplate = new JdbcTemplate();</div><div class="line">//        jdbcTemplate.setDataSource(dataSource());</div><div class="line">//        return jdbcTemplate;</div><div class="line">//    &#125;</div><div class="line"></div><div class="line">    @Bean(name = &quot;oneDataSource&quot;)</div><div class="line">    @Qualifier(&quot;oneDataSource&quot;)</div><div class="line">    @Primary</div><div class="line">    @ConfigurationProperties(prefix=&quot;spring.datasource.one&quot;)</div><div class="line">    public DataSource oneDataSource() &#123;</div><div class="line">        return DataSourceBuilder.create().build();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Bean(name = &quot;twoDataSource&quot;)</div><div class="line">    @Qualifier(&quot;twoDataSource&quot;)</div><div class="line">    @ConfigurationProperties(prefix=&quot;spring.datasource.two&quot;)</div><div class="line">    public DataSource twoDataSource() &#123;</div><div class="line">        return DataSourceBuilder.create().build();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Bean(name = &quot;oneJdbcTemplate&quot;)</div><div class="line">    public JdbcTemplate oneJdbcTemplate(@Qualifier(&quot;oneDataSource&quot;) DataSource dataSource) &#123;</div><div class="line">        return new JdbcTemplate(dataSource);</div><div class="line">    &#125;</div><div class="line">    @Bean(name = &quot;twoJdbcTemplate&quot;)</div><div class="line">    public JdbcTemplate twoJdbcTemplate(@Qualifier(&quot;twoDataSource&quot;) DataSource dataSource) &#123;</div><div class="line">        return new JdbcTemplate(dataSource);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>引用</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">@Repository</div><div class="line">public class AuthorDaoImpl implements AuthorDao &#123;</div><div class="line">    @Autowired</div><div class="line">    @Qualifier(&quot;oneJdbcTemplate&quot;)</div><div class="line">    private JdbcTemplate jdbcTemplate;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int add(Author author) &#123;</div><div class="line">        return jdbcTemplate.update(&quot;insert into t_author(real_name, nick_name) values(?, ?)&quot;,</div><div class="line">                author.getRealName(), author.getNickName());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int update(Author author) &#123;</div><div class="line">        return jdbcTemplate.update(&quot;update t_author set real_name = ?, nick_name = ? where id = ?&quot;,</div><div class="line">                new Object[]&#123;author.getRealName(), author.getNickName(), author.getId()&#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int delete(Long id) &#123;</div><div class="line">        return jdbcTemplate.update(&quot;delete from t_author where id = ?&quot;, id);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public Author findAuthor(Long id) &#123;</div><div class="line">        List&lt;Author&gt; list = jdbcTemplate.query(&quot;select * from t_author where id = ?&quot;, new Object[]&#123;id&#125;, new BeanPropertyRowMapper(Author.class));</div><div class="line">        if(null != list &amp;&amp; list.size()&gt;0)&#123;</div><div class="line">            Author auhtor = list.get(0);</div><div class="line">            return auhtor;</div><div class="line">        &#125;else&#123;</div><div class="line">            return null;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    public List&lt;Author&gt; findAuthorList() &#123;</div><div class="line">        List&lt;Author&gt; list = jdbcTemplate.query(&quot;select * from t_author&quot;, new Object[]&#123;&#125;, new BeanPropertyRowMapper&lt;Author&gt;(Author.class));</div><div class="line">        return list;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>试下单元测试</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">@RunWith(SpringJUnit4ClassRunner.class)</div><div class="line">@SpringApplicationConfiguration(WpspringbootApplication.class)</div><div class="line">public class JdbcTest &#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>idea提示SpringApplicationConfiguration方法已被废弃<br>那就用自动生成的</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">@RunWith(SpringRunner.class)</div><div class="line">@SpringBootTest</div><div class="line">public class WpspringbootApplicationTests &#123;</div><div class="line"></div><div class="line">	@Test</div><div class="line">	public void contextLoads() &#123;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	@Resource(name=&quot;oneJdbcTemplate&quot;)</div><div class="line">	protected JdbcTemplate jdbcTemplate1;</div><div class="line">	@Resource(name=&quot;twoJdbcTemplate&quot;)</div><div class="line">	protected JdbcTemplate jdbcTemplate2;</div><div class="line"></div><div class="line">	@Test</div><div class="line">	public void test() throws Exception &#123;</div><div class="line">		jdbcTemplate1.update(&quot;insert into t_author(id, real_name, nick_name) values(?, ?, ?)&quot;, 5, &quot;梁桂钊&quot;, &quot;LiangGzone&quot;);</div><div class="line">		jdbcTemplate2.update(&quot;insert into t_author(id, real_name, nick_name) values(?, ?, ?)&quot;, 6, &quot;梁桂钊&quot;, &quot;LiangGzone&quot;);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>运行之后发现数据库中文是问号<br>数据库配置文件中配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">spring.datasource.one.url=jdbc:mysql://localhost:3306/wpspringboot?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true</div></pre></td></tr></table></figure>
<p>再次测试，正常了</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="编辑配置文件">编辑配置文件</h2><p>可以是默认的application.properties，亦可以是自定义的source.properties</p>]]>
    
    </summary>
    
      <category term="Spring boot" scheme="http://mzeht.com/tags/Spring-boot/"/>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Spring boot搭建jdbc]]></title>
    <link href="http://mzeht.com/2016/12/28/spring%20boot%20jdbc/"/>
    <id>http://mzeht.com/2016/12/28/spring boot jdbc/</id>
    <published>2016-12-28T14:20:33.000Z</published>
    <updated>2017-01-23T07:02:29.000Z</updated>
    <content type="html"><![CDATA[<p>开发环境：idea</p>
<h1 id="初步准备">初步准备</h1><p>利用idea创建一个基本的Spring boot工程<br>java sdk 暂时用 1.7<br>GUI 选择组建时什么都不选<br>添加为Maven项目<br>此时pom文件状态为</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</div><div class="line">&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</div><div class="line">	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</div><div class="line">	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</div><div class="line"></div><div class="line">	&lt;groupId&gt;com.example&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;wpspringboot&lt;/artifactId&gt;</div><div class="line">	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</div><div class="line">	&lt;packaging&gt;jar&lt;/packaging&gt;</div><div class="line"></div><div class="line">	&lt;name&gt;wpspringboot&lt;/name&gt;</div><div class="line">	&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</div><div class="line"></div><div class="line">	&lt;parent&gt;</div><div class="line">		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</div><div class="line">		&lt;version&gt;1.4.3.RELEASE&lt;/version&gt;</div><div class="line">		&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</div><div class="line">	&lt;/parent&gt;</div><div class="line"></div><div class="line">	&lt;properties&gt;</div><div class="line">		&lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</div><div class="line">		&lt;project.reporting.outputEncoding&gt;UTF-8&lt;/project.reporting.outputEncoding&gt;</div><div class="line">		&lt;java.version&gt;1.7&lt;/java.version&gt;</div><div class="line">	&lt;/properties&gt;</div><div class="line"></div><div class="line">	&lt;dependencies&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-boot-starter&lt;/artifactId&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</div><div class="line">			&lt;scope&gt;test&lt;/scope&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line">	&lt;/dependencies&gt;</div><div class="line"></div><div class="line">	&lt;build&gt;</div><div class="line">		&lt;plugins&gt;</div><div class="line">			&lt;plugin&gt;</div><div class="line">				&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">				&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</div><div class="line">			&lt;/plugin&gt;</div><div class="line">		&lt;/plugins&gt;</div><div class="line">	&lt;/build&gt;</div><div class="line">&lt;/project&gt;</div></pre></td></tr></table></figure>
<p>使用idea自带的命令行测试<br>打包<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mvn clean &amp;&amp; mvn package -Dmaven.test.skip</div></pre></td></tr></table></figure></p>
<p>构建成功后打包的jar生成在当前目录下的target/</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">INFO] Building jar: /Users/wpmac/IntellijProject/wpspringboot/target/wpspringboot-0.0.1-SNAPSHOT.jar</div></pre></td></tr></table></figure>
<p>进入到jar包所在位置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">java -jar wpspringboot-0.0.1-SNAPSHOT.jar</div></pre></td></tr></table></figure>
<p>即可运行</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">  .   ____          _            __ _ _</div><div class="line"> /\\ / ___&apos;_ __ _ _(_)_ __  __ _ \ \ \ \</div><div class="line">( ( )\___ | &apos;_ | &apos;_| | &apos;_ \/ _` | \ \ \ \</div><div class="line"> \\/  ___)| |_)| | | | | || (_| |  ) ) ) )</div><div class="line">  &apos;  |____| .__|_| |_|_| |_\__, | / / / /</div><div class="line"> =========|_|==============|___/=/_/_/_/</div><div class="line"> :: Spring Boot ::        (v1.4.3.RELEASE)</div><div class="line"></div><div class="line">2016-12-28 19:12:06.392  INFO 3005 --- [           main] com.example.WpspringbootApplication      : Starting WpspringbootApplication v0.0.1-SNAPSHOT with PID 3005 (/Users/wpmac/IntellijProject/wpspringboot/target/wpspringboot-0.0.1-SNAPSHOT.jar started by wpmac in /Users/wpmac/IntellijProject/wpspringboot/target)</div><div class="line">2016-12-28 19:12:06.397  INFO 3005 --- [           main] com.example.WpspringbootApplication      : No active profile set, falling back to default profiles: default</div><div class="line">2016-12-28 19:12:06.511  INFO 3005 --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@31407cec: startup date [Wed Dec 28 19:12:06 CST 2016]; root of context hierarchy</div><div class="line">2016-12-28 19:12:08.388  INFO 3005 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup</div><div class="line">2016-12-28 19:12:08.436  INFO 3005 --- [           main] com.example.WpspringbootApplication      : Started WpspringbootApplication in 12.949 seconds (JVM running for 13.7)</div><div class="line">2016-12-28 19:12:08.438  INFO 3005 --- [       Thread-1] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@31407cec: startup date [Wed Dec 28 19:12:06 CST 2016]; root of context hierarchy</div><div class="line">2016-12-28 19:12:08.440  INFO 3005 --- [       Thread-1] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown</div></pre></td></tr></table></figure>
<p>添加web依赖</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">	&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">	&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<p>测试类</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">@RestController</div><div class="line">@SpringBootApplication</div><div class="line">public class RestfulApiWebDemo &#123;</div><div class="line"></div><div class="line">    @RequestMapping(&quot;/&quot;)</div><div class="line">    String home() &#123;</div><div class="line">        return &quot;Hello World!&quot;;</div><div class="line">    &#125;</div><div class="line">    public static void main(String[] args) throws Exception &#123;</div><div class="line">        SpringApplication.run(RestfulApiWebDemo.class, args);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注释创建时生成的Application</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">//@SpringBootApplication</div><div class="line">public class WpspringbootApplication &#123;</div><div class="line"></div><div class="line">//	public static void main(String[] args) &#123;</div><div class="line">//		SpringApplication.run(WpspringbootApplication.class, args);</div><div class="line">//	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>重新打包运行，测试8080端口(spring boot默认端口)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">➜  ~ curl 127.0.0.1:8080</div><div class="line">Hello World!%</div></pre></td></tr></table></figure>
<h1 id="使用jdbc，mysql">使用jdbc，mysql</h1><h2 id="添加jdbc依赖">添加jdbc依赖</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;dependency&gt;</div><div class="line">  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</div><div class="line">  &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;</div><div class="line">&lt;/dependency&gt; </div><div class="line"></div><div class="line">&lt;!--mysql依赖--&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;mysql&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;5.1.35&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div><div class="line"></div><div class="line">		&lt;!--连接池--&gt;</div><div class="line">		&lt;dependency&gt;</div><div class="line">			&lt;groupId&gt;com.alibaba&lt;/groupId&gt;</div><div class="line">			&lt;artifactId&gt;druid&lt;/artifactId&gt;</div><div class="line">			&lt;version&gt;1.0.14&lt;/version&gt;</div><div class="line">		&lt;/dependency&gt;</div></pre></td></tr></table></figure>
<h2 id="文件目录结构">文件目录结构</h2><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-29/41925907-file_1482978251512_1187b.png" alt=""></p>
<h2 id="配置数据源信息">配置数据源信息</h2><p>新建 src/main/resources/config/source.properties</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"># mysql</div><div class="line">source.driverClassName = com.mysql.jdbc.Driver</div><div class="line">source.url = jdbc:mysql://localhost:3306/wpspringboot</div><div class="line">source.username = root</div><div class="line">source.password = root</div></pre></td></tr></table></figure>
<p>新建confgi.BeanConfig</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">@Configuration</div><div class="line">@EnableTransactionManagement</div><div class="line">@PropertySource(value = &#123;&quot;classpath:config/source.properties&quot;&#125;)</div><div class="line">public class BeanConfig &#123;</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    private Environment env;</div><div class="line"></div><div class="line"></div><div class="line">    @Bean(destroyMethod = &quot;close&quot;)</div><div class="line">    public DataSource dataSource() &#123;</div><div class="line">        DruidDataSource dataSource = new DruidDataSource();</div><div class="line">        dataSource.setDriverClassName(env.getProperty(&quot;source.driverClassName&quot;).trim());</div><div class="line">        dataSource.setUrl(env.getProperty(&quot;source.url&quot;).trim());</div><div class="line">        dataSource.setUsername(env.getProperty(&quot;source.username&quot;).trim());</div><div class="line">        dataSource.setPassword(env.getProperty(&quot;source.password&quot;).trim());</div><div class="line"></div><div class="line">        return dataSource;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Bean</div><div class="line">    public JdbcTemplate jdbcTemplate() &#123;</div><div class="line">        JdbcTemplate jdbcTemplate = new JdbcTemplate();</div><div class="line">        jdbcTemplate.setDataSource(dataSource());</div><div class="line">        return jdbcTemplate;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="新建实体">新建实体</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">public class Author &#123;</div><div class="line"></div><div class="line">    private Long id;</div><div class="line">    private String realName;</div><div class="line">    private String nickName;</div><div class="line"></div><div class="line">    public Long getId() &#123;</div><div class="line">        return id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setId(Long id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getRealName() &#123;</div><div class="line">        return realName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setRealName(String realName) &#123;</div><div class="line">        this.realName = realName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getNickName() &#123;</div><div class="line">        return nickName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setNickName(String nickName) &#123;</div><div class="line">        this.nickName = nickName;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="Dao层">Dao层</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">public interface AuthorDao &#123;</div><div class="line"></div><div class="line">    int add(Author author);</div><div class="line">    int update(Author author);</div><div class="line">    int delete(Long id);</div><div class="line">    Author findAuthor(Long id);</div><div class="line">    List&lt;Author&gt; findAuthorList();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">@Repository</div><div class="line">public class AuthorDaoImpl implements AuthorDao &#123;</div><div class="line">    @Autowired</div><div class="line">    private JdbcTemplate jdbcTemplate;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int add(Author author) &#123;</div><div class="line">        return jdbcTemplate.update(&quot;insert into t_author(real_name, nick_name) values(?, ?)&quot;,</div><div class="line">                author.getRealName(), author.getNickName());</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int update(Author author) &#123;</div><div class="line">        return jdbcTemplate.update(&quot;update t_author set real_name = ?, nick_name = ? where id = ?&quot;,</div><div class="line">                new Object[]&#123;author.getRealName(), author.getNickName(), author.getId()&#125;);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int delete(Long id) &#123;</div><div class="line">        return jdbcTemplate.update(&quot;delete from t_author where id = ?&quot;, id);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public Author findAuthor(Long id) &#123;</div><div class="line">        List&lt;Author&gt; list = jdbcTemplate.query(&quot;select * from t_author where id = ?&quot;, new Object[]&#123;id&#125;, new BeanPropertyRowMapper(Author.class));</div><div class="line">        if(null != list &amp;&amp; list.size()&gt;0)&#123;</div><div class="line">            Author auhtor = list.get(0);</div><div class="line">            return auhtor;</div><div class="line">        &#125;else&#123;</div><div class="line">            return null;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    public List&lt;Author&gt; findAuthorList() &#123;</div><div class="line">        List&lt;Author&gt; list = jdbcTemplate.query(&quot;select * from t_author&quot;, new Object[]&#123;&#125;, new BeanPropertyRowMapper&lt;Author&gt;(Author.class));</div><div class="line">        return list;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="service层">service层</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">public interface AuthorService &#123;</div><div class="line"></div><div class="line">    int add(Author author);</div><div class="line">    int update(Author author);</div><div class="line">    int delete(Long id);</div><div class="line">    Author findAuthor(Long id);</div><div class="line">    List&lt;Author&gt; findAuthorList();</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">@Service(&quot;authorService&quot;)</div><div class="line">public class AuthorServiceImpl implements AuthorService &#123;</div><div class="line">    @Autowired</div><div class="line">    private AuthorDao authorDao;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int add(Author author) &#123;</div><div class="line">        return this.authorDao.add(author);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int update(Author author) &#123;</div><div class="line">        return this.authorDao.update(author);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int delete(Long id) &#123;</div><div class="line">        return this.authorDao.delete(id);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public Author findAuthor(Long id) &#123;</div><div class="line">        return this.authorDao.findAuthor(id);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public List&lt;Author&gt; findAuthorList() &#123;</div><div class="line">        return this.authorDao.findAuthorList();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="controller层">controller层</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div></pre></td><td class="code"><pre><div class="line">@RestController</div><div class="line">@RequestMapping(value=&quot;/jdbc/author&quot;)</div><div class="line">public class AuthorController &#123;</div><div class="line"></div><div class="line">    @Autowired</div><div class="line">    private AuthorService authorService;</div><div class="line">    /**</div><div class="line">     * 查询用户列表</div><div class="line">     */</div><div class="line">    @RequestMapping(method = RequestMethod.GET)</div><div class="line">    public Map&lt;String,Object&gt; getAuthorList(HttpServletRequest request) &#123;</div><div class="line">        List&lt;Author&gt; authorList = this.authorService.findAuthorList();</div><div class="line">        Map&lt;String,Object&gt; param = new HashMap&lt;String,Object&gt;();</div><div class="line">        param.put(&quot;total&quot;, authorList.size());</div><div class="line">        param.put(&quot;rows&quot;, authorList);</div><div class="line">        return param;</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * 查询用户信息</div><div class="line">     */</div><div class="line">    @RequestMapping(value = &quot;/&#123;userId:\\d+&#125;&quot;, method = RequestMethod.GET)</div><div class="line">    public Author getAuthor(@PathVariable Long userId, HttpServletRequest request) &#123;</div><div class="line">        Author author = this.authorService.findAuthor(userId);</div><div class="line">        if(author == null)&#123;</div><div class="line">            throw new RuntimeException(&quot;查询错误&quot;);</div><div class="line">        &#125;</div><div class="line">        return author;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     * 新增方法</div><div class="line">     */</div><div class="line">    @RequestMapping(method = RequestMethod.POST)</div><div class="line">    public void add(@RequestBody JSONObject jsonObject) &#123;</div><div class="line">        String userId = jsonObject.getString(&quot;user_id&quot;);</div><div class="line">        String realName = jsonObject.getString(&quot;real_name&quot;);</div><div class="line">        String nickName = jsonObject.getString(&quot;nick_name&quot;);</div><div class="line">        Author author = new Author();</div><div class="line">        if (author!=null) &#123;</div><div class="line">            author.setId(Long.valueOf(userId));</div><div class="line">        &#125;</div><div class="line">        author.setRealName(realName);</div><div class="line">        author.setNickName(nickName);</div><div class="line">        try&#123;</div><div class="line">            this.authorService.add(author);</div><div class="line">        &#125;catch(Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            throw new RuntimeException(&quot;新增错误&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * 更新方法</div><div class="line">     */</div><div class="line">    @RequestMapping(value = &quot;/&#123;userId:\\d+&#125;&quot;, method = RequestMethod.PUT)</div><div class="line">    public void update(@PathVariable Long userId, @RequestBody JSONObject jsonObject) &#123;</div><div class="line">        Author author = this.authorService.findAuthor(userId);</div><div class="line">        String realName = jsonObject.getString(&quot;real_name&quot;);</div><div class="line">        String nickName = jsonObject.getString(&quot;nick_name&quot;);</div><div class="line">        author.setRealName(realName);</div><div class="line">        author.setNickName(nickName);</div><div class="line">        try&#123;</div><div class="line">            this.authorService.update(author);</div><div class="line">        &#125;catch(Exception e)&#123;</div><div class="line">            e.printStackTrace();</div><div class="line">            throw new RuntimeException(&quot;更新错误&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    /**</div><div class="line">     * 删除方法</div><div class="line">     */</div><div class="line">    @RequestMapping(value = &quot;/&#123;userId:\\d+&#125;&quot;, method = RequestMethod.DELETE)</div><div class="line">    public void delete(@PathVariable Long userId) &#123;</div><div class="line">        try&#123;</div><div class="line">            this.authorService.delete(userId);</div><div class="line">        &#125;catch(Exception e)&#123;</div><div class="line">            throw new RuntimeException(&quot;删除错误&quot;);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>打开本地数据库 用postman进行测试即可</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>开发环境：idea</p>
<h1 id="初步准备">初步准备</h1><p>利用idea创建一个基本的Spring boot工程<br>java sdk 暂时用 1.7<br>GUI 选择组建时什么都不选<br>添加为Maven项目<br>此时pom文件状态为</p>]]>
    
    </summary>
    
      <category term="Spring boot" scheme="http://mzeht.com/tags/Spring-boot/"/>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91/java/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac下的整套翻墙方案]]></title>
    <link href="http://mzeht.com/2016/10/12/12.01mac%E4%B8%8B%E7%9A%84%E7%BF%BB%E5%A2%99%E6%96%B9%E6%A1%88/"/>
    <id>http://mzeht.com/2016/10/12/12.01mac下的翻墙方案/</id>
    <published>2016-10-12T14:20:33.000Z</published>
    <updated>2016-12-28T16:05:51.000Z</updated>
    <content type="html"><![CDATA[<p>最近brew升级网络速度很慢，加上Macos系统版本的变化，升级的变化也较大，（权限变化，需要用到brew的建议尽快升级）执行brew update老半天还失败，于是寻找命令行翻墙的解决方法，期间尝试了proxychains，效果不好，<code>我和同学os一个版本的，他可以，我的不行</code>，于是找别的解决方法</p>
<a id="more"></a>
<h1 id="基本准备">基本准备</h1><p>可用的shawdowsocks账号，图省事儿，我自己用的是付费的，我的推荐链接<a href="https://portal.shadowsocks.com/clientarea.php?action=products" target="_blank" rel="external">点击这里</a>，这样可以奖励我几块钱，<code>但是没什么用，我又不会去真的取出来。。。</code><br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/60755449-file_1482665290388_14ddb.png" alt=""><br>点击绿色按钮，就会看到给你的代理信息</p>
<h1 id="安装软件">安装软件</h1><p>上面网址下载资源有ss的mac客户端，但是不能开启http代理，功能不够强大，这里我们使用<code>Shadowsocks-NG</code>客户端，是它的增强版，<br><a href="https://github.com/shadowsocks/ShadowsocksX-NG" target="_blank" rel="external">项目github地址</a><br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/70231903-file_1482665629085_119e8.png" alt=""><br>可以看到完全满足较新Mac操作系统的要求，下载之后安装</p>
<h1 id="设置软件">设置软件</h1><p>安装好的软件上有扫描屏幕上二维码的功能，逐一点开网站的代理二维码信息，完成导入<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/61623448-file_1482665836110_12398.png" alt=""></p>
<blockquote>
<p>可以看到，相比于一般的ss客户端，此版本代理端口有变化，默认1086</p>
</blockquote>
<h1 id="浏览器端配置">浏览器端配置</h1><p>google浏览器配合插件SwitchyOmega<br>插件设置代理协议，地址，端口，以及不代理本地的常用localhost</p>
<blockquote>
<p>注意端口和ss客户端保持一致</p>
</blockquote>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/83024472-file_1482666059530_14152.png" alt=""></p>
<p>日常使用选择模式 auto switch<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/64770784-file_1482666144537_5bdf.png" alt=""></p>
<h1 id="命令行配置">命令行配置</h1><p>由于此客户端配置了http代理，所以我们在命令行中使用也很方便</p>
<p>配置一个别名方便启动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vim ~/.bash_profile</div></pre></td></tr></table></figure>
<p>添加</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># Custom Add not System</div><div class="line">alias proxy-on=&apos;export http_proxy=127.0.0.1:1087;export https_proxy=$http_proxy&apos;</div><div class="line">alias proxy-off=&apos;unset http_proxy;unset https_proxy&apos;</div></pre></td></tr></table></figure>
<p>这样在命令行中就可以通过proxy-on，proxy-off来对需要翻墙的操作提供代理</p>
<p>举个例子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">➜  ~ proxy-on</div><div class="line">➜  ~ brew install ffmpeg</div><div class="line">Updating Homebrew...</div><div class="line">==&gt; Auto-updated Homebrew!</div><div class="line">Updated 1 tap (homebrew/core).</div><div class="line">==&gt; Updated Formulae</div><div class="line">proxychains-ng ✔           rmlint                     vnstat</div><div class="line">ranger                     ruby-install</div><div class="line"></div><div class="line">==&gt; Installing dependencies for ffmpeg: lame, x264, xvid</div><div class="line">==&gt; Installing ffmpeg dependency: lame</div><div class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/lame-3.99.5.sierra.bottle.1</div><div class="line">######################################################################## 100.0%</div><div class="line">==&gt; Pouring lame-3.99.5.sierra.bottle.1.tar.gz</div><div class="line">🍺  /usr/local/Cellar/lame/3.99.5: 26 files, 2M</div><div class="line">==&gt; Installing ffmpeg dependency: x264</div><div class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/x264-r2728.sierra.bottle.ta</div><div class="line">######################################################################## 100.0%</div><div class="line">==&gt; Pouring x264-r2728.sierra.bottle.tar.gz</div><div class="line">🍺  /usr/local/Cellar/x264/r2728: 11 files, 3.3M</div><div class="line">==&gt; Installing ffmpeg dependency: xvid</div><div class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/xvid-1.3.4.sierra.bottle.ta</div><div class="line">######################################################################## 100.0%</div><div class="line">==&gt; Pouring xvid-1.3.4.sierra.bottle.tar.gz</div><div class="line">🍺  /usr/local/Cellar/xvid/1.3.4: 9 files, 1.2M</div><div class="line">==&gt; Installing ffmpeg</div><div class="line">==&gt; Downloading https://homebrew.bintray.com/bottles/ffmpeg-3.2.2.sierra.bottle.</div><div class="line">######################################################################## 100.0%</div><div class="line">==&gt; Pouring ffmpeg-3.2.2.sierra.bottle.tar.gz</div><div class="line">🍺  /usr/local/Cellar/ffmpeg/3.2.2: 239 files, 50.4M</div><div class="line">➜  ~ youtube-dl https://www.youtube.com/watch\?v\=n98cGaLi6sQ</div><div class="line">[youtube] n98cGaLi6sQ: Downloading webpage</div><div class="line">[youtube] n98cGaLi6sQ: Downloading video info webpage</div><div class="line">[youtube] n98cGaLi6sQ: Extracting video information</div><div class="line">[youtube] n98cGaLi6sQ: Downloading MPD manifest</div><div class="line">[dashsegments] Total fragments: 55</div><div class="line">[download] Destination: 【耳機時代】3D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.f136.mp4</div><div class="line">[download] 100% of 29.54MiB in 03:03</div><div class="line">[dashsegments] Total fragments: 30</div><div class="line">[download] Destination: 【耳機時代】3D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.f140.m4a</div><div class="line">[download] 100% of 4.32MiB in 01:12</div><div class="line">[ffmpeg] Merging formats into &quot;【耳機時代】3D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.mp4&quot;</div><div class="line">Deleting original file 【耳機時代】3D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.f136.mp4 (pass -k to keep)</div><div class="line">Deleting original file 【耳機時代】3D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.f140.m4a (pass -k to keep)</div></pre></td></tr></table></figure>
<p>使用代理，更新brew，安装ffmpeg，给youtube—dl添加代理 从youtube上下载了一个mv</p>
<hr>
<p>相关链接：</p>
<ol>
<li><a href="http://www.tuicool.com/articles/zuQziir" target="_blank" rel="external">http://www.tuicool.com/articles/zuQziir</a></li>
<li><a href="https://portal.shadowsocks.com/clientarea.php?action=products" target="_blank" rel="external">https://portal.shadowsocks.com/clientarea.php?action=products</a></li>
<li><a href="https://github.com/shadowsocks/ShadowsocksX-NG" target="_blank" rel="external">https://github.com/shadowsocks/ShadowsocksX-NG</a></li>
<li><a href="https://aiguge.xyz/shadowsocksx-ng/" target="_blank" rel="external">https://aiguge.xyz/shadowsocksx-ng/</a></li>
<li>chrome-extension://padekgcemlokbadohgkifijomclgjgif/options.html#/profile/proxy</li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近brew升级网络速度很慢，加上Macos系统版本的变化，升级的变化也较大，（权限变化，需要用到brew的建议尽快升级）执行brew update老半天还失败，于是寻找命令行翻墙的解决方法，期间尝试了proxychains，效果不好，<code>我和同学os一个版本的，他可以，我的不行</code>，于是找别的解决方法</p>]]>
    
    </summary>
    
      <category term="Mac" scheme="http://mzeht.com/tags/Mac/"/>
    
      <category term="翻墙" scheme="http://mzeht.com/tags/%E7%BF%BB%E5%A2%99/"/>
    
      <category term="工具" scheme="http://mzeht.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="其他" scheme="http://mzeht.com/categories/%E5%B7%A5%E5%85%B7/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Scroll分析]]></title>
    <link href="http://mzeht.com/2016/10/12/Android%20Scroll%E5%88%86%E6%9E%90/"/>
    <id>http://mzeht.com/2016/10/12/Android Scroll分析/</id>
    <published>2016-10-12T14:20:33.000Z</published>
    <updated>2017-01-15T08:01:28.000Z</updated>
    <content type="html"><![CDATA[<h1 id="滑动效果的产生">滑动效果的产生</h1><p>滑动的本质是移动View，通过不断改变View的坐标实现，与动画的原理类似，不过既然是滑动，就需要监听各种点击，触摸事件</p>
<a id="more"></a>
<h2 id="Android坐标系">Android坐标系</h2><p>Android坐标系以屏幕左上角为原点，如图<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-22/68901668.jpg" alt=""></p>
<h2 id="视图坐标系">视图坐标系</h2><p>子视图以父视图左上角为坐标原点，如图<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-23/13206722.jpg" alt=""><br>触控事件中，通过getX(),getY()获得的坐标就是视图中的坐标系</p>
<h2 id="触控事件">触控事件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">//单点触摸按下动作</div><div class="line">   public static final int ACTION_DOWN             = 0;</div><div class="line">   </div><div class="line">   //单点触摸离开动作</div><div class="line">   public static final int ACTION_UP               = 1;</div><div class="line">   </div><div class="line">  //触摸点移动动作</div><div class="line">   public static final int ACTION_MOVE             = 2;</div><div class="line">   </div><div class="line">  //触摸动作取消</div><div class="line">   public static final int ACTION_CANCEL           = 3;</div><div class="line">   </div><div class="line">  //触摸动作超出边界</div><div class="line">   public static final int ACTION_OUTSIDE          = 4;</div><div class="line"></div><div class="line">   //多点触摸按下动作</div><div class="line">   public static final int ACTION_POINTER_DOWN     = 5;</div><div class="line">   </div><div class="line">   //多点离开动作</div><div class="line">   public static final int ACTION_POINTER_UP       = 6;</div><div class="line"></div><div class="line">   public static final int ACTION_HOVER_MOVE       = 7;</div><div class="line"></div><div class="line">   </div><div class="line">   public static final int ACTION_SCROLL           = 8;</div><div class="line"></div><div class="line">  </div><div class="line">   public static final int ACTION_HOVER_ENTER      = 9;</div><div class="line"></div><div class="line">  </div><div class="line">   public static final int ACTION_HOVER_EXIT       = 10;</div><div class="line"></div><div class="line"></div><div class="line">   public static final int ACTION_BUTTON_PRESS   = 11;</div><div class="line"></div><div class="line">  </div><div class="line">   public static final int ACTION_BUTTON_RELEASE  = 12;</div></pre></td></tr></table></figure>
<p>一般在View的onTouchEvent方法中对event.getAction()进行筛选控制，（不涉及多点触控的情况下）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">@Override</div><div class="line">public boolean onTouchEvent(MotionEvent event) &#123;</div><div class="line">    int x = (int) event.getX();</div><div class="line">    int y = (int) event.getY();</div><div class="line">    switch (event.getAction()) &#123;</div><div class="line">        case MotionEvent.ACTION_DOWN:</div><div class="line">            lastX = (int) event.getX();</div><div class="line">            lastY = (int) event.getY();</div><div class="line">            break;</div><div class="line">        case MotionEvent.ACTION_MOVE:</div><div class="line">            int offsetX = x - lastX;</div><div class="line">            int offsetY = y - lastY;</div><div class="line">            ((View) getParent()).scrollBy(-offsetX, -offsetY);</div><div class="line">            break;</div><div class="line">        case MotionEvent.ACTION_UP:</div><div class="line">            // 手指离开时，执行滑动过程</div><div class="line">            View viewGroup = ((View) getParent());</div><div class="line">            mScroller.startScroll(</div><div class="line">                    viewGroup.getScrollX(),</div><div class="line">                    viewGroup.getScrollY(),</div><div class="line">                    -viewGroup.getScrollX(),</div><div class="line">                    -viewGroup.getScrollY());</div><div class="line">            invalidate();</div><div class="line">            break;</div><div class="line">    &#125;</div><div class="line">    return true;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>系统提供了很多获取坐标值，相对距离的坐标值的方法，如图<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-23/82371833.jpg" alt=""></p>
<p>大概分为两类：</p>
<hr>
<p>View提供的获取坐标的方法<br>getTop(): 获取到View自身顶边到其父布局顶部的距离<br>getLeft() : 获取到View自身左边到其父布局左边的距离<br>getRight():<br>getBottom();</p>
<hr>
<p>MotionEvent提供的方法<br>getX():    获取点击事件距离控件左边的距离，即视图坐标<br>getY():获取点击事件距离控件顶部的距离，即视图坐标<br>getRawX():获取点击事件距离整个屏幕左边的距离，即绝对坐标<br>getRawY():….</p>
<h1 id="实现滑动的七种方法">实现滑动的七种方法</h1><h2 id="layout方法">layout方法</h2>]]></content>
    <summary type="html">
    <![CDATA[<h1 id="滑动效果的产生">滑动效果的产生</h1><p>滑动的本质是移动View，通过不断改变View的坐标实现，与动画的原理类似，不过既然是滑动，就需要监听各种点击，触摸事件</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://mzeht.com/tags/Android/"/>
    
      <category term="Scroll" scheme="http://mzeht.com/tags/Scroll/"/>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="AndroidHero" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/AndroidHero/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[ListView使用技巧]]></title>
    <link href="http://mzeht.com/2016/10/10/ListView%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>http://mzeht.com/2016/10/10/ListView使用技巧/</id>
    <published>2016-10-10T14:20:33.000Z</published>
    <updated>2016-12-25T11:22:43.000Z</updated>
    <content type="html"><![CDATA[<p>本来想跳过的，看了下书，实在是太熟悉了，待办，先占个坑<br><a id="more"></a></p>
<h1 id="常用优化技巧">常用优化技巧</h1><h2 id="使用ViewHolder">使用ViewHolder</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">public class NotifyAdapter extends BaseAdapter &#123;</div><div class="line"></div><div class="line">    private List&lt;String&gt; mData;</div><div class="line">    private LayoutInflater mInflater;</div><div class="line"></div><div class="line">    public NotifyAdapter(Context context, List&lt;String&gt; data) &#123;</div><div class="line">        this.mData = data;</div><div class="line">        mInflater = LayoutInflater.from(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public int getCount() &#123;</div><div class="line">        return mData.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public Object getItem(int position) &#123;</div><div class="line">        return mData.get(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public long getItemId(int position) &#123;</div><div class="line">        return position;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public View getView(int position, View convertView, ViewGroup parent) &#123;</div><div class="line">        ViewHolder holder = null;</div><div class="line">        // 判断是否缓存</div><div class="line">        if (convertView == null) &#123;</div><div class="line">            holder = new ViewHolder();</div><div class="line">            // 通过LayoutInflater实例化布局</div><div class="line">            convertView = mInflater.inflate(R.layout.notify_item, null);</div><div class="line">            holder.img = (ImageView) convertView.findViewById(R.id.imageView);</div><div class="line">            holder.title = (TextView) convertView.findViewById(R.id.textView);</div><div class="line">            convertView.setTag(holder);</div><div class="line">        &#125; else &#123;</div><div class="line">            // 通过tag找到缓存的布局</div><div class="line">            holder = (ViewHolder) convertView.getTag();</div><div class="line">        &#125;</div><div class="line">        // 设置布局中控件要显示的视图</div><div class="line">        holder.img.setBackgroundResource(R.mipmap.ic_launcher);</div><div class="line">        holder.title.setText(mData.get(position));</div><div class="line">        return convertView;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public final class ViewHolder &#123;</div><div class="line">        public ImageView img;</div><div class="line">        public TextView title;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="UI设置">UI设置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">//分割线</div><div class="line">android:divider=&quot;@android:color/darker_gray&quot;</div><div class="line">android:dividerHeight=&quot;10dp&quot;</div><div class="line">//设置为透明</div><div class="line">android:divider=&quot;@null&quot;</div><div class="line">//取消滚动条</div><div class="line">android:scrollbars=&quot;none&quot;</div><div class="line">取消item点击效果</div><div class="line">android:listSelector=&quot;@android:color/transparent&quot;</div></pre></td></tr></table></figure>
<h2 id="设置需要显示的Item">设置需要显示的Item</h2><hr>
<p>第几项置顶显示<br>ListView.setSelection(n);<br>//特殊用法,显示出数据的最后一项<br> mListView.setSelection(mData.size() - 1);<br> <a href="http://blog.csdn.net/szyangzhen/article/details/47972509" target="_blank" rel="external">参考</a></p>
<hr>
<p>平滑移动</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">//        mListView.smoothScrollBy(1000,1000);</div><div class="line">//        mListView.smoothScrollByOffset(15);</div><div class="line">//        mListView.smoothScrollToPosition(15);</div></pre></td></tr></table></figure>
<h2 id="动态修改数据">动态修改数据</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public class NotifyTest extends Activity &#123;</div><div class="line"></div><div class="line">    private List&lt;String&gt; mData;</div><div class="line">    private ListView mListView;</div><div class="line">    private NotifyAdapter mAdapter;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.notify);</div><div class="line">        mData = new ArrayList&lt;String&gt;();</div><div class="line">        for (int i = 0; i &lt; 20; i++) &#123;</div><div class="line">            mData.add(&quot;&quot; + i);</div><div class="line">        &#125;</div><div class="line">        mListView = (ListView) findViewById(R.id.listView);</div><div class="line">        mAdapter = new NotifyAdapter(this, mData);</div><div class="line">        mListView.setAdapter(mAdapter);</div><div class="line">        for (int i = 0; i &lt; mListView.getChildCount(); i++) &#123;</div><div class="line">            View view = mListView.getChildAt(i);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void btnAdd(View view) &#123;</div><div class="line">        mData.add(&quot;new&quot;);</div><div class="line">        mAdapter.notifyDataSetChanged();</div><div class="line">        mListView.setSelection(mData.size() - 1);</div><div class="line">//        mListView.smoothScrollBy(1000,1000);</div><div class="line">//        mListView.smoothScrollByOffset(15);</div><div class="line">//        mListView.smoothScrollToPosition(15);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>传入的List对象要一致</strong></p>
<h2 id="遍历所有Item">遍历所有Item</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">for (int i = 0; i &lt; mListView.getChildCount(); i++) &#123;</div><div class="line">            View view = mListView.getChildAt(i);</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<h2 id="处理空ListView">处理空ListView</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">listView.setEmptyView(findViewById(R.id.empty_view))</div></pre></td></tr></table></figure>
<h2 id="ListView滑动监听">ListView滑动监听</h2><h3 id="OnTouchListener">OnTouchListener</h3><p>有很多事件类型</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">mListView.setOnTouchListener(new View.OnTouchListener() &#123;</div><div class="line">            @Override</div><div class="line">            public boolean onTouch(View v, MotionEvent event) &#123;</div><div class="line"></div><div class="line">                switch (event.getAction()) &#123;</div><div class="line">                    case MotionEvent.ACTION_DOWN:</div><div class="line">                        //触摸时操作</div><div class="line"></div><div class="line">                        break;</div><div class="line"></div><div class="line">                    case MotionEvent.ACTION_MOVE:</div><div class="line">                        //移动时操作</div><div class="line">                        break;</div><div class="line"></div><div class="line">                    case MotionEvent.ACTION_UP:</div><div class="line">                        //移动时操作</div><div class="line">                        break;</div><div class="line">                &#125;</div><div class="line">                return false;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div></pre></td></tr></table></figure>
<h3 id="OnScrollListener">OnScrollListener</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">mListView.setOnScrollListener(new AbsListView.OnScrollListener() &#123;</div><div class="line">           @Override</div><div class="line">           public void onScrollStateChanged(AbsListView view, int scrollState) &#123;</div><div class="line"></div><div class="line">               switch (scrollState)&#123;</div><div class="line">                   case SCROLL_STATE_IDLE:</div><div class="line">                       //滑动停止时</div><div class="line">                       Log.d(&quot;test&quot;,&quot;SCROLL_STATE_IDLE&quot;);</div><div class="line">                       break;</div><div class="line">                   case SCROLL_STATE_TOUCH_SCROLL:</div><div class="line">                       // 正在滚动</div><div class="line">                       Log.d(&quot;test&quot;,&quot;SCROLL_STATE_TOUCH_SCROLL&quot;);</div><div class="line">                       break;</div><div class="line">                   case SCROLL_STATE_FLING:</div><div class="line">                       //手指抛动时，即手指用力滑动</div><div class="line">                       Log.d(&quot;test&quot;,&quot;SCROLL_STATE_FLING&quot;);</div><div class="line">                       break;</div><div class="line">               &#125;</div><div class="line"></div><div class="line">           &#125;</div><div class="line"></div><div class="line">           /**</div><div class="line">            *</div><div class="line">            * @param view</div><div class="line">            * @param firstVisibleItem 当前能看见的第一个item的id（从0开始），包括没有完整显示的item</div><div class="line">            * @param visibleItemCount 当前能看见的item总数</div><div class="line">            * @param totalItemCount 整个listview的item总数</div><div class="line">            */</div><div class="line">           @Override</div><div class="line">           public void onScroll(AbsListView view, int firstVisibleItem, int visibleItemCount, int totalItemCount) &#123;</div><div class="line">                   //滚动时一直调用</div><div class="line">               Log.d(&quot;test&quot;,&quot;onScroll&quot;);</div><div class="line"></div><div class="line">               /**</div><div class="line">                * 用法1 当前可视的第一个item的id加上当前可视的item数量等于listview总数的时候，可以判断滚动到了最后一行</div><div class="line">                *</div><div class="line">                */</div><div class="line">               if (firstVisibleItem+visibleItemCount==totalItemCount&amp;&amp;totalItemCount&gt;0)&#123;</div><div class="line">                   //滚动到了最后一行</div><div class="line">               &#125;</div><div class="line"></div><div class="line">               /**</div><div class="line">                * 判断滚动的方向</div><div class="line">                */</div><div class="line">               Log.d(&quot;判断前&quot;,firstVisibleItem+&quot;/&quot;+lastVisableItemPostion);</div><div class="line">               if (firstVisibleItem&gt;lastVisableItemPostion)&#123;</div><div class="line">                   //上滑</div><div class="line">                   Log.d(&quot;test&quot;, &quot;上滑&quot;);</div><div class="line">               &#125;else if (firstVisibleItem&lt;lastVisableItemPostion)&#123;</div><div class="line">                   //下滑</div><div class="line">                   Log.d(&quot;test&quot;, &quot;下滑&quot;);</div><div class="line">               &#125;</div><div class="line"></div><div class="line">               lastVisableItemPostion=firstVisibleItem;</div><div class="line">               Log.d(&quot;判断后&quot;,firstVisibleItem+&quot;/&quot;+lastVisableItemPostion);</div><div class="line">           &#125;</div><div class="line">       &#125;);</div></pre></td></tr></table></figure>
<h3 id="其他方法">其他方法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line">       * 获得可见的item的位置</div><div class="line">       */</div><div class="line"></div><div class="line">      mListView.getFirstVisiblePosition();</div><div class="line">      mListView.getLastVisiblePosition();</div></pre></td></tr></table></figure>
<h2 id="ListView常用拓展">ListView常用拓展</h2><hr>
<h3 id="让ListView具有弹性">让ListView具有弹性</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">public class FlexibleListView extends ListView &#123;</div><div class="line"></div><div class="line">    private static int mMaxOverDistance = 50;</div><div class="line">    private Context mContext;</div><div class="line"></div><div class="line">    public FlexibleListView(Context context, AttributeSet attrs,</div><div class="line">                            int defStyleAttr) &#123;</div><div class="line">        super(context, attrs, defStyleAttr);</div><div class="line">        this.mContext = context;</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public FlexibleListView(Context context, AttributeSet attrs) &#123;</div><div class="line">        super(context, attrs);</div><div class="line">        this.mContext = context;</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public FlexibleListView(Context context) &#123;</div><div class="line">        super(context);</div><div class="line">        this.mContext = context;</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void initView() &#123;</div><div class="line">        DisplayMetrics metrics = mContext.getResources().getDisplayMetrics();</div><div class="line">        float density = metrics.density;</div><div class="line">        mMaxOverDistance = (int) (density * mMaxOverDistance);</div><div class="line">    &#125;</div><div class="line">	</div><div class="line">	</div><div class="line">	 /**</div><div class="line">     * 滑动到边缘时调用的方法</div><div class="line">     * @param deltaX</div><div class="line">     * @param deltaY</div><div class="line">     * @param scrollX</div><div class="line">     * @param scrollY</div><div class="line">     * @param scrollRangeX</div><div class="line">     * @param scrollRangeY</div><div class="line">     * @param maxOverScrollX</div><div class="line">     * @param maxOverScrollY</div><div class="line">     * Number of pixels to overscroll by in either direction</div><div class="line">     *          along the Y axis.</div><div class="line">     * @param isTouchEvent</div><div class="line">     * @return</div><div class="line">     */</div><div class="line">    @Override</div><div class="line">    protected boolean overScrollBy(int deltaX, int deltaY,</div><div class="line">                                   int scrollX, int scrollY,</div><div class="line">                                   int scrollRangeX, int scrollRangeY,</div><div class="line">                                   int maxOverScrollX, int maxOverScrollY,</div><div class="line">                                   boolean isTouchEvent) &#123;</div><div class="line">        return super.overScrollBy(deltaX, deltaY,</div><div class="line">                scrollX, scrollY,</div><div class="line">                scrollRangeX, scrollRangeY,</div><div class="line">                maxOverScrollX, mMaxOverDistance,</div><div class="line">                isTouchEvent);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="自动显示，隐藏的ListView">自动显示，隐藏的ListView</h3><p>初始化操作</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">/获取系统认为的最低滑动距离</div><div class="line">        mTouchSlop = ViewConfiguration.get(this).getScaledTouchSlop();</div><div class="line">        mToolbar = (Toolbar) findViewById(R.id.toolbar);</div><div class="line">        mListView = (ListView) findViewById(R.id.listview);</div><div class="line">        for (int i = 0; i &lt; mStr.length; i++) &#123;</div><div class="line">            mStr[i] = &quot;Item &quot; + i;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        //Listview添加头部View</div><div class="line">        View header = new View(this);</div><div class="line">        header.setLayoutParams(new AbsListView.LayoutParams(</div><div class="line">                AbsListView.LayoutParams.MATCH_PARENT,</div><div class="line">                (int) getResources().getDimension(</div><div class="line">                        R.dimen.abc_action_bar_default_height_material)));</div><div class="line">        mListView.addHeaderView(header);</div><div class="line">        mListView.setAdapter(new ArrayAdapter&lt;String&gt;(</div><div class="line">                ScrollHideListView.this,</div><div class="line">                android.R.layout.simple_expandable_list_item_1,</div><div class="line">                mStr));</div><div class="line">        mListView.setOnTouchListener(myTouchListener);</div></pre></td></tr></table></figure>
<p>设置监听器</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">View.OnTouchListener myTouchListener = new View.OnTouchListener() &#123;</div><div class="line">        @Override</div><div class="line">        public boolean onTouch(View v, MotionEvent event) &#123;</div><div class="line">            switch (event.getAction()) &#123;</div><div class="line">                case MotionEvent.ACTION_DOWN:</div><div class="line">                    mFirstY = event.getY();</div><div class="line">                    break;</div><div class="line">                case MotionEvent.ACTION_MOVE:</div><div class="line">                    mCurrentY = event.getY();</div><div class="line">                    if (mCurrentY - mFirstY &gt; mTouchSlop) &#123;</div><div class="line">                        direction = 0;// down</div><div class="line">                    &#125; else if (mFirstY - mCurrentY &gt; mTouchSlop) &#123;</div><div class="line">                        direction = 1;// up</div><div class="line">                    &#125;</div><div class="line">                    if (direction == 1) &#123;</div><div class="line">                        if (mShow) &#123;</div><div class="line">                            toolbarAnim(1);//hide</div><div class="line">                            mShow = !mShow;</div><div class="line">                        &#125;</div><div class="line">                    &#125; else if (direction == 0) &#123;</div><div class="line">                        if (!mShow) &#123;</div><div class="line">                            toolbarAnim(0);//show</div><div class="line">                            mShow = !mShow;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                    break;</div><div class="line">                case MotionEvent.ACTION_UP:</div><div class="line">                    break;</div><div class="line">            &#125;</div><div class="line">            return false;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div></pre></td></tr></table></figure>
<p>动画控制</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">private ObjectAnimator mAnimator;</div><div class="line"></div><div class="line">private void toolbarAnim(int flag) &#123;</div><div class="line">        if (mAnimator != null &amp;&amp; mAnimator.isRunning()) &#123;</div><div class="line">            mAnimator.cancel();</div><div class="line">        &#125;</div><div class="line">        if (flag == 0) &#123;</div><div class="line">            mAnimator = ObjectAnimator.ofFloat(mToolbar,</div><div class="line">                    &quot;translationY&quot;, mToolbar.getTranslationY(), 0);</div><div class="line">        &#125; else &#123;</div><div class="line">            mAnimator = ObjectAnimator.ofFloat(mToolbar,</div><div class="line">                    &quot;translationY&quot;, mToolbar.getTranslationY(),</div><div class="line">                    -mToolbar.getHeight());</div><div class="line">        &#125;</div><div class="line">        mAnimator.start();</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h3 id="动态改变Listview布局">动态改变Listview布局</h3><p>这里以点击某一项listview为例子</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">public class FocusListViewAdapter extends BaseAdapter &#123;</div><div class="line"></div><div class="line">    private List&lt;String&gt; mData;</div><div class="line">    private Context mContext;</div><div class="line">    private int mCurrentItem = 0;</div><div class="line"></div><div class="line">    public FocusListViewAdapter(Context context, List&lt;String&gt; data) &#123;</div><div class="line">        this.mContext = context;</div><div class="line">        this.mData = data;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getCount() &#123;</div><div class="line">        return mData.size();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public Object getItem(int position) &#123;</div><div class="line">        return mData.get(position);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public long getItemId(int position) &#123;</div><div class="line">        return position;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     *</div><div class="line">     * @param position</div><div class="line">     * @param convertView</div><div class="line">     * @param parent</div><div class="line">     * @return</div><div class="line">     * 绘制View的方法中对记录的position进行区别处理</div><div class="line">     * 初次绘制时调用</div><div class="line">     */</div><div class="line">    public View getView(int position, View convertView, ViewGroup parent) &#123;</div><div class="line">        LinearLayout layout = new LinearLayout(mContext);</div><div class="line">        layout.setOrientation(LinearLayout.VERTICAL);</div><div class="line">        if (mCurrentItem == position) &#123;</div><div class="line">            layout.addView(addFocusView(position));</div><div class="line">        &#125; else &#123;</div><div class="line">            layout.addView(addNormalView(position));</div><div class="line">        &#125;</div><div class="line">        return layout;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    //暴露动态改变记录position的方法</div><div class="line">    public void setCurrentItem(int currentItem) &#123;</div><div class="line">        this.mCurrentItem = currentItem;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line">    //加载布局1</div><div class="line">    private View addFocusView(int i) &#123;</div><div class="line">        ImageView iv = new ImageView(mContext);</div><div class="line">        iv.setImageResource(R.mipmap.ic_launcher);</div><div class="line">        return iv;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //加载布局2</div><div class="line">    private View addNormalView(int i) &#123;</div><div class="line">        LinearLayout layout = new LinearLayout(mContext);</div><div class="line">        layout.setOrientation(LinearLayout.HORIZONTAL);</div><div class="line">        ImageView iv = new ImageView(mContext);</div><div class="line">        iv.setImageResource(R.drawable.in_icon);</div><div class="line">        layout.addView(iv, new LinearLayout.LayoutParams(</div><div class="line">                LinearLayout.LayoutParams.WRAP_CONTENT,</div><div class="line">                LinearLayout.LayoutParams.WRAP_CONTENT));</div><div class="line">        TextView tv = new TextView(mContext);</div><div class="line">        tv.setText(mData.get(i));</div><div class="line">        layout.addView(tv, new LinearLayout.LayoutParams(</div><div class="line">                LinearLayout.LayoutParams.WRAP_CONTENT,</div><div class="line">                LinearLayout.LayoutParams.WRAP_CONTENT));</div><div class="line">        layout.setGravity(Gravity.CENTER);</div><div class="line">        return layout;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>control</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">public class FocusListViewTest extends Activity &#123;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</div><div class="line">        super.onCreate(savedInstanceState);</div><div class="line">        setContentView(R.layout.focus);</div><div class="line">        ListView listView = (ListView) findViewById(R.id.focus_listView);</div><div class="line">        List&lt;String&gt; data = new ArrayList&lt;String&gt;();</div><div class="line">        data.add(&quot;I am item 1&quot;);</div><div class="line">        data.add(&quot;I am item 2&quot;);</div><div class="line">        data.add(&quot;I am item 3&quot;);</div><div class="line">        data.add(&quot;I am item 4&quot;);</div><div class="line">        data.add(&quot;I am item 5&quot;);</div><div class="line">        final FocusListViewAdapter adapter = new FocusListViewAdapter(this, data);</div><div class="line">        listView.setAdapter(adapter);</div><div class="line">        listView.setOnItemClickListener(new AdapterView.OnItemClickListener() &#123;</div><div class="line">            @Override</div><div class="line">            public void onItemClick(AdapterView&lt;?&gt; parent, View view,</div><div class="line">                                    int position, long id) &#123;</div><div class="line">                adapter.setCurrentItem(position);</div><div class="line">                /**</div><div class="line">                 * listView 初次绘制某一项数据时调用geiview方法</div><div class="line">                 * 之后需要notifyDataSetChanged才能重绘View</div><div class="line">                 */</div><div class="line">                adapter.notifyDataSetChanged();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>本来想跳过的，看了下书，实在是太熟悉了，待办，先占个坑<br>]]>
    
    </summary>
    
      <category term="Android" scheme="http://mzeht.com/tags/Android/"/>
    
      <category term="ListView" scheme="http://mzeht.com/tags/ListView/"/>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="AndroidHero" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/AndroidHero/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android控件架构与自定义控件详解]]></title>
    <link href="http://mzeht.com/2016/10/08/Android%E6%8E%A7%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%E8%AF%A6%E8%A7%A3/"/>
    <id>http://mzeht.com/2016/10/08/Android控件架构与自定义控件详解/</id>
    <published>2016-10-08T11:18:29.000Z</published>
    <updated>2016-12-25T11:22:37.000Z</updated>
    <content type="html"><![CDATA[<h1 id="View的测量">View的测量</h1><p>Android帮助测量View的类—<code>MeasureSpec</code>类<br>MeasureSpec是一个32位的int值，高两位为测量的模式，低30位为测量的大小<br>使用位运算提高并优化效率</p>
<a id="more"></a>
<h2 id="测量的模式">测量的模式</h2><ul>
<li><p><code>EXACTLY</code> 精确值模式<br>控件layout_width,layout_height属性指定为具体数值时，或者是match_parent属性时</p>
</li>
<li><p><code>AT_MOST</code> 最大值模式<br>控件layout_width,layout_height属性使用warp_content，控件的大小取不超过父级控件的最大值</p>
</li>
<li><p><code>UNSPECIFIED</code><br>不指定测量模式，可以任意大小，通常自定义View绘制时才用到</p>
</li>
</ul>
<h2 id="Demo">Demo</h2><ul>
<li><p>View类默认的<code>onMeasure()</code>方法只支持EXACTLY模式，如果该View要支持warp_content属性<br>   就必须要重写onMeasure()方法 指定AT_MOST模式下warp_content时的大小</p>
  <figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> @Override</div><div class="line">protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) &#123;</div><div class="line">    super.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<pre><code>进入`onMeasure`方法,看源码
可以发现最终调用



<span class="comment"><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">setMeasuredDimension(getDefaultSize(getSuggestedMinimumWidth(), widthMeasureSpec),getDefaultSize(getSuggestedMinimumHeight(), heightMeasureSpec));</div></pre></td></tr></table></figure></span>
</code></pre><ul>
<li><p>setMeasuredDimension(int measuredWidth, int measuredHeight)里面的参数相当于px单位   </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">public class MyView extends View &#123;</div><div class="line">    public MyView(Context context) &#123;</div><div class="line">        super(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public MyView(Context context, AttributeSet attrs) &#123;</div><div class="line">        super(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public MyView(Context context, AttributeSet attrs, int defStyleAttr) &#123;</div><div class="line">        super(context, attrs, defStyleAttr);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /**</div><div class="line">     *</div><div class="line">     * @param widthMeasureSpec</div><div class="line">     * @param heightMeasureSpec</div><div class="line">     * View类默认的onMeasure()方法只支持EXACTLY模式，如果该View要支持warp_content属性</div><div class="line">     * 就必须要重写onMeasure()方法 指定AT_MOSt模式下warp_content时的大小</div><div class="line">     */</div><div class="line">    @Override</div><div class="line">    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) &#123;</div><div class="line">        super.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class="line">        setMeasuredDimension(measure(widthMeasureSpec), measure(heightMeasureSpec));</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private int measure(int measureSpec) &#123;</div><div class="line">        int result = 0;</div><div class="line">        int specMode = MeasureSpec.getMode(measureSpec);</div><div class="line">        int specSize = MeasureSpec.getSize(measureSpec);</div><div class="line"></div><div class="line">        //精确值模式，参数直接使用</div><div class="line">        if (specMode == MeasureSpec.EXACTLY) &#123;</div><div class="line">            result = specSize;</div><div class="line"></div><div class="line">            //最大值模式，wrap_content时取不超过父级空间的最大值</div><div class="line">        &#125; else if (specMode == MeasureSpec.AT_MOST) &#123;</div><div class="line">            result = 200;</div><div class="line">            result = Math.min(result, specSize);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        /**</div><div class="line">         * 200PX</div><div class="line">         * setMeasuredDimension(int measuredWidth, int measuredHeight)里面的参数相当于px单位</div><div class="line">         */</div><div class="line">        return result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        super.onDraw(canvas);</div><div class="line">        canvas.drawColor(Color.GRAY);</div><div class="line">        int width = getWidth();</div><div class="line">        int height = getHeight();</div><div class="line">        Log.d(&quot;xys&quot;, &quot;width : &quot; + width + &quot; height : &quot; + height);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="ViewGroup的测量">ViewGroup的测量</h1><p>ViewGroup大小为warp_content时，需要遍历子View，调用其Measure方法，获得所有子View的大小，以便确定自己的大小;<br>测量完毕后，将子View放到合适的位置，遍历使用子View的Layout方法，指定其显示的具体位置，从而决定其布局的位置；<br>自定义ViewGroup时，通常会重写onLayout()方法来控制子View显示位置的逻辑；<br>如果还要支持warp_content属性，必须重写onMeasure()方法，这点与View相同</p>
<h1 id="ViewGroup的绘制">ViewGroup的绘制</h1><p>ViewGroup通常不需要绘制，如果没有指定ViewGroup的背景颜色，ViewGroup的onDarw()方法不会被调用；<br>ViewGroup会调用dispathchDarw()方法绘制子View，同样遍历子View，调用子View的绘制方法完成绘制；</p>
<h1 id="自定义View">自定义View</h1><ul>
<li>通常重写onDarw方法来绘制View的显示内容；</li>
<li>使用warp_content属性，必须重写onMeasure方法</li>
<li>自定义attrs属性，可以设置新的配置属性</li>
</ul>
<h2 id="一些重要的回调方法">一些重要的回调方法</h2><ul>
<li>onFinishInflate 从xml加载组件后</li>
<li>onSizeChanged 组件大小改变后</li>
<li>onMeasure 回调此方法进行测量</li>
<li>onLayout 回调此方法确定显示位置</li>
<li>onTouchEvent 触摸事件时回调</li>
</ul>
<p><a href="http://www.jianshu.com/p/744550c02cf1s" target="_blank" rel="external">自定义控件常用api</a></p>
<h2 id="自定义View的三种方法">自定义View的三种方法</h2><ul>
<li>拓展现有控件</li>
<li>组合控件</li>
<li>重写View实现全新控件</li>
</ul>
<h3 id="拓展现有控件">拓展现有控件</h3><p>拓展TextView</p>
<blockquote>
<p>Demo1</p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div></pre></td><td class="code"><pre><div class="line">public class MyTextView extends TextView &#123;</div><div class="line"></div><div class="line">    private Paint mPaint1,mPaint2;</div><div class="line">    public MyTextView(Context context) &#123;</div><div class="line">        super(context);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public MyTextView(Context context, AttributeSet attrs) &#123;</div><div class="line">        super(context, attrs);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public MyTextView(Context context, AttributeSet attrs, int defStyleAttr) &#123;</div><div class="line">        super(context, attrs, defStyleAttr);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        // 绘制外层矩形</div><div class="line">        canvas.drawRect(</div><div class="line">                0, 0,</div><div class="line">                getMeasuredWidth(),</div><div class="line">                getMeasuredHeight(),</div><div class="line">                mPaint1);</div><div class="line">        // 绘制内层矩形</div><div class="line">        canvas.drawRect(</div><div class="line">                10,</div><div class="line">                10,</div><div class="line">                getMeasuredWidth() - 10,</div><div class="line">                getMeasuredHeight() - 10,</div><div class="line">                mPaint2);</div><div class="line">        canvas.save();</div><div class="line">        // 绘制文字前平移10像素</div><div class="line">        canvas.translate(10, 0);</div><div class="line">        // 父类完成的方法，即绘制文本</div><div class="line">        super.onDraw(canvas);</div><div class="line">        canvas.restore();</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private  void initView()&#123;</div><div class="line">        mPaint1=new Paint();</div><div class="line">        mPaint1.setColor(getResources().getColor(android.R.color.holo_blue_light));</div><div class="line">        mPaint1.setStyle(Paint.Style.FILL);</div><div class="line">        mPaint2=new Paint();</div><div class="line">        mPaint2.setColor(Color.YELLOW);</div><div class="line">        mPaint2.setStyle(Paint.Style.FILL);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) &#123;</div><div class="line">        super.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>xml<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&lt;com.wpmac.androidhero.unit3.view.MyTextView android:layout_width=&quot;match_parent&quot;</div><div class="line">                                                 android:layout_height=&quot;wrap_content&quot;</div><div class="line">                                                 android:textSize=&quot;20sp&quot;</div><div class="line">                                                 android:text=&quot;Android hero&quot;/&gt;</div></pre></td></tr></table></figure></p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-9/63189918.jpg" alt=""></p>
<blockquote>
<p>Demo2</p>
</blockquote>
<p>文字添加线性变换效果</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line">public class ShineTextView extends TextView &#123;</div><div class="line"></div><div class="line">    private LinearGradient mLinearGradient;</div><div class="line">    private Matrix mGradientMatrix;</div><div class="line">    private Paint mPaint;</div><div class="line">    private int mViewWidth = 0;</div><div class="line">    private int mTranslate = 0;</div><div class="line"></div><div class="line">    public ShineTextView(Context context) &#123;</div><div class="line">        super(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public ShineTextView(Context context, AttributeSet attrs) &#123;</div><div class="line">        super(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public ShineTextView(Context context, AttributeSet attrs, int defStyleAttr) &#123;</div><div class="line">        super(context, attrs, defStyleAttr);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onSizeChanged(int w, int h, int oldw, int oldh) &#123;</div><div class="line">        super.onSizeChanged(w, h, oldw, oldh);</div><div class="line">        if (mViewWidth == 0) &#123;</div><div class="line">            mViewWidth = getMeasuredWidth();</div><div class="line">            if (mViewWidth &gt; 0) &#123;</div><div class="line">                mPaint = getPaint();</div><div class="line">                mLinearGradient = new LinearGradient(</div><div class="line">                        0,</div><div class="line">                        0,</div><div class="line">                        mViewWidth,</div><div class="line">                        0,</div><div class="line">                        new int[]&#123;</div><div class="line">                                Color.BLUE, 0xffffffff,</div><div class="line">                                Color.BLUE&#125;,</div><div class="line">                        null,</div><div class="line">                        Shader.TileMode.CLAMP);</div><div class="line">                mPaint.setShader(mLinearGradient);</div><div class="line">                mGradientMatrix = new Matrix();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        super.onDraw(canvas);</div><div class="line">        if (mGradientMatrix != null) &#123;</div><div class="line">            mTranslate += mViewWidth / 5;</div><div class="line">            if (mTranslate &gt; 2 * mViewWidth) &#123;</div><div class="line">                mTranslate = -mViewWidth;</div><div class="line">            &#125;</div><div class="line">            mGradientMatrix.setTranslate(mTranslate, 0);</div><div class="line">            mLinearGradient.setLocalMatrix(mGradientMatrix);</div><div class="line">            postInvalidateDelayed(100);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="复合控件">复合控件</h3><ul>
<li>定义自定义属性</li>
</ul>
<p>新建或修改attrs.xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;resources&gt;</div><div class="line"></div><div class="line">    &lt;declare-styleable name=&quot;TopBar&quot;&gt;</div><div class="line"></div><div class="line">        &lt;attr name=&quot;mtitle&quot; format=&quot;string&quot;/&gt;</div><div class="line">        &lt;attr name=&quot;mtitleTextSize&quot; format=&quot;dimension&quot;/&gt;</div><div class="line">        &lt;attr name=&quot;mtitleTextColor&quot; format=&quot;color&quot;/&gt;</div><div class="line">        &lt;attr name=&quot;mleftTextColor&quot; format=&quot;color&quot;/&gt;</div><div class="line">        &lt;attr name=&quot;mleftBackground&quot; format=&quot;reference|color&quot;/&gt;</div><div class="line">        &lt;attr name=&quot;mleftText&quot; format=&quot;string&quot;/&gt;</div><div class="line">        &lt;attr name=&quot;mrightTextColor&quot; format=&quot;color&quot;/&gt;</div><div class="line">        &lt;attr name=&quot;mrightBackground&quot; format=&quot;reference|color&quot;/&gt;</div><div class="line">        &lt;attr name=&quot;mrightText&quot; format=&quot;string&quot;/&gt;</div><div class="line">    &lt;/declare-styleable&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;/resources&gt;</div></pre></td></tr></table></figure>
<p><a href="http://www.cnblogs.com/jisheng/archive/2013/01/10/2854891.html" target="_blank" rel="external">关于format类型</a></p>
<ul>
<li>引入命名空间</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">&lt;RelativeLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">                xmlns:custom=&quot;http://schemas.android.com/apk/res-auto&quot;</div><div class="line">                xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">                android:layout_width=&quot;match_parent&quot;</div><div class="line">                android:layout_height=&quot;match_parent&quot;</div><div class="line">                android:padding=&quot;5dp&quot;</div><div class="line">                tools:context=&quot;.MainActivity&quot;&gt;</div><div class="line">    &lt;com.wpmac.androidhero.unit3.view.TopBar</div><div class="line">        android:id=&quot;@+id/topBar&quot;</div><div class="line">        android:layout_width=&quot;wrap_content&quot;</div><div class="line">        android:layout_height=&quot;40dp&quot;</div><div class="line">        custom:mleftBackground=&quot;@drawable/blue_button&quot;</div><div class="line">        custom:mleftText=&quot;Back&quot;</div><div class="line">        custom:mleftTextColor=&quot;#FFFFFF&quot;</div><div class="line">        custom:mrightBackground=&quot;@drawable/blue_button&quot;</div><div class="line">        custom:mrightText=&quot;More&quot;</div><div class="line">        custom:mrightTextColor=&quot;#FFFFFF&quot;</div><div class="line">        custom:mtitle=&quot;自定义标题&quot;</div><div class="line">        custom:mtitleTextColor=&quot;#FFFFFF&quot;</div><div class="line">        custom:mtitleTextSize=&quot;10sp&quot; /&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;/RelativeLayout&gt;</div></pre></td></tr></table></figure>
<ul>
<li>获得自定义的属性值</li>
</ul>
<p>注意 <code>ta.recycle()</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">// 通过这个方法，将你在atts.xml中定义的declare-styleable</div><div class="line">        // 的所有属性的值存储到TypedArray中</div><div class="line">        TypedArray ta = context.obtainStyledAttributes(attrs,</div><div class="line">                R.styleable.TopBar);</div><div class="line">        // 从TypedArray中取出对应的值来为要设置的属性赋值</div><div class="line">        mLeftTextColor = ta.getColor(</div><div class="line">                R.styleable.TopBar_mleftTextColor, 0);</div><div class="line">        mLeftBackground = ta.getDrawable(</div><div class="line">                R.styleable.TopBar_mleftBackground);</div><div class="line">        mLeftText = ta.getString(R.styleable.TopBar_mleftText);</div><div class="line">....</div><div class="line"></div><div class="line">// 获取完TypedArray的值后，一般要调用</div><div class="line">        // recyle方法来避免重新创建的时候的错误</div><div class="line">        ta.recycle();</div></pre></td></tr></table></figure>
<ul>
<li>组合控件</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">// 为组件元素设置相应的布局元素</div><div class="line">        mLeftParams = new RelativeLayout.LayoutParams(</div><div class="line">                RelativeLayout.LayoutParams.WRAP_CONTENT,</div><div class="line">                RelativeLayout.LayoutParams.MATCH_PARENT);</div><div class="line">        mLeftParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT, TRUE);</div><div class="line">        // 添加到ViewGroup</div><div class="line">        addView(mLeftButton, mLeftParams);</div></pre></td></tr></table></figure>
<ul>
<li>定义回调借口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">// 接口对象，实现回调机制，在回调方法中</div><div class="line">    // 通过映射的接口对象调用接口中的方法</div><div class="line">    // 而不用去考虑如何实现，具体的实现由调用者去创建</div><div class="line">    public interface topbarClickListener &#123;</div><div class="line">        // 左按钮点击事件</div><div class="line">        void leftClick();</div><div class="line">        // 右按钮点击事件</div><div class="line">        void rightClick();</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<ul>
<li>暴露接口，绑定接口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 映射传入的接口对象</div><div class="line">    private topbarClickListener mListener;</div><div class="line">    </div><div class="line">    // 暴露一个方法给调用者来注册接口回调</div><div class="line">    // 通过接口来获得回调者对接口方法的实现</div><div class="line">    public void setOnTopbarClickListener(topbarClickListener mListener) &#123;</div><div class="line">        this.mListener = mListener;</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">// 按钮的点击事件，不需要具体的实现，</div><div class="line">        // 只需调用接口的方法，回调的时候，会有具体的实现</div><div class="line">        mRightButton.setOnClickListener(new OnClickListener() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                mListener.rightClick();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        mLeftButton.setOnClickListener(new OnClickListener() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onClick(View v) &#123;</div><div class="line">                mListener.leftClick();</div><div class="line">            &#125;</div><div class="line">        &#125;);</div></pre></td></tr></table></figure>
<ul>
<li>实现接口</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">@BindView(R.id.topBar)</div><div class="line">   TopBar mTopBar;</div><div class="line">  ......</div><div class="line"></div><div class="line">mTopBar.setOnTopbarClickListener(new TopBar.topbarClickListener() &#123;</div><div class="line">           @Override</div><div class="line">           public void leftClick() &#123;</div><div class="line">               Toast.makeText(TopBarTestActivity.this,</div><div class="line">                       &quot;left&quot;, Toast.LENGTH_SHORT)</div><div class="line">                       .show();</div><div class="line">           &#125;</div><div class="line"></div><div class="line">           @Override</div><div class="line">           public void rightClick() &#123;</div><div class="line">               Toast.makeText(TopBarTestActivity.this,</div><div class="line">                       &quot;right&quot;, Toast.LENGTH_SHORT)</div><div class="line">                       .show();</div><div class="line">           &#125;</div><div class="line">       &#125;);</div></pre></td></tr></table></figure>
<h3 id="重写View实现控件">重写View实现控件</h3><ul>
<li>弧线圈<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/55565089.jpg" alt=""></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div></pre></td><td class="code"><pre><div class="line">public class CircleProgressView extends View &#123;</div><div class="line"></div><div class="line">    private int mMeasureHeigth;</div><div class="line">    private int mMeasureWidth;</div><div class="line"></div><div class="line">    private Paint mCirclePaint;</div><div class="line">    private float mCircleXY;</div><div class="line">    private float mRadius;</div><div class="line"></div><div class="line">    private Paint mArcPaint;</div><div class="line">    private RectF mArcRectF;</div><div class="line">    private float mSweepAngle;</div><div class="line">    private float mSweepValue = 66;</div><div class="line"></div><div class="line">    private Paint mTextPaint;</div><div class="line">    private String mShowText;</div><div class="line">    private float mShowTextSize;</div><div class="line"></div><div class="line">    public CircleProgressView(Context context, AttributeSet attrs,</div><div class="line">                              int defStyleAttr) &#123;</div><div class="line">        super(context, attrs, defStyleAttr);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public CircleProgressView(Context context, AttributeSet attrs) &#123;</div><div class="line">        super(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public CircleProgressView(Context context) &#123;</div><div class="line">        super(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onMeasure(int widthMeasureSpec,</div><div class="line">                             int heightMeasureSpec) &#123;</div><div class="line">        mMeasureWidth = MeasureSpec.getSize(widthMeasureSpec);</div><div class="line">        mMeasureHeigth = MeasureSpec.getSize(heightMeasureSpec);</div><div class="line">        setMeasuredDimension(mMeasureWidth, mMeasureHeigth);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        super.onDraw(canvas);</div><div class="line">        // 绘制圆</div><div class="line">        canvas.drawCircle(mCircleXY, mCircleXY, mRadius, mCirclePaint);</div><div class="line">        // 绘制弧线</div><div class="line">        canvas.drawArc(mArcRectF, 270, mSweepAngle, false, mArcPaint);</div><div class="line">        // 绘制文字</div><div class="line">        canvas.drawText(mShowText, 0, mShowText.length(),</div><div class="line">                mCircleXY, mCircleXY + (mShowTextSize / 4), mTextPaint);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void initView() &#123;</div><div class="line">        float length = 0;</div><div class="line">        if (mMeasureHeigth &gt;= mMeasureWidth) &#123;</div><div class="line">            length = mMeasureWidth;</div><div class="line">        &#125; else &#123;</div><div class="line">            length = mMeasureHeigth;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        mCircleXY = length / 2;</div><div class="line">        mRadius = (float) (length * 0.5 / 2);</div><div class="line">        mCirclePaint = new Paint();</div><div class="line">        //设置防锯齿</div><div class="line">        mCirclePaint.setAntiAlias(true);</div><div class="line">        mCirclePaint.setColor(getResources().getColor(</div><div class="line">                android.R.color.holo_blue_bright));</div><div class="line"></div><div class="line">        mArcRectF = new RectF(</div><div class="line">                (float) (length * 0.1),</div><div class="line">                (float) (length * 0.1),</div><div class="line">                (float) (length * 0.9),</div><div class="line">                (float) (length * 0.9));</div><div class="line">        mSweepAngle = (mSweepValue / 100f) * 360f;</div><div class="line">        mArcPaint = new Paint();</div><div class="line">        mArcPaint.setAntiAlias(true);</div><div class="line">        mArcPaint.setColor(getResources().getColor(</div><div class="line">                android.R.color.holo_blue_bright));</div><div class="line">        mArcPaint.setStrokeWidth((float) (length * 0.1));</div><div class="line">        mArcPaint.setStyle(Style.STROKE);</div><div class="line"></div><div class="line">        mShowText = setShowText();</div><div class="line">        mShowTextSize = setShowTextSize();</div><div class="line">        mTextPaint = new Paint();</div><div class="line">        mTextPaint.setTextSize(mShowTextSize);</div><div class="line">        mTextPaint.setTextAlign(Paint.Align.CENTER);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private float setShowTextSize() &#123;</div><div class="line">        this.invalidate();</div><div class="line">        return 50;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private String setShowText() &#123;</div><div class="line">        this.invalidate();</div><div class="line">        return &quot;Android Skill&quot;;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void forceInvalidate() &#123;</div><div class="line">        this.invalidate();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setSweepValue(float sweepValue) &#123;</div><div class="line">        if (sweepValue != 0) &#123;</div><div class="line">            mSweepValue = sweepValue;</div><div class="line">        &#125; else &#123;</div><div class="line">            mSweepValue = 25;</div><div class="line">        &#125;</div><div class="line">        this.invalidate();</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>动态条形图</li>
</ul>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/97709616.jpg" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public class VolumeView extends View &#123;</div><div class="line"></div><div class="line">    private int mWidth;</div><div class="line">    private int mRectWidth;</div><div class="line">    private int mRectHeight;</div><div class="line">    private Paint mPaint;</div><div class="line">    private int mRectCount;</div><div class="line">    private int offset = 5;</div><div class="line">    private double mRandom;</div><div class="line">    private LinearGradient mLinearGradient;</div><div class="line"></div><div class="line">    public VolumeView(Context context) &#123;</div><div class="line">        super(context);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public VolumeView(Context context, AttributeSet attrs) &#123;</div><div class="line">        super(context, attrs);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public VolumeView(Context context, AttributeSet attrs,</div><div class="line">                      int defStyleAttr) &#123;</div><div class="line">        super(context, attrs, defStyleAttr);</div><div class="line">        initView();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void initView() &#123;</div><div class="line">        mPaint = new Paint();</div><div class="line">        mPaint.setColor(Color.BLUE);</div><div class="line">        mPaint.setStyle(Paint.Style.FILL);</div><div class="line">        mRectCount = 12;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onSizeChanged(int w, int h, int oldw, int oldh) &#123;</div><div class="line">        super.onSizeChanged(w, h, oldw, oldh);</div><div class="line">        Log.d(&quot;onSizeChanged&quot;,w+&quot;/&quot;+h+&quot;/&quot;+oldw+&quot;/&quot;+oldh+&quot;/&quot;);</div><div class="line">        mWidth = getWidth();</div><div class="line">        mRectHeight = getHeight();</div><div class="line">        mRectWidth = (int) (mWidth * 0.6 / mRectCount);</div><div class="line">        mLinearGradient = new LinearGradient(</div><div class="line">                0,</div><div class="line">                0,</div><div class="line">                mRectWidth,</div><div class="line">                mRectHeight,</div><div class="line">                Color.YELLOW,</div><div class="line">                Color.BLUE,</div><div class="line">                Shader.TileMode.CLAMP);</div><div class="line">        mPaint.setShader(mLinearGradient);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onDraw(Canvas canvas) &#123;</div><div class="line">        super.onDraw(canvas);</div><div class="line">        for (int i = 0; i &lt; mRectCount; i++) &#123;</div><div class="line">            mRandom = Math.random();</div><div class="line">            float currentHeight = (float) (mRectHeight * mRandom);</div><div class="line">            canvas.drawRect(</div><div class="line">                    (float) (mWidth * 0.4 / 2 + mRectWidth * i + offset),</div><div class="line">                    currentHeight,</div><div class="line">                    (float) (mWidth * 0.4 / 2 + mRectWidth * (i + 1)),</div><div class="line">                    mRectHeight,</div><div class="line">                    mPaint);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        //重绘延迟300ms</div><div class="line">        postInvalidateDelayed(300);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="自定义ViewGroup">自定义ViewGroup</h1><p>重写onMeasure()测量子View；<br>重写onLayout()确定子View的位置；<br>重写onTouchEvent()等增加响应事件；</p>
<h2 id="实现类似ScrollView的功能">实现类似ScrollView的功能</h2><figure class="highlight plain"><figcaption><span>class ScrollView extends ViewGroup &#123;</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div></pre></td><td class="code"><pre><div class="line">    private int mScreenHeight;</div><div class="line">    private Scroller mScroller;</div><div class="line">    private int mLastY;</div><div class="line">    private int mStart;</div><div class="line">    private int mEnd;</div><div class="line"></div><div class="line">    public ScrollView(Context context) &#123;</div><div class="line">        super(context);</div><div class="line">        initView(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public ScrollView(Context context, AttributeSet attrs) &#123;</div><div class="line">        super(context, attrs);</div><div class="line">        initView(context);</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public ScrollView(Context context, AttributeSet attrs,</div><div class="line">                        int defStyleAttr) &#123;</div><div class="line">        super(context, attrs, defStyleAttr);</div><div class="line">        initView(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void initView(Context context) &#123;</div><div class="line">        WindowManager wm = (WindowManager) context.getSystemService(</div><div class="line">                Context.WINDOW_SERVICE);</div><div class="line">        DisplayMetrics dm = new DisplayMetrics();</div><div class="line">        wm.getDefaultDisplay().getMetrics(dm);</div><div class="line">        mScreenHeight = dm.heightPixels;</div><div class="line">        mScroller = new Scroller(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onLayout(boolean changed,</div><div class="line">                            int l, int t, int r, int b) &#123;</div><div class="line">        int childCount = getChildCount();</div><div class="line">        // 设置ViewGroup的高度</div><div class="line">        MarginLayoutParams mlp = (MarginLayoutParams) getLayoutParams();</div><div class="line">        mlp.height = mScreenHeight * childCount;</div><div class="line">        setLayoutParams(mlp);</div><div class="line">        for (int i = 0; i &lt; childCount; i++) &#123;</div><div class="line">            View child = getChildAt(i);</div><div class="line">            if (child.getVisibility() != View.GONE) &#123;</div><div class="line">                child.layout(l, i * mScreenHeight,</div><div class="line">                        r, (i + 1) * mScreenHeight);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    protected void onMeasure(int widthMeasureSpec,</div><div class="line">                             int heightMeasureSpec) &#123;</div><div class="line">        super.onMeasure(widthMeasureSpec, heightMeasureSpec);</div><div class="line">        int count = getChildCount();</div><div class="line">        for (int i = 0; i &lt; count; ++i) &#123;</div><div class="line">            View childView = getChildAt(i);</div><div class="line">            measureChild(childView,</div><div class="line">                    widthMeasureSpec, heightMeasureSpec);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean onTouchEvent(MotionEvent event) &#123;</div><div class="line">        int y = (int) event.getY();</div><div class="line">        switch (event.getAction()) &#123;</div><div class="line">            case MotionEvent.ACTION_DOWN:</div><div class="line">                mLastY = y;</div><div class="line">                mStart = getScrollY();</div><div class="line">                break;</div><div class="line">            case MotionEvent.ACTION_MOVE:</div><div class="line">                if (!mScroller.isFinished()) &#123;</div><div class="line">                    mScroller.abortAnimation();</div><div class="line">                &#125;</div><div class="line">                int dy = mLastY - y;</div><div class="line">                if (getScrollY() &lt; 0) &#123;</div><div class="line">                    dy = 0;</div><div class="line">                &#125;</div><div class="line">                if (getScrollY() &gt; getHeight() - mScreenHeight) &#123;</div><div class="line">                    dy = 0;</div><div class="line">                &#125;</div><div class="line">                scrollBy(0, dy);</div><div class="line">                mLastY = y;</div><div class="line">                break;</div><div class="line">            case MotionEvent.ACTION_UP:</div><div class="line">                int dScrollY = checkAlignment();</div><div class="line">                if (dScrollY &gt; 0) &#123;</div><div class="line">                    if (dScrollY &lt; mScreenHeight / 3) &#123;</div><div class="line">                        mScroller.startScroll(</div><div class="line">                                0, getScrollY(),</div><div class="line">                                0, -dScrollY);</div><div class="line">                    &#125; else &#123;</div><div class="line">                        mScroller.startScroll(</div><div class="line">                                0, getScrollY(),</div><div class="line">                                0, mScreenHeight - dScrollY);</div><div class="line">                    &#125;</div><div class="line">                &#125; else &#123;</div><div class="line">                    if (-dScrollY &lt; mScreenHeight / 3) &#123;</div><div class="line">                        mScroller.startScroll(</div><div class="line">                                0, getScrollY(),</div><div class="line">                                0, -dScrollY);</div><div class="line">                    &#125; else &#123;</div><div class="line">                        mScroller.startScroll(</div><div class="line">                                0, getScrollY(),</div><div class="line">                                0, -mScreenHeight - dScrollY);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                break;</div><div class="line">        &#125;</div><div class="line">        postInvalidate();</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line">    private int checkAlignment() &#123;</div><div class="line">        int mEnd = getScrollY();</div><div class="line">        boolean isUp = ((mEnd - mStart) &gt; 0) ? true : false;</div><div class="line">        int lastPrev = mEnd % mScreenHeight;</div><div class="line">        int lastNext = mScreenHeight - lastPrev;</div><div class="line">        if (isUp) &#123;</div><div class="line">            //向上的</div><div class="line">            return lastPrev;</div><div class="line">        &#125; else &#123;</div><div class="line">            return -lastNext;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    @Override</div><div class="line">    public void computeScroll() &#123;</div><div class="line">        super.computeScroll();</div><div class="line">        if (mScroller.computeScrollOffset()) &#123;</div><div class="line">            scrollTo(0, mScroller.getCurrY());</div><div class="line">            postInvalidate();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h1 id="事件拦截机制分析">事件拦截机制分析</h1><p>xml</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;RelativeLayout</div><div class="line">    android:id=&quot;@+id/activity_view_group&quot;</div><div class="line">    xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;</div><div class="line">    xmlns:tools=&quot;http://schemas.android.com/tools&quot;</div><div class="line">    android:layout_width=&quot;match_parent&quot;</div><div class="line">    android:layout_height=&quot;match_parent&quot;</div><div class="line">    android:paddingBottom=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    android:paddingLeft=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingRight=&quot;@dimen/activity_horizontal_margin&quot;</div><div class="line">    android:paddingTop=&quot;@dimen/activity_vertical_margin&quot;</div><div class="line">    tools:context=&quot;com.wpmac.androidhero.unit3.ViewGroupActivity&quot;&gt;</div><div class="line">    &lt;com.wpmac.androidhero.unit3.viewgroup.MyViewGroupA</div><div class="line">        android:layout_width=&quot;match_parent&quot;</div><div class="line">        android:layout_height=&quot;match_parent&quot;</div><div class="line">        android:background=&quot;@android:color/holo_blue_bright&quot;&gt;</div><div class="line"></div><div class="line">        &lt;com.wpmac.androidhero.unit3.viewgroup.MyViewGroupB</div><div class="line">            android:layout_width=&quot;300dp&quot;</div><div class="line">            android:layout_height=&quot;300dp&quot;</div><div class="line">            android:background=&quot;@android:color/holo_green_dark&quot;&gt;</div><div class="line"></div><div class="line">            &lt;com.wpmac.androidhero.unit3.viewgroup.MyView</div><div class="line">                android:layout_width=&quot;150dp&quot;</div><div class="line">                android:layout_height=&quot;150dp&quot;</div><div class="line">                android:background=&quot;@android:color/darker_gray&quot; /&gt;</div><div class="line"></div><div class="line">        &lt;/com.wpmac.androidhero.unit3.viewgroup.MyViewGroupB&gt;</div><div class="line"></div><div class="line">    &lt;/com.wpmac.androidhero.unit3.viewgroup.MyViewGroupA&gt;</div><div class="line">&lt;/RelativeLayout&gt;</div></pre></td></tr></table></figure>
<p>ViewGroupB-ViewGroupA-View 依次嵌套</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">public class MyViewGroupA extends LinearLayout &#123;</div><div class="line"></div><div class="line">    public MyViewGroupA(Context context) &#123;</div><div class="line">        super(context);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public MyViewGroupA(Context context, AttributeSet attrs) &#123;</div><div class="line">        super(context, attrs);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public MyViewGroupA(Context context, AttributeSet attrs,</div><div class="line">                        int defStyleAttr) &#123;</div><div class="line">        super(context, attrs, defStyleAttr);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean dispatchTouchEvent(MotionEvent ev) &#123;</div><div class="line">        Log.d(&quot;xys&quot;, &quot;ViewGroupA dispatchTouchEvent&quot; + ev.getAction());</div><div class="line">        return super.dispatchTouchEvent(ev);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean onInterceptTouchEvent(MotionEvent ev) &#123;</div><div class="line">        Log.d(&quot;xys&quot;, &quot;ViewGroupA onInterceptTouchEvent&quot; + ev.getAction());</div><div class="line">        return super.onInterceptTouchEvent(ev);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public boolean onTouchEvent(MotionEvent event) &#123;</div><div class="line">        Log.d(&quot;xys&quot;, &quot;ViewGroupA onTouchEvent&quot; + event.getAction());</div><div class="line">        return super.onTouchEvent(event);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>ViewGroup监听dispatchTouchEvent，onTouchEvent，onInterceptTouchEvent方法</li>
<li>View打印dispatchTouchEvent，onTouchEvent方法</li>
<li>ViewGroup比View多一个onInterceptTouchEvent方法</li>
</ul>
<h2 id="一般情况，点击View">一般情况，点击View</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">11-10 14:17:38.782 27002-27002/com.wpmac.androidhero D/xys: ViewGroupA dispatchTouchEvent0</div><div class="line">11-10 14:17:38.782 27002-27002/com.wpmac.androidhero D/xys: ViewGroupA onInterceptTouchEvent0</div><div class="line">11-10 14:17:38.782 27002-27002/com.wpmac.androidhero D/xys: ViewGroupB dispatchTouchEvent0</div><div class="line">11-10 14:17:38.782 27002-27002/com.wpmac.androidhero D/xys: ViewGroupB onInterceptTouchEvent0</div><div class="line">11-10 14:17:38.782 27002-27002/com.wpmac.androidhero D/xys: View dispatchTouchEvent0</div><div class="line">11-10 14:17:38.782 27002-27002/com.wpmac.androidhero D/xys: View onTouchEvent0</div><div class="line">11-10 14:17:38.782 27002-27002/com.wpmac.androidhero D/xys: ViewGroupB onTouchEvent0</div><div class="line">11-10 14:17:38.783 27002-27002/com.wpmac.androidhero D/xys: ViewGroupA onTouchEvent0</div></pre></td></tr></table></figure>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/86008071.jpg" alt=""><br><a href="https://github.com/mzeht/AndroidHero" target="_blank" rel="external">所有Demo地址</a></p>
<hr>
<p>ViewGroupA拦截</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">@Override</div><div class="line">public boolean onInterceptTouchEvent(MotionEvent ev) &#123;</div><div class="line">    Log.d(&quot;xys&quot;, &quot;ViewGroupA onInterceptTouchEvent&quot; + ev.getAction());</div><div class="line">    return true;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>日志</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">11-10 16:08:24.717 23761-23761/com.wpmac.androidhero D/xys: ViewGroupA dispatchTouchEvent0</div><div class="line">11-10 16:08:24.717 23761-23761/com.wpmac.androidhero D/xys: ViewGroupA onInterceptTouchEvent0</div><div class="line">11-10 16:08:24.717 23761-23761/com.wpmac.androidhero D/xys: ViewGroupA onTouchEvent0</div></pre></td></tr></table></figure>
<h2 id=""><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/6102134.jpg" alt=""></h2><p>ViewGroupA不拦截，ViewGroupB拦截</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">11-10 16:15:49.484 28880-28880/com.wpmac.androidhero D/xys: ViewGroupA dispatchTouchEvent0![]()</div><div class="line">11-10 16:15:49.484 28880-28880/com.wpmac.androidhero D/xys: ViewGroupA onInterceptTouchEvent0</div><div class="line">11-10 16:15:49.484 28880-28880/com.wpmac.androidhero D/xys: ViewGroupB dispatchTouchEvent0</div><div class="line">11-10 16:15:49.484 28880-28880/com.wpmac.androidhero D/xys: ViewGroupB onInterceptTouchEvent0</div><div class="line">11-10 16:15:49.484 28880-28880/com.wpmac.androidhero D/xys: ViewGroupB onTouchEvent0</div><div class="line">11-10 16:15:49.484 28880-28880/com.wpmac.androidhero D/xys: ViewGroupA onTouchEvent0</div></pre></td></tr></table></figure>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/954580.jpg" alt=""></p>
<hr>
<p>View onTouchEven设置为true</p>
<p>event.getAction() 获得的返回值：</p>
<p>//触摸屏幕时刻<br>case MotionEvent.ACTION_DOWN:  // = 0</p>
<p>break;<br>//触摸并移动时刻<br>case MotionEvent.ACTION_MOVE:  // = 2</p>
<p>break;</p>
<p>//终止触摸时刻<br>case MotionEvent.ACTION_UP:  // = 1<br>break;</p>
<hr>
<p>仅仅View onTouchEvent设置return true</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">11-10 17:13:44.984 27187-27187/com.wpmac.androidhero D/xys: ViewGroupA dispatchTouchEvent0</div><div class="line">11-10 17:13:44.984 27187-27187/com.wpmac.androidhero D/xys: ViewGroupA onInterceptTouchEvent0</div><div class="line">11-10 17:13:44.984 27187-27187/com.wpmac.androidhero D/xys: ViewGroupB dispatchTouchEvent0</div><div class="line">11-10 17:13:44.984 27187-27187/com.wpmac.androidhero D/xys: ViewGroupB onInterceptTouchEvent0</div><div class="line">11-10 17:13:44.984 27187-27187/com.wpmac.androidhero D/xys: View dispatchTouchEvent0</div><div class="line">11-10 17:13:44.985 27187-27187/com.wpmac.androidhero D/xys: View onTouchEvent0</div><div class="line">11-10 17:13:45.012 27187-27187/com.wpmac.androidhero D/xys: ViewGroupA dispatchTouchEvent1</div><div class="line">11-10 17:13:45.012 27187-27187/com.wpmac.androidhero D/xys: ViewGroupA onInterceptTouchEvent1</div><div class="line">11-10 17:13:45.012 27187-27187/com.wpmac.androidhero D/xys: ViewGroupB dispatchTouchEvent1</div><div class="line">11-10 17:13:45.012 27187-27187/com.wpmac.androidhero D/xys: ViewGroupB onInterceptTouchEvent1</div><div class="line">11-10 17:13:45.012 27187-27187/com.wpmac.androidhero D/xys: View dispatchTouchEvent1</div><div class="line">11-10 17:13:45.012 27187-27187/com.wpmac.androidhero D/xys: View onTouchEvent1</div></pre></td></tr></table></figure>
<p>ViewGroupB onTouchEvent 设置为true</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">11-10 17:33:53.022 5387-5387/com.wpmac.androidhero D/xys: ViewGroupA dispatchTouchEvent0</div><div class="line">11-10 17:33:53.022 5387-5387/com.wpmac.androidhero D/xys: ViewGroupA onInterceptTouchEvent0</div><div class="line">11-10 17:33:53.022 5387-5387/com.wpmac.androidhero D/xys: ViewGroupB dispatchTouchEvent0</div><div class="line">11-10 17:33:53.022 5387-5387/com.wpmac.androidhero D/xys: ViewGroupB onInterceptTouchEvent0</div><div class="line">11-10 17:33:53.022 5387-5387/com.wpmac.androidhero D/xys: View dispatchTouchEvent0</div><div class="line">11-10 17:33:53.022 5387-5387/com.wpmac.androidhero D/xys: View onTouchEvent0</div><div class="line">11-10 17:33:53.022 5387-5387/com.wpmac.androidhero D/xys: ViewGroupB onTouchEvent0</div><div class="line">11-10 17:33:53.096 5387-5387/com.wpmac.androidhero D/xys: ViewGroupA dispatchTouchEvent1</div><div class="line">11-10 17:33:53.096 5387-5387/com.wpmac.androidhero D/xys: ViewGroupA onInterceptTouchEvent1</div><div class="line">11-10 17:33:53.096 5387-5387/com.wpmac.androidhero D/xys: ViewGroupB dispatchTouchEvent1</div><div class="line">11-10 17:33:53.096 5387-5387/com.wpmac.androidhero D/xys: ViewGroupB onTouchEvent1</div></pre></td></tr></table></figure>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/470111.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="View的测量">View的测量</h1><p>Android帮助测量View的类—<code>MeasureSpec</code>类<br>MeasureSpec是一个32位的int值，高两位为测量的模式，低30位为测量的大小<br>使用位运算提高并优化效率</p>]]>
    
    </summary>
    
      <category term="Android" scheme="http://mzeht.com/tags/Android/"/>
    
      <category term="自定义控件" scheme="http://mzeht.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="AndroidHero" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/AndroidHero/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[butterknife 8.0.1 AndroidStudio peizhi]]></title>
    <link href="http://mzeht.com/2016/09/08/butterknife-8-0-1-AndroidStudio-%E9%85%8D%E7%BD%AE/"/>
    <id>http://mzeht.com/2016/09/08/butterknife-8-0-1-AndroidStudio-配置/</id>
    <published>2016-09-08T11:18:29.000Z</published>
    <updated>2016-11-27T10:20:44.000Z</updated>
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><p>butterknife是一个android上的注解库，升级的很快，在7.0.1版本中只要添加依赖就可以了，但是8.0.1版本中配置稍有不同</p>
<a id="more"></a>
<h2 id="在project_下的build-gradle文件下配置classpath">在project 下的build.gradle文件下配置classpath</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line"></div><div class="line">        classpath &apos;com.android.tools.build:gradle:2.1.3&apos;</div><div class="line">        classpath &apos;com.neenbedankt.gradle.plugins:android-apt:1.8&apos;</div><div class="line"></div><div class="line">        // NOTE: Do not place your application dependencies here; they belong</div><div class="line">        // in the individual module build.gradle files</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="在moudle下的builde-gradle文件中配置plugin">在moudle下的builde.gradle文件中配置plugin</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">apply plugin: &apos;com.android.application&apos;</div><div class="line">apply plugin: &apos;com.neenbedankt.android-apt&apos;</div></pre></td></tr></table></figure>
<h2 id="在moudle下的builde-gradle文件中配置dependencies">在moudle下的builde.gradle文件中配置dependencies</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">dependencies &#123;</div><div class="line">    compile fileTree(dir: &apos;libs&apos;, include: [&apos;*.jar&apos;]</div><div class="line">    compile &apos;com.jakewharton:butterknife:8.0.1&apos;</div><div class="line">    apt &apos;com.jakewharton:butterknife-compiler:8.0.1&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>butterknife之所以配置变化这么大，主要是在于apt，取代了之前的注解实现方法</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="前言">前言</h1><p>butterknife是一个android上的注解库，升级的很快，在7.0.1版本中只要添加依赖就可以了，但是8.0.1版本中配置稍有不同</p>]]>
    
    </summary>
    
      <category term="AndroidStudio" scheme="http://mzeht.com/tags/AndroidStudio/"/>
    
      <category term="Butterknife" scheme="http://mzeht.com/tags/Butterknife/"/>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Intellij IDEA Mac OS X KeyMap 中文版]]></title>
    <link href="http://mzeht.com/2016/09/07/Intellij-IDEA-Mac-OS-X-KeyMap-%E4%B8%AD%E6%96%87%E7%89%88/"/>
    <id>http://mzeht.com/2016/09/07/Intellij-IDEA-Mac-OS-X-KeyMap-中文版/</id>
    <published>2016-09-07T10:52:50.000Z</published>
    <updated>2016-11-27T10:20:55.000Z</updated>
    <content type="html"><![CDATA[<h1 id="官方版本">官方版本</h1><p><a href="https://resources.jetbrains.com/assets/products/intellij-idea/IntelliJIDEA_ReferenceCard_mac.pdf" target="_blank" rel="external">官方版本</a></p>
<h1 id="翻译版本预览">翻译版本预览</h1><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-9-7/44368370.jpg" alt=""></p>
<h1 id="翻译版本下载">翻译版本下载</h1><p><a href="https://www.jianguoyun.com/p/DSblRVAQpN36BRi7jBs" target="_blank" rel="external">Word版本下载</a></p>
<p><a href="https://www.jianguoyun.com/p/DSMleAUQpN36BRi9jBs" target="_blank" rel="external">PDF版本下载</a></p>
<p><a href="https://www.jianguoyun.com/p/DQuCALMQpN36BRi-jBs" target="_blank" rel="external">JPG版本下载</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="官方版本">官方版本</h1><p><a href="https://resources.jetbrains.com/assets/products/intellij-idea/IntelliJIDEA_ReferenceCard_mac.pdf" target=]]>
    </summary>
    
      <category term="Mac" scheme="http://mzeht.com/tags/Mac/"/>
    
      <category term="Intellij IDEA" scheme="http://mzeht.com/tags/Intellij-IDEA/"/>
    
      <category term="工具" scheme="http://mzeht.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
      <category term="IDE" scheme="http://mzeht.com/categories/%E5%B7%A5%E5%85%B7/IDE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Android Studio Gradle 进阶设置]]></title>
    <link href="http://mzeht.com/2016/09/07/Android-Studio-Gradle-%E8%BF%9B%E9%98%B6%E8%AE%BE%E7%BD%AE/"/>
    <id>http://mzeht.com/2016/09/07/Android-Studio-Gradle-进阶设置/</id>
    <published>2016-09-06T17:10:55.000Z</published>
    <updated>2016-11-27T10:21:04.000Z</updated>
    <content type="html"><![CDATA[<h2 id="配置独立的签名信息">配置独立的签名信息</h2><p>一般来说，我们可以直接把签名的信息明文写在gradle配置文件中，但是在多人协作或者开源代码的时候不是很方便，前者可能存放签名文件的位置需要修改，后者则希望隐藏签名信息，在看不少开源项目的时候，发现很多是这样做的</p>
<a id="more"></a>
<p>signingConfigs位置， <code>android的下一级</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">signingConfigs &#123;</div><div class="line">        release &#123;</div><div class="line">            storeFile file(RELEASE_STORE_FILE)</div><div class="line">            storePassword RELEASE_STORE_PASSWORD</div><div class="line">            keyAlias RELEASE_KEY_ALIAS</div><div class="line">            keyPassword RELEASE_KEY_PASSWORD</div><div class="line">        &#125;</div></pre></td></tr></table></figure>
<p>在对应位置引用常量，在properties中再进行具体赋值<br>在gradle.properties中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">RELEASE_KEY_PASSWORD=xxxx</div><div class="line">RELEASE_KEY_ALIAS=xxx</div><div class="line">RELEASE_STORE_PASSWORD=xxx</div><div class="line">RELEASE_STORE_FILE=../.keystore/xxx.jks</div></pre></td></tr></table></figure>
<p>这样不会直接暴露签名信息，也方便配置</p>
<h2 id="多渠道打包">多渠道打包</h2><p>在product flavor下定义不同类型, 把AndroiManifest中的channel替换</p>
<p>productFlavors位置： <code>android的下一级</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">      productFlavors &#123;</div><div class="line">        fir &#123;</div><div class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: &quot;fir&quot;]</div><div class="line">        &#125;</div><div class="line">        GooglePlay &#123;</div><div class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: &quot;GooglePlay&quot;]</div><div class="line">        &#125;</div><div class="line">        Umeng &#123;</div><div class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: &quot;Umeng&quot;]</div><div class="line">        &#125;</div><div class="line">       </div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>如果flavor标识是数字开头，要加以处理，添加””</p>
<p>替换AndroiManifest中的字段</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">&lt;meta-data</div><div class="line">    android:name=&quot;UMENG_CHANNEL&quot;</div><div class="line">    android:value=&quot;$&#123;UMENG_CHANNEL_VALUE&#125;&quot;/&gt;</div></pre></td></tr></table></figure>
<h2 id="定制生成apk文件名称">定制生成apk文件名称</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div></pre></td><td class="code"><pre><div class="line">def buildTime() &#123;</div><div class="line">    return new Date().format(&quot;yyyy-MM-dd HH:mm:ss&quot;)</div><div class="line">&#125;</div><div class="line">def hostName() &#123;</div><div class="line">    return System.getProperty(&quot;user.name&quot;) + &quot;@&quot; + InetAddress.localHost.hostName</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">android &#123;</div><div class="line"></div><div class="line">   //...</div><div class="line">   </div><div class="line">    productFlavors &#123;</div><div class="line">        fir &#123;</div><div class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: &quot;fir&quot;]</div><div class="line">        &#125;</div><div class="line">        GooglePlay &#123;</div><div class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: &quot;GooglePlay&quot;]</div><div class="line">        &#125;</div><div class="line">        Umeng &#123;</div><div class="line">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: &quot;Umeng&quot;]</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">   buildTypes &#123;</div><div class="line">        release &#123;</div><div class="line">            minifyEnabled true</div><div class="line">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;</div><div class="line">            signingConfig signingConfigs.app1</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    applicationVariants.all &#123; variant -&gt;</div><div class="line">        variant.outputs.each &#123; output -&gt;</div><div class="line">            def outputFile = output.outputFile</div><div class="line">            if (outputFile != null &amp;&amp; outputFile.name.endsWith(&apos;.apk&apos;)) &#123;</div><div class="line"></div><div class="line">                def fileName = &quot;mzeht_v$&#123;defaultConfig.versionName&#125;_$&#123;hostName()&#125;_$&#123;buildTime()&#125;_$&#123;variant.productFlavors[0].name&#125;.apk&quot;</div><div class="line">                output.outputFile = new File(outputFile.parent, fileName)</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>同样注意层级关系,在android同级下定义一个时间函数和一个host函数并引用，生成的apk包如下：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-9-7/53721167.jpg" alt=""></p>
<h2 id="配置依赖版本号">配置依赖版本号</h2><p>在Maven中我们可以方便的定义spring等核心依赖的版本号，便于统一管理，在Gradle中我们同样可以做到</p>
<p>在看google的架构综合项目时<a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp/" target="_blank" rel="external">todo-mvp</a>,看见了一种写法</p>
<p>在根目录下的build.gradle文件中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">buildscript &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">    dependencies &#123;</div><div class="line">        classpath &apos;com.android.tools.build:gradle:2.1.2&apos;</div><div class="line"></div><div class="line">        // NOTE: Do not place your application dependencies here; they belong</div><div class="line">        // in the individual module build.gradle files</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">allprojects &#123;</div><div class="line">    repositories &#123;</div><div class="line">        jcenter()</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">task clean(type: Delete) &#123;</div><div class="line">    delete rootProject.buildDir</div><div class="line">&#125;</div><div class="line"></div><div class="line">// Define versions in a single place</div><div class="line">ext &#123;</div><div class="line">    // Sdk and tools</div><div class="line">    minSdkVersion = 10</div><div class="line">    targetSdkVersion = 22</div><div class="line">    compileSdkVersion = 23</div><div class="line">    buildToolsVersion = &apos;23.0.2&apos;</div><div class="line"></div><div class="line">    // App dependencies</div><div class="line">    supportLibraryVersion = &apos;23.4.0&apos;</div><div class="line">    guavaVersion = &apos;18.0&apos;</div><div class="line">    junitVersion = &apos;4.12&apos;</div><div class="line">    mockitoVersion = &apos;1.10.19&apos;</div><div class="line">    powerMockito = &apos;1.6.2&apos;</div><div class="line">    hamcrestVersion = &apos;1.3&apos;</div><div class="line">    runnerVersion = &apos;0.4.1&apos;</div><div class="line">    rulesVersion = &apos;0.4.1&apos;</div><div class="line">    espressoVersion = &apos;2.2.1&apos;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>然后在app的build.gradle中</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line">apply plugin: &apos;com.android.application&apos;</div><div class="line"></div><div class="line">android &#123;</div><div class="line">    compileSdkVersion rootProject.ext.compileSdkVersion</div><div class="line">    buildToolsVersion rootProject.ext.buildToolsVersion</div><div class="line"></div><div class="line">    defaultConfig &#123;</div><div class="line">        applicationId &quot;com.example.android.architecture.blueprints.todomvp&quot;</div><div class="line">        minSdkVersion rootProject.ext.minSdkVersion</div><div class="line">        targetSdkVersion rootProject.ext.targetSdkVersion</div><div class="line">        versionCode 1</div><div class="line">        versionName &quot;1.0&quot;</div><div class="line"></div><div class="line">        testInstrumentationRunner &apos;android.support.test.runner.AndroidJUnitRunner&apos;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    buildTypes &#123;</div><div class="line">        debug &#123;</div><div class="line">            minifyEnabled true</div><div class="line">            // Uses new built-in shrinker http://tools.android.com/tech-docs/new-build-system/built-in-shrinker</div><div class="line">            useProguard false</div><div class="line">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;</div><div class="line">            testProguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguardTest-rules.pro&apos;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        release &#123;</div><div class="line">            minifyEnabled true</div><div class="line">            useProguard true</div><div class="line">            proguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguard-rules.pro&apos;</div><div class="line">            testProguardFiles getDefaultProguardFile(&apos;proguard-android.txt&apos;), &apos;proguardTest-rules.pro&apos;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // If you need to add more flavors, consider using flavor dimensions.</div><div class="line">    productFlavors &#123;</div><div class="line">        mock &#123;</div><div class="line">            applicationIdSuffix = &quot;.mock&quot;</div><div class="line">        &#125;</div><div class="line">        prod &#123;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // Remove mockRelease as it&apos;s not needed.</div><div class="line">    android.variantFilter &#123; variant -&gt;</div><div class="line">        if(variant.buildType.name.equals(&apos;release&apos;)</div><div class="line">                &amp;&amp; variant.getFlavors().get(0).name.equals(&apos;mock&apos;)) &#123;</div><div class="line">            variant.setIgnore(true);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    // Always show the result of every unit test, even if it passes.</div><div class="line">    testOptions.unitTests.all &#123;</div><div class="line">        testLogging &#123;</div><div class="line">            events &apos;passed&apos;, &apos;skipped&apos;, &apos;failed&apos;, &apos;standardOut&apos;, &apos;standardError&apos;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">/*</div><div class="line"> Dependency versions are defined in the top level build.gradle file. This helps keeping track of</div><div class="line"> all versions in a single place. This improves readability and helps managing project complexity.</div><div class="line"> */</div><div class="line">dependencies &#123;</div><div class="line">    // App&apos;s dependencies, including test</div><div class="line">    compile &quot;com.android.support:appcompat-v7:$rootProject.supportLibraryVersion&quot;</div><div class="line">    compile &quot;com.android.support:cardview-v7:$rootProject.supportLibraryVersion&quot;</div><div class="line">    compile &quot;com.android.support:design:$rootProject.supportLibraryVersion&quot;</div><div class="line">    compile &quot;com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion&quot;</div><div class="line">    compile &quot;com.android.support:support-v4:$rootProject.supportLibraryVersion&quot;</div><div class="line">    compile &quot;com.android.support.test.espresso:espresso-idling-resource:$rootProject.espressoVersion&quot;</div><div class="line">    compile &quot;com.google.guava:guava:$rootProject.guavaVersion&quot;</div><div class="line"></div><div class="line">    // Dependencies for local unit tests</div><div class="line">    testCompile &quot;junit:junit:$rootProject.ext.junitVersion&quot;</div><div class="line">    testCompile &quot;org.mockito:mockito-all:$rootProject.ext.mockitoVersion&quot;</div><div class="line">    testCompile &quot;org.hamcrest:hamcrest-all:$rootProject.ext.hamcrestVersion&quot;</div><div class="line"></div><div class="line">    // Android Testing Support Library&apos;s runner and rules</div><div class="line">    androidTestCompile &quot;com.android.support.test:runner:$rootProject.ext.runnerVersion&quot;</div><div class="line">    androidTestCompile &quot;com.android.support.test:rules:$rootProject.ext.runnerVersion&quot;</div><div class="line"></div><div class="line">    // Dependencies for Android unit tests</div><div class="line">    androidTestCompile &quot;junit:junit:$rootProject.ext.junitVersion&quot;</div><div class="line">    androidTestCompile &quot;org.mockito:mockito-core:$rootProject.ext.mockitoVersion&quot;</div><div class="line">    androidTestCompile &apos;com.google.dexmaker:dexmaker:1.2&apos;</div><div class="line">    androidTestCompile &apos;com.google.dexmaker:dexmaker-mockito:1.2&apos;</div><div class="line"></div><div class="line">    // Espresso UI Testing</div><div class="line">    androidTestCompile &quot;com.android.support.test.espresso:espresso-core:$rootProject.espressoVersion&quot;</div><div class="line">    androidTestCompile (&quot;com.android.support.test.espresso:espresso-contrib:$rootProject.espressoVersion&quot;)</div><div class="line">    androidTestCompile &quot;com.android.support.test.espresso:espresso-intents:$rootProject.espressoVersion&quot;</div><div class="line"></div><div class="line">    // Resolve conflicts between main and test APK:</div><div class="line">    androidTestCompile &quot;com.android.support:support-annotations:$rootProject.supportLibraryVersion&quot;</div><div class="line">    androidTestCompile &quot;com.android.support:support-v4:$rootProject.supportLibraryVersion&quot;</div><div class="line">    androidTestCompile &quot;com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion&quot;</div></pre></td></tr></table></figure>
<h2 id="减少编译错误和忽略lint检查">减少编译错误和忽略lint检查</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">packagingOptions &#123;</div><div class="line">        exclude &apos;META-INF/DEPENDENCIES.txt&apos;</div><div class="line">        exclude &apos;META-INF/LICENSE.txt&apos;</div><div class="line">        exclude &apos;META-INF/NOTICE.txt&apos;</div><div class="line">        exclude &apos;META-INF/NOTICE&apos;</div><div class="line">        exclude &apos;META-INF/LICENSE&apos;</div><div class="line">        exclude &apos;META-INF/DEPENDENCIES&apos;</div><div class="line">        exclude &apos;META-INF/notice.txt&apos;</div><div class="line">        exclude &apos;META-INF/license.txt&apos;</div><div class="line">        exclude &apos;META-INF/dependencies.txt&apos;</div><div class="line">        exclude &apos;META-INF/LGPL2.1&apos;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"> </div><div class="line"></div><div class="line">    lintOptions &#123;</div><div class="line">        abortOnError false</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h2 id="结语">结语</h2><p>gralde设置结合AndroidStudio提供的图形界面设置，理解会更快更透彻</p>
<p>File-Project Structure-Modules-app</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-9-7/37008097.jpg" alt=""></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="配置独立的签名信息">配置独立的签名信息</h2><p>一般来说，我们可以直接把签名的信息明文写在gradle配置文件中，但是在多人协作或者开源代码的时候不是很方便，前者可能存放签名文件的位置需要修改，后者则希望隐藏签名信息，在看不少开源项目的时候，发现很多是这样做的</p>]]>
    
    </summary>
    
      <category term="Android Studio" scheme="http://mzeht.com/tags/Android-Studio/"/>
    
      <category term="Gradle" scheme="http://mzeht.com/tags/Gradle/"/>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Data Binding Guide]]></title>
    <link href="http://mzeht.com/2016/09/04/Data-Binding-Guide/"/>
    <id>http://mzeht.com/2016/09/04/Data-Binding-Guide/</id>
    <published>2016-09-04T06:37:50.000Z</published>
    <updated>2016-11-27T10:21:15.000Z</updated>
    <content type="html"><![CDATA[<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-9-4/6040336.jpg" alt=""></p>
<h2 id="前言">前言</h2><p>2016的Google IO 大会上，Android 团队发布了一个数据绑定框架（Data Binding Library）。以后可以直接在 layout 布局 xml 文件中绑定数据了，无需再 findViewById 然后手工设置数据了。其语法和使用方式和 JSP 中的 EL 表达式非常类似。</p>
<p>看到google出品的<a href="https://developer.android.com/topic/libraries/data-binding/index.html" target="_blank" rel="external">Data Binding Library</a>本来是想边翻译边写写demo，但是csdn上已经有人翻译了，没必要重复劳动，直接拿来链接：<br><a id="more"></a></p>
<h1 id="Data_Binding_Guide——google官方文档翻译（上）"><a href="http://blog.csdn.net/u014486880/article/details/50508133" target="_blank" rel="external">Data Binding Guide——google官方文档翻译（上）</a></h1><h1 id="Data_Binding_Guide——google官方文档翻译（下）"><a href="http://blog.csdn.net/u014486880/article/details/50531110" target="_blank" rel="external"> Data Binding Guide——google官方文档翻译（下）</a></h1><h2 id="防坑指南">防坑指南</h2><p>引入DataBindingLibrary从最初发布开始，已经有了变化，起初是</p>
<p>在项目的 gradle 配置文件中添加依赖项：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">dependencies &#123; classpath &quot;com.android.tools.build:gradle:1.2.3&quot; classpath &quot;com.android.databinding:dataBinder:1.0-rc0&quot; &#125;</div></pre></td></tr></table></figure>
<p>上面的依赖项目前在 jcenter 服务器中，所以确保 repositories 中包含 jcenter。<br>allprojects { repositories { jcenter() }}</p>
<p>在每个需要使用 Data Binding 功能的模块的 gradle 配置文件中启用该插件（添加在 android 插件之后），</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apply plugin: ‘com.android.application&apos;apply plugin: &apos;com.android.databinding&apos;</div></pre></td></tr></table></figure>
<p>但是现在的google文档中 只要</p>
<ul>
<li><p>To get started with Data Binding, download the library from the Support repository in the Android SDK manager.</p>
</li>
<li><p>To configure your app to use data binding, add the dataBinding element to your build.gradle file in the app module.</p>
</li>
<li><p>Use the following code snippet to configure data binding:</p>
</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    ....</div><div class="line">    dataBinding &#123;</div><div class="line">        enabled = true</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><a href="https://github.com/jingle1267/DataDindingSample" target="_blank" rel="external">demo github 地址</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-9-4/6040336.jpg" alt=""></p>
<h2 id="前言">前言</h2><p>2016的Google IO 大会上，Android 团队发布了一个数据绑定框架（Data Binding Library）。以后可以直接在 layout 布局 xml 文件中绑定数据了，无需再 findViewById 然后手工设置数据了。其语法和使用方式和 JSP 中的 EL 表达式非常类似。</p>
<p>看到google出品的<a href="https://developer.android.com/topic/libraries/data-binding/index.html">Data Binding Library</a>本来是想边翻译边写写demo，但是csdn上已经有人翻译了，没必要重复劳动，直接拿来链接：<br>]]>
    
    </summary>
    
      <category term="Data Binding" scheme="http://mzeht.com/tags/Data-Binding/"/>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/%E7%A7%BB%E5%8A%A8%E5%BC%80%E5%8F%91/Android/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac/windows下nexus系列产品的刷机官方指南]]></title>
    <link href="http://mzeht.com/2016/07/30/Mac:windows%E4%B8%8Bnexus%E7%B3%BB%E5%88%97%E4%BA%A7%E5%93%81%E7%9A%84%E5%88%B7%E6%9C%BA%E5%AE%98%E6%96%B9%E6%8C%87%E5%8D%97/"/>
    <id>http://mzeht.com/2016/07/30/Mac:windows下nexus系列产品的刷机官方指南/</id>
    <published>2016-07-30T07:26:44.000Z</published>
    <updated>2016-11-27T10:22:20.000Z</updated>
    <content type="html"><![CDATA[<h1 id="注意事项">注意事项</h1><p>1.仅针对官方镜像<br>2.需要下载官方镜像，需要翻墙或者国内寻找搬运资源<br>3.nexus刷入新系统后，开机需要网络验证激活（部分可以跳过），需要网络环境能够翻墙，请自行解决  </p>
<a id="more"></a>
<h1 id="镜像">镜像</h1><p>1.前往<a href="https://developers.google.com/android/nexus/images" target="_blank" rel="external">镜像官网</a><br>2.<img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-7-30/11576201.jpg" alt=""><br>右侧选择对应的设备,同意相关协议，选择下载镜像<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-7-30/27674143.jpg" alt=""><br>这里以6p为例子，镜像列表从上到下，从旧到新</p>
<h1 id="环境准备">环境准备</h1><p>1.fastboot工具  </p>
<p>To flash a device using one of the system images below (or one of your own), you need the latest fastboot tool. You can get it from one of the sources below.</p>
<ul>
<li><p>From a compiled version of the <a href="https://source.android.com/" target="_blank" rel="external">Android Open Source Project</a>.  </p>
</li>
<li><p>From the <code>platform-tools/</code> directory in the Android SDK. Be sure that you have the latest version of the <code>Android SDK Platform-tools</code> from the <a href="https://developer.android.com/studio/intro/update.html" target="_blank" rel="external">SDK Manager</a>.  </p>
</li>
</ul>
<p>Once you have the <code>fastboot tool</code>, add it to your <code>PATH</code> environment variable (the flash-all script below must be able to find it). Also be certain that you’ve set up USB access for your device, as described in the Using <a href="https://developer.android.com/studio/run/device.html" target="_blank" rel="external">Hardware Devices guide</a>.  </p>
<p>Caution: Flashing a new system image deletes all user data. Be certain to first backup any personal data such as photos.</p>
<p>简单来说就是下载fastboot工具 并且添加到系统变量，注意用户数据会被清空</p>
<h1 id="刷入步骤">刷入步骤</h1><ol>
<li><p>Download the appropriate system image for your device below, then unzip it to a safe directory.  </p>
</li>
<li><p>Connect your device to your computer over USB.  </p>
</li>
<li><p>Start the device in fastboot mode with one of the following methods:</p>
<ul>
<li><p>Using the <code>adb tool</code>: With the device powered on, execute:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">adb reboot bootloader</div></pre></td></tr></table></figure>
</li>
<li><p>Using a key combo: Turn the device off, then turn it on and immediately hold down the relevant<code>key combination</code> for your device. For example, to put a Nexus 5 (“hammerhead”) into fastboot mode, press and hold Volume Up + Volume Down + Power as the device begins booting up.  </p>
</li>
</ul>
</li>
<li><p>If necessary, unlock the device’s bootloader by running:</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fastboot flashing unlock</div></pre></td></tr></table></figure>
<p>or, for older devices, running:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">fastboot oem unlock</div></pre></td></tr></table></figure>
<p>The target device will show you a confirmation screen. (This erases all data on the target device.)  </p>
<ol>
<li><p>Open a terminal and navigate to the unzipped system image directory.  </p>
</li>
<li><p>Execute the flash-all script. This script installs the necessary bootloader, baseband firmware(s), and operating system.  </p>
</li>
</ol>
<p>Once the script finishes, your device reboots. You should now lock the bootloader for security:</p>
<ol>
<li>Start the device in fastboot mode again, as described above.</li>
<li>Execute:<br>fastboot flashing lock<br>or, for older devices, running:<br>fastboot oem lock</li>
</ol>
<p>Locking bootloader will wipe the data on some devices. After locking the bootloader, if you want to flash the device again, you must run <code>fastboot oem unlock again</code>, which will wipe the data.</p>
<h1 id="结语">结语</h1><p>偷懒，直接上官方指南了，一些细节问题，（比如怎么下载fastboot，怎么配置系统变量）,相信能看到这篇文章和有这个意向的人都能解决。  </p>
<p>通过此方法完美利用mac给nexus5手机和nexus7wifi刷好系统,前者网络验证可以跳过，后者不行，采用可以刷入开源固件的路由器，刷入openwrt，设置好socks代理（付费版），即可无线翻墙，顺利激活，windows上可以电脑翻墙后共享热点，期间还尝试了<code>Privoxy</code>将shadowsocks的socks5代理转为http代理,然后验证阶段，连接普通wifi,设备和mac处在同一局域网下，设置代理地址为mac上的socks代理，但是不是很理想，还是硬件翻墙来的粗暴</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="注意事项">注意事项</h1><p>1.仅针对官方镜像<br>2.需要下载官方镜像，需要翻墙或者国内寻找搬运资源<br>3.nexus刷入新系统后，开机需要网络验证激活（部分可以跳过），需要网络环境能够翻墙，请自行解决  </p>]]>
    
    </summary>
    
      <category term="Mac" scheme="http://mzeht.com/tags/Mac/"/>
    
      <category term="Nexus" scheme="http://mzeht.com/tags/Nexus/"/>
    
      <category term="综合" scheme="http://mzeht.com/categories/%E7%BB%BC%E5%90%88/"/>
    
      <category term="其他" scheme="http://mzeht.com/categories/%E7%BB%BC%E5%90%88/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Synchronize files from ftpserver]]></title>
    <link href="http://mzeht.com/2016/06/30/Synchronize-files-from-ftpserver/"/>
    <id>http://mzeht.com/2016/06/30/Synchronize-files-from-ftpserver/</id>
    <published>2016-06-30T13:10:57.000Z</published>
    <updated>2016-11-27T10:21:53.000Z</updated>
    <content type="html"><![CDATA[<h1 id="项目功能">项目功能</h1><ol>
<li>软件为运行于安卓平台的客户端软件。</li>
<li>客户端软件运行于一台19寸屏的安卓媒体机上。</li>
<li>该客户端软件有播放广告视频的功能，广告视频从FTP服务器下载，本地的视频文件每隔三分钟与FTP服务器同步一次，保持本地视频和服务器视频的同步。</li>
<li>FTP服务器的下载目录要求可配置，第一次运行该软件时弹出配置窗口，要求输入服务器IP地址，用户名和密码，以及服务器视频所在的目录路径。配置完成后，以后运行不再需要重新配置。</li>
<li>媒体机主板通过串口外接了一块STM32单片机，STM32单片机会将采集到的PM2.5指数，温湿度信息上传，媒体板通过串口接收，并将数据显示在屏幕的最上方。通信协议见“媒体板和单片机通信协议.docx”文档。</li>
<li>开机播放一段欢迎视频，视频打包在Android程序内部</li>
</ol>
<a id="more"></a>
<h1 id="功能分析">功能分析</h1><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-6-30/89255535.jpg" alt=""></p>
<p>工程部分结构图</p>
<p>LaunchActivity:播放欢迎视频</p>
<p>LoginActivity：登录FTP服务器并且下载所有的视频文件</p>
<p>DisplayActivity:播放服务器上最新的文件，并且每个三分钟检查视频的更新和废除，若有更新，则下载下来，不在服务器目录的文件删除掉，否则存储空间占用不断增加</p>
<blockquote>
<ul>
<li>由于设备的网络问题和服务器等造成下载中断，不完整等，必须要有重试下载和检查下载完整的机制</li>
<li>每播放完一组视频，若有更新，刷新播放队列，若无更新，循环播放该组视频</li>
<li>服务器上的文件信息要实时保存到数据库，以供对比</li>
<li>需要下载服务器指定目录下的一类文件</li>
</ul>
</blockquote>
<h1 id="依赖包">依赖包</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> compile fileTree(include: [&apos;*.jar&apos;], dir: &apos;libs&apos;)</div><div class="line">    compile &apos;com.android.support:recyclerview-v7:23.4.0&apos;</div><div class="line">    compile &apos;com.android.support:leanback-v17:23.4.0&apos;</div><div class="line">//    compile files(&apos;libs/commons-net-3.0.1.jar&apos;)</div><div class="line">    compile &apos;com.jakewharton:butterknife:7.0.0&apos;</div><div class="line">    compile &apos;org.xutils:xutils:3.3.26&apos;</div><div class="line">    compile files(&apos;libs/commons-net-3.3.jar&apos;)</div></pre></td></tr></table></figure>
<h2 id="v17_Leanback_Library">v17 Leanback Library</h2><p><a href="https://developer.android.com/topic/libraries/support-library/features.html#v17-leanback" target="_blank" rel="external">https://developer.android.com/topic/libraries/support-library/features.html#v17-leanback</a><br>内置了对TV设备的支持</p>
<h2 id="org-xutils:xutils:3-3-26">org.xutils:xutils:3.3.26</h2><p>开源框架 这里主要是用到数据库模块</p>
<h2 id="commons-net-3-3-jar">commons-net-3.3.jar</h2><p>apache出品的与FTP服务器交互的jar包</p>
<h1 id="技术实现">技术实现</h1><h2 id="数据库的实时更新">数据库的实时更新</h2><p>创建:在LoginActivity</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">    public static DbManager.DaoConfig daoConfig = new DbManager.DaoConfig()</div><div class="line">            .setDbName(&quot;addisplay.db&quot;)</div><div class="line">            .setTableCreateListener(new DbManager.TableCreateListener() &#123;</div><div class="line">                @Override</div><div class="line">                public void onTableCreated(DbManager db, TableEntity&lt;?&gt; table) &#123;</div><div class="line">                    Log.i(&quot;mzeht&quot;, &quot;onTableCreated&lt;&lt;&quot; + table.getName());</div><div class="line">                &#125;</div><div class="line">            &#125;)</div><div class="line">//            .setAllowTransaction(true)</div><div class="line">//            .setDbDir(new File(&quot;/mnt/sdcard/&quot;))</div><div class="line">//            .setDbVersion(1)</div><div class="line">            .setDbUpgradeListener(new DbManager.DbUpgradeListener() &#123;</div><div class="line">                @Override</div><div class="line">                public void onUpgrade(DbManager db, int oldVersion, int newVersion) &#123;</div><div class="line"></div><div class="line">                &#125;</div><div class="line">            &#125;)</div><div class="line">            .setDbOpenListener(new DbManager.DbOpenListener() &#123;</div><div class="line">                @Override</div><div class="line">                public void onDbOpened(DbManager db) &#123;</div><div class="line">                    db.getDatabase().enableWriteAheadLogging();</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">    DbManager db = x.getDb(daoConfig);</div></pre></td></tr></table></figure>
<p>我们需要一个NewFile</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div></pre></td><td class="code"><pre><div class="line">@Table(name=&quot;mp4file_info&quot;)</div><div class="line">public class NewFile &#123;</div><div class="line">    @Column(name=&quot;id&quot;,isId = true,autoGen = true,property = &quot;&quot;)</div><div class="line">    private int id;</div><div class="line">    @Column(name = &quot;file_Name&quot;)</div><div class="line">    private String fileName;</div><div class="line">    @Column(name = &quot;file_Size&quot;)</div><div class="line">    private long fileSize;</div><div class="line">    @Column(name = &quot;file_Path&quot;)</div><div class="line">    private String filePath;</div><div class="line"></div><div class="line">    public NewFile(String fileName, long fileSize, String filePath) &#123;</div><div class="line">        this.fileName = fileName;</div><div class="line">        this.fileSize = fileSize;</div><div class="line">        this.filePath = filePath;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public NewFile() &#123;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int getId() &#123;</div><div class="line">        return id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setId(int id) &#123;</div><div class="line">        this.id = id;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getFileName() &#123;</div><div class="line">        return fileName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setFileName(String fileName) &#123;</div><div class="line">        this.fileName = fileName;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public long getFileSize() &#123;</div><div class="line">        return fileSize;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setFileSize(long fileSize) &#123;</div><div class="line">        this.fileSize = fileSize;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public String getFilePath() &#123;</div><div class="line">        return filePath;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void setFilePath(String filePath) &#123;</div><div class="line">        this.filePath = filePath;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    @Override</div><div class="line">    public String toString() &#123;</div><div class="line">        return &quot;NewFile&#123;&quot; +</div><div class="line">                &quot;fileName=&apos;&quot; + fileName + &apos;\&apos;&apos; +</div><div class="line">                &quot;, fileSize=&quot; + fileSize +&apos;\&apos;&apos; +</div><div class="line">                &quot;, filePath=&quot; + filePath +</div><div class="line">                &apos;&#125;&apos;;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在下载工具类中：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">NewFile newFile = new NewFile(file.getName(), file.getSize(), LocalSavePath + fileName);</div><div class="line">                           newFiles.add(newFile);</div><div class="line">                       &#125;</div><div class="line">                   &#125;</div><div class="line">               &#125;</div><div class="line">           &#125;</div><div class="line">           //退出登陆FTP，关闭ftpCLient的连接</div><div class="line">           ftpClient.logout();</div><div class="line">           ftpClient.disconnect();</div><div class="line"></div><div class="line"></div><div class="line">           DbManager db = x.getDb(LoginActivity.daoConfig);</div><div class="line">           db.delete(NewFile.class);</div><div class="line">           db.save(newFiles);</div><div class="line">           Log.i(&quot;数据库保存实时服务器文件信息&quot;, newFiles.toString());</div></pre></td></tr></table></figure>
<h2 id="视频的循环播放">视频的循环播放</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"> public void loadView(String path) &#123;</div><div class="line"></div><div class="line">        Uri uri = Uri.parse(path);</div><div class="line">        final String fileinfo = path + &quot;&quot;;</div><div class="line">        mVideoView.setVideoURI(uri);</div><div class="line">        mVideoView.start();</div><div class="line"></div><div class="line">        mVideoView.setOnPreparedListener(new MediaPlayer.OnPreparedListener() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onPrepared(MediaPlayer mp) &#123;</div><div class="line"></div><div class="line">                mp.start();// 播放</div><div class="line">                Log.i(&quot;开始播放&quot;, &quot;服务器的第&quot; + count + &quot;个文件&gt;&gt;&gt;&gt;&gt;&gt;&quot; + playFile.getName());</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        mVideoView.setOnCompletionListener(new MediaPlayer.OnCompletionListener() &#123;</div><div class="line"></div><div class="line">            @Override</div><div class="line">            public void onCompletion(MediaPlayer mp) &#123;</div><div class="line">                android.util.Log.i(&quot;播放完成&quot;, &quot;服务器的第&quot; + count + &quot;个文件&gt;&gt;&gt;&gt;&gt;&gt;&quot; + playFile.getName());</div><div class="line">                count++;</div><div class="line">                if (count &lt; displaySize) &#123;</div><div class="line">                &#125; else &#123;</div><div class="line">                    count = 0;</div><div class="line">                    playendFlag = true;</div><div class="line">                &#125;</div><div class="line">                Log.i(&quot;&quot;, &quot;count:&quot; + count + &quot;dispalysize:&quot; + displaySize);</div><div class="line">                playFile = mp4Files.get(count);</div><div class="line">                Uri uri = Uri.parse(playFile.getAbsolutePath());</div><div class="line">//                Log.i(&quot;setOnCompletionListener&quot;,playFile.getAbsolutePath());</div><div class="line">                mVideoView.setVideoURI(uri);</div><div class="line">                mVideoView.start();// 播放</div><div class="line"></div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<p>主要是对mVideoView的两个监听</p>
<h2 id="从数据库刷新播放列表">从数据库刷新播放列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line">private void initData() &#123;</div><div class="line"></div><div class="line">        boolean sdCardExist = Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED);</div><div class="line">        String pathdir;</div><div class="line">        if (!sdCardExist) &#123;</div><div class="line">            pathdir = getFilesDir().getAbsolutePath();//新建一级主目录</div><div class="line">        &#125; else &#123;</div><div class="line">            pathdir = FileUtils.CacheDir[3];//新建一级主目录</div><div class="line">        &#125;</div><div class="line">        DbManager db = x.getDb(LoginActivity.daoConfig);</div><div class="line">        String sql = &quot;select id,file_Name,file_Size,file_Path from mp4file_info &quot;;</div><div class="line">        List&lt;DbModel&gt; dbModelAll = null;</div><div class="line">        try &#123;</div><div class="line">            dbModelAll = db.findDbModelAll(new SqlInfo(sql));</div><div class="line">        &#125; catch (DbException e) &#123;</div><div class="line">            e.printStackTrace();</div><div class="line">        &#125;</div><div class="line">        List&lt;String&gt; pathList = new ArrayList&lt;String&gt;();</div><div class="line">        for (DbModel dbmodel : dbModelAll) &#123;</div><div class="line">            String id = dbmodel.getString(&quot;id&quot;);</div><div class="line">            String file_Nanme = dbmodel.getString(&quot;file_Name&quot;);</div><div class="line">            String file_path = dbmodel.getString(&quot;file_Path&quot;);</div><div class="line">            long file_Size = dbmodel.getLong(&quot;file_Size&quot;);</div><div class="line">            pathList.add(file_path);</div><div class="line">            Log.i(&quot;需要播放:&quot;, &quot; file_Nanme&lt;&lt;&quot; + file_Nanme + &quot; file_Size&lt;&lt;&quot; + file_Size + &quot; file_path&lt;&lt;&quot; + file_path);</div><div class="line">        &#125;</div><div class="line">        mp4Files.clear();</div><div class="line">        for (String path : pathList) &#123;</div><div class="line">            File file = new File(path);</div><div class="line">            mp4Files.add(file);</div><div class="line">        &#125;</div><div class="line">        DeletediscardedFile();</div><div class="line">//        File file = new File(pathdir);</div><div class="line">//        mp4Files = file.listFiles(getFileExtensionFilter(&quot;.mp4&quot;));</div><div class="line">        displaySize = mp4Files.size();</div><div class="line">        initFlag = true;</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h2 id="删除无用的文件">删除无用的文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">private void DeletediscardedFile() &#123;</div><div class="line"></div><div class="line">        String loaclpath = getVideoFilePathStr();</div><div class="line">        File localfiles = new File(loaclpath);</div><div class="line">        File[] localfile = localfiles.listFiles();</div><div class="line">        boolean flag = false;</div><div class="line">        for (int i = 0; i &lt; localfile.length; i++) &#123;</div><div class="line">            flag = false;</div><div class="line">            for (int j = 0; j &lt; mp4Files.size(); j++) &#123;</div><div class="line">                //如果文件名称相同则不删除</div><div class="line">                String name1 = localfile[i].getAbsolutePath();</div><div class="line">                String name2 = mp4Files.get(j).getAbsolutePath();</div><div class="line">                if (name1.equals(name2)) &#123;</div><div class="line">                    flag = true;</div><div class="line">                &#125; else &#123;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            if (flag == false) &#123;</div><div class="line">                File deletefile = new File(localfile[i].getAbsolutePath());</div><div class="line">                deletefile.delete();</div><div class="line">                Log.i(&quot;deletefile:&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&quot;, localfile[i].getName());</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div></pre></td></tr></table></figure>
<h1 id="Thread和Hanler实现循环线程">Thread和Hanler实现循环线程</h1><p>在LoginActivity中有network和download两个线程，一个连接，一个下载，连接失败则会重试连接，成功则开启下载，下载成功则跳转展示页面，失败则重新连接</p>
<p>在DisplayActivity中有三个线程，network，download，initdata，多出一个刷新播放队列的线程</p>
<p>都是通过Therad和Hanler实现，循环线程，确保下载成功</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div></pre></td><td class="code"><pre><div class="line">Runnable initDataTask = new Runnable() &#123;</div><div class="line">        @Override</div><div class="line">        public void run() &#123;</div><div class="line">            initData();</div><div class="line">            Message msg = new Message();</div><div class="line">            Bundle data = new Bundle();</div><div class="line">            data.putBoolean(&quot;value&quot;, initFlag);</div><div class="line">            msg.setData(data);</div><div class="line">            ihandler.sendMessage(msg);</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    Handler ihandler = new Handler() &#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            super.handleMessage(msg);</div><div class="line">            Bundle data = msg.getData();</div><div class="line">            flag = data.getBoolean(&quot;value&quot;);</div><div class="line">            if (flag &amp;&amp; playendFlag) &#123;</div><div class="line">                playFile = mp4Files.get(count);</div><div class="line">                playendFlag = false;</div><div class="line">                loadView(playFile.getAbsolutePath());</div><div class="line">            &#125;</div><div class="line">            // TODO</div><div class="line">            // UI界面的更新等相关操作</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line"></div><div class="line">    Runnable networkTask = new Runnable() &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void run() &#123;</div><div class="line">            // TODO</div><div class="line">            // 在这里进行 http request.网络请求相关操作</div><div class="line">            ftpUtils = FTPUtils.getInstance();</div><div class="line">            flag = ftpUtils.initFTPSetting(ip, Integer.valueOf(port), name, password);</div><div class="line">            Message msg = new Message();</div><div class="line">            Bundle data = new Bundle();</div><div class="line">            data.putBoolean(&quot;value&quot;, flag);</div><div class="line">            msg.setData(data);</div><div class="line">            chandler.sendMessage(msg);</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    Handler chandler = new Handler() &#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            super.handleMessage(msg);</div><div class="line">            Bundle data = msg.getData();</div><div class="line">            flag = data.getBoolean(&quot;value&quot;);</div><div class="line">            if (flag) &#123;</div><div class="line">                new Thread(downloadTask).start();</div><div class="line">            &#125;</div><div class="line">            // TODO</div><div class="line">            // UI界面的更新等相关操作</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line">    Runnable downloadTask = new Runnable() &#123;</div><div class="line"></div><div class="line">        @Override</div><div class="line">        public void run() &#123;</div><div class="line">            // TODO</div><div class="line">            // 在这里进行 http request.网络请求相关操作</div><div class="line">            String savePath = getVideoFilePathStr();</div><div class="line">                downlodFlag = ftpUtils.downLoadTypeFile(dir, savePath, &quot;mp4&quot;);</div><div class="line"></div><div class="line">            Message msg = new Message();</div><div class="line">            Bundle data = new Bundle();</div><div class="line">            data.putBoolean(&quot;value&quot;, downlodFlag);</div><div class="line">            msg.setData(data);</div><div class="line">            dhandler.sendMessage(msg);</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line">    Handler dhandler = new Handler() &#123;</div><div class="line">        @Override</div><div class="line">        public void handleMessage(Message msg) &#123;</div><div class="line">            super.handleMessage(msg);</div><div class="line">            Bundle data = msg.getData();</div><div class="line">            flag = data.getBoolean(&quot;value&quot;);</div><div class="line">            if (flag) &#123;</div><div class="line">                new Thread(initDataTask).run();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;;</div><div class="line"></div><div class="line"></div><div class="line">    private void checkUpdateVideo() &#123;</div><div class="line"></div><div class="line">//        Intent intent= new Intent(this, UpdateService.class);</div><div class="line">//        startService(intent);</div><div class="line">        mHandler = new Handler();</div><div class="line"></div><div class="line">        mHandler.post(new Runnable() &#123;</div><div class="line">            @Override</div><div class="line">            public void run() &#123;</div><div class="line">                new Thread(networkTask).start();</div><div class="line">                mHandler.postDelayed(this, Constants.checkViedoTime);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">    &#125;</div></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="项目功能">项目功能</h1><ol>
<li>软件为运行于安卓平台的客户端软件。</li>
<li>客户端软件运行于一台19寸屏的安卓媒体机上。</li>
<li>该客户端软件有播放广告视频的功能，广告视频从FTP服务器下载，本地的视频文件每隔三分钟与FTP服务器同步一次，保持本地视频和服务器视频的同步。</li>
<li>FTP服务器的下载目录要求可配置，第一次运行该软件时弹出配置窗口，要求输入服务器IP地址，用户名和密码，以及服务器视频所在的目录路径。配置完成后，以后运行不再需要重新配置。</li>
<li>媒体机主板通过串口外接了一块STM32单片机，STM32单片机会将采集到的PM2.5指数，温湿度信息上传，媒体板通过串口接收，并将数据显示在屏幕的最上方。通信协议见“媒体板和单片机通信协议.docx”文档。</li>
<li>开机播放一段欢迎视频，视频打包在Android程序内部</li>
</ol>]]>
    
    </summary>
    
      <category term="Android" scheme="http://mzeht.com/tags/Android/"/>
    
      <category term="FTP" scheme="http://mzeht.com/tags/FTP/"/>
    
      <category term="线程" scheme="http://mzeht.com/tags/%E7%BA%BF%E7%A8%8B/"/>
    
      <category term="同步文件" scheme="http://mzeht.com/tags/%E5%90%8C%E6%AD%A5%E6%96%87%E4%BB%B6/"/>
    
      <category term="综合" scheme="http://mzeht.com/categories/%E7%BB%BC%E5%90%88/"/>
    
      <category term="项目" scheme="http://mzeht.com/categories/%E7%BB%BC%E5%90%88/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[企业征信移动客户端竞品分析]]></title>
    <link href="http://mzeht.com/2016/04/13/%E4%BC%81%E4%B8%9A%E5%BE%81%E4%BF%A1%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%AB%9E%E4%BA%89%E5%93%81%E5%88%86%E6%9E%90/"/>
    <id>http://mzeht.com/2016/04/13/企业征信客户端竞争品分析/</id>
    <published>2016-04-13T09:12:31.000Z</published>
    <updated>2016-11-27T10:28:52.000Z</updated>
    <content type="html"><![CDATA[<h1 id="企加">企加</h1><h2 id="图例">图例</h2><p><img src="http://7xsxyu.com2.z0.glb.clouddn.com/gif/jiaohuqjiahome.gif" alt=""></p>
<h2 id="布局">布局</h2><p>1.首页是传统的tab 和view的切换模式，中间的按钮“企业查询”重点突出<br>2，进入app第一个模块是企业头条，分为推荐和我的关注，推荐是所有企业的新闻，我的关注是关注的企业相关头条。</p>
<h2 id="颜色">颜色</h2><p>以蓝白黑灰为主，白色背景，蓝色主题</p>
<h2 id="交互细节">交互细节</h2><p>下拉刷新自定义的”企“字设计的较好，周围边框有loadding效果，输出处理结果会以动态添加试图的形式通知客户，点击进入webview在工具栏的下方有progressbar指示进度。</p>
<h2 id="小结">小结</h2><p>刷新的交互和中间按钮的强调设计</p>
<h1 id="企查查">企查查</h1><h2 id="图例-1">图例</h2><p><img src="http://7xsxyu.com2.z0.glb.clouddn.com/gif/jiaohuqcchome.gif" alt=""></p>
<h2 id="布局-1">布局</h2><p>1.侧滑式首页设计，没有下侧的切换按钮<br>2，系统栏颜色配合工具栏<br>2，从上往下依次是搜索区域，功能引导区域，热搜区域，关注区域，新闻区域</p>
<h2 id="颜色-1">颜色</h2><p>以红色为主题，白色背景，图标颜色很多</p>
<h2 id="交互细节-1">交互细节</h2><p>搜索区域下整体滑动，保持搜索区域始终可见，新闻区域不触发下拉刷新，点击刷新的方式</p>
<h2 id="小结-1">小结</h2><p>系统状态栏的设置整体感较强</p>
<p><a href="https://www.jianguoyun.com/p/DftAlPkQpN36BRjD1BQ" target="_blank" rel="external">Excel分析文档下载</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="企加">企加</h1><h2 id="图例">图例</h2><p><img src="http://7xsxyu.com2.z0.glb.clouddn.com/gif/jiaohuqjiahome.gif" alt=""></p>
<h2 id="布局">布局<]]>
    </summary>
    
      <category term="交互设计" scheme="http://mzeht.com/tags/%E4%BA%A4%E4%BA%92%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="文档" scheme="http://mzeht.com/categories/%E6%96%87%E6%A1%A3/"/>
    
      <category term="其他" scheme="http://mzeht.com/categories/%E6%96%87%E6%A1%A3/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MongoDB]]></title>
    <link href="http://mzeht.com/2016/03/22/MongoDB/"/>
    <id>http://mzeht.com/2016/03/22/MongoDB/</id>
    <published>2016-03-22T12:55:47.000Z</published>
    <updated>2016-11-27T10:22:50.000Z</updated>
    <content type="html"><![CDATA[<h1 id="简单介绍">简单介绍</h1><h2 id="简介">简介</h2><p>MongoDB是一个基于分布式文件存储的数据库，由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p>
<p>MongoDB是一个高性能，开源，无模式的文档型数据库，官方给自己的定义是Key-value存储(高性能和高扩展)和传统RDBMS(丰富的查询和功能)之间的一座桥梁</p>
<a id="more"></a>
<h2 id="Document和BSON">Document和BSON</h2><p>MongoDB中保存的数据格式为BSON，如：。<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/bson.jpg" alt=""></p>
<p>MongoDB中数据的基本单元称为文档(Document)，它是MongoDB的核心概念，由多个键极其关联的值有序的放置在一起组成，数据库中它对应于关系型数据库的行。</p>
<p>数据在MongoDB中以BSON（Binary-JSON）文档的格式存储在磁盘上。</p>
<p>BSON（Binary Serialized Document Format）是一种类json的一种二进制形式的存储格式，简称Binary JSON，BSON和JSON一样，支持内嵌的文档对象和数组对象，但是BSON有JSON没有的一些数据类型，如Date和BinData类型。</p>
<p>BSON的优点是灵活性高，但它的缺点是空间利用率不是很理想，BSON有三个特点：轻量性、可遍历性、高效性。</p>
<h1 id="文档的增删查改">文档的增删查改</h1><h2 id="简单插入文档">简单插入文档</h2><p>在数据库中，数据插入是最基本的操作，在MongoDB使用db.collection.insert(document)语句来插入文档，如下图：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/insert1.png" alt=""></p>
<p>document是文档数据，collection是存放文档数据的集合。</p>
<p>例如：所有用户的信息存放在users集合中，每个用户的信息为一个user文档，插入数据:</p>
<p>db.users.insert(user);<br>如果collection存在，document会添加到collection目录下， 如果collection不存在，数据库会先创建collection，然后再保存document。</p>
<p>练习一下：把自己的姓名(name)和年龄(age)保存到person集合中！<br>如果想要查看已插入的person文档，可以使用：db.person.find()查看当前库中person集合里的数据。</p>
<p>如果想要查看当前数据库中的集合列表，可以使用：show collections。</p>
<p>db.person.insert({name:’阿牛’, age:28});</p>
<h2 id="批量插入文档">批量插入文档</h2><p>insert语句不但可以插入单个文档，还可以一次性插入多个文档。</p>
<p>插入多个文档时，insert命令的参数为一个数组，数组元素为BSON格式的文档。</p>
<p>多个文档可以放在一个数组内，一次插入多条数据，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">db.users.insert([&#123;name:&quot;tommy&quot;&#125;,&#123;name:&quot;xiaoming&quot;&#125;])</div></pre></td></tr></table></figure>
<p>文档批量插入非常方便，但是使用批量插入时也有一些问题需要注意，因为BSON格式的限制，一次插入的数据量不能超过16M，在一个insert命令中插入多条数据时，MongoDB不保证完全成功或完全失败。</p>
<p>使用insert命令将以下数据一次性插入person集合中。</p>
<p>文／Te_Lee（简书作者）<br>原文链接：<a href="http://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="external">http://www.jianshu.com/p/1e402922ee32/</a><br>著作权归作者所有，转载请联系作者获得授权，并标注“简书作者”。</p>
<table>
<thead>
<tr>
<th>name</th>
<th style="text-align:center">age</th>
<th style="text-align:center">status</th>
</tr>
</thead>
<tbody>
<tr>
<td>mary</td>
<td style="text-align:center">21</td>
<td style="text-align:center">A</td>
</tr>
<tr>
<td>Lucy</td>
<td style="text-align:center">89</td>
<td style="text-align:center">A</td>
</tr>
<tr>
<td>Jacky</td>
<td style="text-align:center">30</td>
<td style="text-align:center">A</td>
</tr>
</tbody>
</table>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">db.person.insert([</div><div class="line"> &#123;name:&quot;Mary&quot;,  age:21, status:&quot;A&quot;&#125;,</div><div class="line"> &#123;name:&quot;Lucy&quot;,  age:89, status:&quot;A&quot;&#125;,</div><div class="line"> &#123;name:&quot;Jacky&quot;, age:30, status:&quot;A&quot;&#125; </div><div class="line">]);</div></pre></td></tr></table></figure>
<h2 id="查询文档">查询文档</h2><p>在MongoDB中，查询指向特定的文档集合，查询设定条件，指明MongoDB需要返回的文档；查询也可以包含一个投影，指定返回的字段。</p>
<p>如下图，在查询过程指定了一个查询条件和一个排序修饰。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="简单介绍">简单介绍</h1><h2 id="简介">简介</h2><p>MongoDB是一个基于分布式文件存储的数据库，由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p>
<p>MongoDB是一个高性能，开源，无模式的文档型数据库，官方给自己的定义是Key-value存储(高性能和高扩展)和传统RDBMS(丰富的查询和功能)之间的一座桥梁</p>]]>
    
    </summary>
    
      <category term="MongoDb" scheme="http://mzeht.com/tags/MongoDb/"/>
    
      <category term="数据库" scheme="http://mzeht.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MongoDb" scheme="http://mzeht.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDb/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs + mongodb实现简单购物网站]]></title>
    <link href="http://mzeht.com/2016/03/21/nodejs-mongodb%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E8%B4%AD%E7%89%A9%E7%BD%91%E7%AB%99/"/>
    <id>http://mzeht.com/2016/03/21/nodejs-mongodb实现简单购物网站/</id>
    <published>2016-03-21T14:53:59.000Z</published>
    <updated>2016-11-27T10:23:21.000Z</updated>
    <content type="html"><![CDATA[<h1 id="需求与设计">需求与设计</h1><h2 id="功能介绍">功能介绍</h2><ol>
<li><p>用户可以完成注册、登录然后登录后对商品的浏览。</p>
</li>
<li><p>登录之后，用户可以对相关商品进行选购并添加到购物车。</p>
</li>
<li><p>用户可以对购物车里面的商品进行增加、减少、删除操作。</p>
</li>
<li><p>用户可对购物车商品进行结算操作。</p>
</li>
</ol>
<a id="more"></a>
<h2 id="技术选型">技术选型</h2><p>本项目涉及使用到NodeJS、Express框架、MongoDB数据库、Mongoose对象模型库，详细介绍如下：</p>
<p>NodeJS：Node.js采用Google Chrome浏览器的V8引擎，一个后端的Javascript运行环境，提供很多系统级的API，如文件操作、网络编程等。</p>
<p>MongoDB：MongoDB是一个基于分布式文件存储的一个高性能，开源，无模式的文档型数据库，数据以BSON文档的格式存储在磁盘上。</p>
<p>Express：一个简洁、灵活的基于Node.js的Web应用开发框架, 支持Ejs、jade等多种模板，并且提供一系列强大的功能，比如：模板解析、静态文件服务、中间件、路由控制等等。</p>
<p>Mongoose：一个针对MongoDB操作的对象模型库，封装了MongoDB对文档的的一些增删改查等常用方法。</p>
<h2 id="结构划分">结构划分</h2><p>项目主要分为以下几大模块：注册模块，登录模块，商品模块、购物车模块、结算模块。</p>
<ol>
<li><p>用户注册模块：填写用户名、密码、确认密码后，实现成功注册，然后进行登录。</p>
</li>
<li><p>用户登录模块：填写已注册的用户名称，填写正确的密码，进入商品展示页面。</p>
</li>
<li><p>商品模块：用户选择相关产品加入购物车。</p>
</li>
<li><p>购物车模块：对相关商品进行增加、减少、删除操作。</p>
</li>
<li><p>结算模块：对购物车内已选择商品进行结算。</p>
</li>
</ol>
<p>模块结构如下图所示：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/module.jpg" alt="image"></p>
<h2 id="流程设计">流程设计</h2><p>此流程图显示用户可以进行登录和注册操作，如果用户已经注册，则可以直接登录，若未注册则必须先注册成功后才能进行登录，登录成功后可以进入商品页浏览商品，也可以选择相关商品并可加入购物车，在购物车页面内可以对购物车商品进行相关操作，最后结选择相关商品进行结算。</p>
<p>其流程如下图所示：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/process.jpg" alt=""></p>
<h1 id="数据库设计">数据库设计</h1><h2 id="数据库介绍">数据库介绍</h2><p>数据库的使用呢，我们这里选择了MongoDB。</p>
<p>MongoDB的简单介绍如下：</p>
<p>MongoDB是一个开源的NoSQL数据库，相比MySQL那样的关系型数据库，它更显得轻巧、灵活， 非常适合在数据规模很大、事务性不强的场合下使用。同时它也是一个对象数据库，没有表、行等概念，也没有固定的模式和结构，所有的数据以文档的形式存储，数据格式就是JSON。</p>
<p>MongoDB —— 是一个对象数据库，没有表、行等概念，也没有固定的模式和结构，所有的数据以Document(以下简称文档)的形式存储(Document，就是一个关联数组式的对象，它的内部由属性组成，一个属性对应的值可能是一个数、字符串、日期、数组，甚至是一个嵌套的文档。)</p>
<p>我们一共要创建三个集合，分别是user(用户)集合、commodity(商品)集合、cart(购物车)集合，后面我们会一一介绍。</p>
<h2 id="user集合属性值展示">user集合属性值展示</h2><p>关于user集合，我们设计的属性有name(用户名)、password(密码)， 如下所示：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/c_user.jpg" alt=""></p>
<h2 id="commodity集合属性值展示">commodity集合属性值展示</h2><p>关于commodity集合，我们设计的属性有name(商品名称)、price(商品价格)、imgSrc(商品展示图片路径)， 如下所示：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/c_commodity.jpg" alt=""></p>
<h2 id="carts集合属性值展示">carts集合属性值展示</h2><p>关于cart集合，我们设计的属性有uId(用户ID)、cId(商品ID)、cName(商品名称)、cPrice(商品价格)、cImgSrc(商品展示图片路径)、cQuantity(商品数量)、cStatus(商品结算状态，未结算为false,已结算为true)， 如下所示：<br>![](<a href="http://7xqtsx.com1.z0.glb.clouddn.com/c_cart.jpg" target="_blank" rel="external">http://7xqtsx.com1.z0.glb.clouddn.com/c_cart.jpg</a></p>
<h1 id="详细设计">详细设计</h1><h2 id="注册模块功能设计介绍">注册模块功能设计介绍</h2><p>功能：本模块主要用于新用户注册，用户通过表单提供用户名和密码信息，系统根据用户提供的注册信息对用户进行具体操作。</p>
<p>输入操作：用户名、密码、确认密码。</p>
<p>对应处理：</p>
<ol>
<li>输入注册信息：在页面提供的表单处输入用户的用户名和密码信息，点击“注册”按钮提交表单数据信息。已注册用户，可点击“登录”按钮，进入登录页面。</li>
</ol>
<p>(2) 用户注册身份验证：连接数据库，以输入的“用户名”数据为查询条件来查看输入用户名是否已存在，如果用户名未注册，则提示注册成功并转到登录页进行登录，如果用户已注册，则给出用户已存在提示并重新注册。</p>
<h2 id="注册界面">注册界面</h2><p>用户注册界面草图如下：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Register.jpg" alt=""></p>
<h2 id="登录模块设计与实现">登录模块设计与实现</h2><p>功能：本模块主要用于对用户身份进行鉴别。用户通过表单提供用户名和密码信息，系统根据用户提供的登录信息对用户进行查询鉴别。 如果身份合法，则用户可进入商品页面。</p>
<p>输入操作：用户名、密码。</p>
<p>对应处理：</p>
<ol>
<li><p>输入用户的登录信息：在页面提供的表单处输入用户的用户名和密码信息，点击“登录”按钮提交表单数据信息。 也可点击“注册”按钮，注册新用户。</p>
</li>
<li><p>用户身份进行验证：连接数据库，打开user集合，检验用户登录信息。以输入的“用户名”数据为查询条件来查看用户是否存在，如果存在，继续检验其输入密码是否正确，密码和用户名都正确，则进入商品展示页面；如果用户名不存在或密码不正确，则给出相应的提示。</p>
</li>
</ol>
<h2 id="登录界面草图">登录界面草图</h2><p>用户登录界面草图如下：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Login.jpg" alt=""></p>
<h2 id="商品页面介绍">商品页面介绍</h2><p>商品页呢，我们主要要来展示商品，用户登录成功之后将会跳入商品页，可对所有商品进行查看， 每个商品信息的内容包括：商品名称、商品图片、商品价格，用户可浏览也可将其加入购物车。</p>
<p>页面草图如下所示：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Commodity.jpg" alt=""></p>
<h2 id="商品页面介绍-1">商品页面介绍</h2><p>关于购物车页面，主要展示用户已购买的商品，包括商品的信息、价格、数量，当然用户可以对其中商品进行增加、减少、删除操作，最后，用户可选择对其中商品进行结算，选择结算后，会提示相应的付款金额。</p>
<p>页面草图如下所示：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Cart.jpg" alt=""></p>
<h1 id="实现注册">实现注册</h1><h2 id="简单启动">简单启动</h2><p>首先呢，我们先新建一个项目工程目录，然后在目录下创建启动文件app.js，开始我们的第一步。</p>
<p>这里我们会用到Express框架来实现相关功能，所以，需要先安装它，具体安装方法这里就不在做介绍了。</p>
<p>在启动文件添加如下内容，来测试Express框架是否引用成功。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">var express = require(&apos;express&apos;);</div><div class="line">var app = express();</div><div class="line">app.get(&apos;/&apos;, function (req, res) &#123;  </div><div class="line">   res.send(&apos;Hello World!&apos;);</div><div class="line">&#125;);</div><div class="line"> </div><div class="line">app.listen(80);</div></pre></td></tr></table></figure>
<p>浏览器查看结果，如收到响应信息则表明我们项目的第一步已经成功搞定。</p>
<h2 id="创建目录">创建目录</h2><p>项目已经启动成功，下面我们开始创建相关目录，用于存储不同的文件。</p>
<p>说明：右侧栏”文件管理”中可添加相应目录和文件。</p>
<ol>
<li><p>public目录：存放静态文件。</p>
</li>
<li><p>routes目录：存放路由文件。</p>
</li>
<li><p>views目录： 存放页面文件。</p>
</li>
<li><p>common目录：存放公共文件。</p>
</li>
<li><p>public目录(可不选)，新建javascripts、stylesheets、images三个目录用以存储js、css、img相关文件。</p>
</li>
</ol>
<p>这里我们内置了一些js、css文件来实现简单页面样式和操作，在页面视图中直接使用即可，引用方法如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;link href=&quot;example/css/bootstrap.min.css&quot; rel=&quot;stylesheet&quot; &gt;</div><div class="line"> </div><div class="line">&lt;script src=&quot;example/js/jquery.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div><div class="line"> </div><div class="line">&lt;script src=&quot;example/js/bootstrap.min.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<h2 id="添加文件">添加文件</h2><p>有了目录，我们开始添加文件，先来添加一个登录页面register.html，便于管理和开发我们统一把视图页面放到views目录下。</p>
<p>views目录，添加register.html注册视图页，如下简单效果图：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Register.jpg" alt=""></p>
<p>有了视图页面，我们就可以访问它了，那要如何访问呢，这里就要使用到ejs模板了，安装方法不在阐述，直接如下引用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">app.set( &apos;view engine&apos;, &apos;html&apos; );</div><div class="line">app.engine( &apos;.html&apos;, require( &apos;ejs&apos; ).__express );</div></pre></td></tr></table></figure>
<p>使用engine函数注册模板引擎并指定处理后缀名为html的文件。</p>
<p>设定视图存放的目录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.set(&apos;views&apos;, require(&apos;path&apos;).join(__dirname, &apos;views&apos;));</div></pre></td></tr></table></figure>
<p>如果是在本地项目中，我们还要指定本地静态资源访问的路径,如下设置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.use(express.static(require(&apos;path&apos;).join(__dirname, &apos;public&apos;)));</div></pre></td></tr></table></figure>
<h2 id="访问注册页">访问注册页</h2><p>有了视图页面，下面我们就开始访问它，app.js文件部分内容，引入相关模块资源，然后简单访问如下：</p>
<p>app.get(‘/‘, function (req, res) {<br>    res.render(‘register’);<br>});<br>app.listen(80);<br>本节启动访问80端口，如成功看到注册页面则表示项目已经运行成功，如未看到，查看相关错误信息，是否缺少相关模块，安装和引用即可。</p>
<h2 id="定义Schema">定义Schema</h2><p>首先在common目录内添加models.js文件用来保存各个集合的Schema文件(集合属性)，也便于我们查看和访问，具体内容如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">module.exports = &#123;</div><div class="line">    user: &#123;</div><div class="line">        name: &#123; type: String, required: true &#125;,</div><div class="line">        password: &#123; type: String, required: true &#125;,</div><div class="line">        gender: &#123; type: Boolean, default: true &#125;</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>有了集合的Schema文件，如何访问呢，接着我们会介绍如何使用Model模型操作这些属性。</p>
<h2 id="创建公共方法">创建公共方法</h2><p>还是common目录，我们在新建一个公共方法 —— dbHelper.js文件，来操作这些Schema，因为后面还会涉及此问题，所以我们写成一个公共的方法，dbHelper文件内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">var mongoose = require(&apos;mongoose&apos;),</div><div class="line">    Schema = mongoose.Schema,</div><div class="line">    models = require(&apos;./models&apos;);</div><div class="line"> </div><div class="line">for(var m in models) &#123;</div><div class="line">    mongoose.model(m, new Schema(models[m]));</div><div class="line">&#125;</div><div class="line">module.exports = &#123;</div><div class="line">    getModel: function (type) &#123;</div><div class="line">        return _getModel(type);</div><div class="line">    &#125;</div><div class="line">&#125;;</div><div class="line">var _getModel = function (type) &#123;</div><div class="line">    return mongoose.model(type);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>如上所示我们通过getModel可获取集合的Model模型就可以对数据库有实质性的操作了</p>
<p>关于Model，简单介绍：由Schema构造生成的模型，具有数据库操作的行为。</p>
<h2 id="添加函数">添加函数</h2><p>关于dbHelper.js文件里方法的访问很简单，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">global.dbHelper = require( &apos;./common/dbHelper&apos; );</div></pre></td></tr></table></figure>
<p>这里我们使用globa来定义全局变量dbHelper，那么dbHelper就可以在任何模块内调用了。</p>
<p>然后我们就开始修改register视图页面，添加单击事件，例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;input type=&quot;button&quot;  onclick=&quot;register()&quot; value=&quot;注 册&quot; /&gt;</div></pre></td></tr></table></figure>
<p>对应register()函数，大致如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">function register()&#123;</div><div class="line">   //通过serialize()方法进行序列化表单值，创建文本字符串。</div><div class="line">   var data = $(&quot;form&quot;).serialize();</div><div class="line">   //例如：&quot;username=张三&amp;password=12345&quot;</div><div class="line">   $.ajax(&#123;</div><div class="line">       url:&apos;/register&apos;,</div><div class="line">       type:&apos;POST&apos;,</div><div class="line">       data:data,</div><div class="line">       success:function(data,status)&#123;</div><div class="line">           if(status == &apos;success&apos;)&#123;</div><div class="line">               location.href=&apos;register&apos;;</div><div class="line">           &#125;</div><div class="line">       &#125;,</div><div class="line">       error:function(res,err)&#123;</div><div class="line">           location.href=&apos;register&apos;;</div><div class="line">       &#125;</div><div class="line">   &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="添加路由">添加路由</h2><p>这里我们需要新建一个文件register.js，专门用来处理来之register页面的post请求， 在后面的学习中还会有多个不同处理文件，万所以我们统一管理在routes目录下，在实际开发中我们可能需要针对不同文件请求给出相应文件的处理，所以我们就做分开处理。</p>
<p>这里贴出register.js文件处理get和post请求的相关代码以供参考，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">// app：express对象</div><div class="line">module.exports = function ( app ) &#123;</div><div class="line">  app.get(&apos;/register&apos;, function(req, res) &#123;</div><div class="line">      res.render(&apos;register&apos;);</div><div class="line">  &#125;);</div><div class="line">  app.post(&apos;/register&apos;, function (req, res) &#123;</div><div class="line">     var User = global.dbHelper.getModel(&apos;user&apos;),</div><div class="line">     uname = req.body.uname;</div><div class="line">     User.findOne(&#123;name: uname&#125;, function (error, doc) &#123;</div><div class="line">       if (doc) &#123;</div><div class="line">            req.session.error = &apos;用户名已存在！&apos;;</div><div class="line">            res.send(500);</div><div class="line">        &#125; else &#123;</div><div class="line">            User.create(&#123;</div><div class="line">                name: uname,</div><div class="line">                password: req.body.upwd</div><div class="line">            &#125;, function (error, doc) &#123;</div><div class="line">                if (error) &#123;</div><div class="line">                    res.send(500);</div><div class="line">                &#125; else &#123;</div><div class="line">                    req.session.error = &apos;用户名创建成功！&apos;;</div><div class="line">                    res.send(200);</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">  &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="模块的加载和引用">模块的加载和引用</h2><p>register的post请求处理中，我们使用了session(express-session模块)还有处理post请求数据的body属性(body-parser和multer模块)，需先安装他们，然后引用即可，如下参考：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;pre&gt;</div><div class="line">//引用模块</div><div class="line">var bodyParser = require(&apos;body-parser&apos;);</div><div class="line">var multer = require(&apos;multer&apos;);</div><div class="line">var session = require(&apos;express-session&apos;);</div><div class="line"></div><div class="line"> </div><div class="line">//调用中间件使用</div><div class="line">app.use(bodyParser.json());</div><div class="line">app.use(bodyParser.urlencoded(&#123; extended: true &#125;));</div><div class="line">app.use(multer());</div></pre></td></tr></table></figure>
<p>后面我们还会再次添加多个路由记录，所以便于管理和访问，我们可以把他们统一放到一起，比如routes目录下新建index.js文件专门用来存放添加的文件，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">module.exports = function ( app ) &#123;</div><div class="line">    require(&apos;./register&apos;)(app);</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>那么我们在app.js文件中直接引用index.js文件就可以访问这些文件了，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">require(&apos;./routes&apos;)(app); //app:express对象。;</div></pre></td></tr></table></figure>
<h2 id="中间件传递信息">中间件传递信息</h2><p>这里我们就一步到位，在register的post请求处理中我们使用了express-session模块来保存相关信息，这里我们就使用中间件来传递这些提示信息，中间件内容如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">app.use(function(req, res, next)&#123;</div><div class="line">    res.locals.user = req.session.user; //保存用户信息</div><div class="line">    var err = req.session.error;  //保存结果响应信息</div><div class="line">    res.locals.message = &apos;&apos;;  // 保存html标签</div><div class="line">    if (err) res.locals.message = &apos;&lt;div class=&quot;alert alert-danger&quot; style=&quot;margin-bottom: 20px;color:red;&quot;&gt;&apos; + err + &apos;&lt;/div&gt;&apos;;</div><div class="line">    next();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>这里注意中间件的安放位置，还有我们设置了变量message并为其简单添加了样式，这里我们在register视图里就用它来作为操作结果的信息提示，直接添加&lt;%- message %&gt;到视图第一个div内即可。</p>
<p>关于注册我们基本已经准备就绪，开始打开连接数据库并设置用户过期时间(注意执行顺序，应放置在首个中间件位置)，app.js条件内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mongoose.connect(&quot;mongodb://127.0.0.1:27017/test&quot;);</div><div class="line"> </div><div class="line">app.use(session(&#123;</div><div class="line">    secret:&apos;secret&apos;,</div><div class="line">    cookie:&#123;</div><div class="line">        maxAge:1000*60*30</div><div class="line">    &#125;</div><div class="line">&#125;));</div></pre></td></tr></table></figure>
<p>到这里，注册功能已经完毕，在用户注册的信息录入中，我们没有进行相关的为空、两次密码的不匹配等等验证等等(可自行添加)，赶紧注册试试吧，本地的话可以通过MongoVUE(可视化客户端)来查看数据是否成功写入数据库。</p>
<h1 id="登陆和浏览">登陆和浏览</h1><h2 id="添加视图">添加视图</h2><p>前面我们已经实现了注册功能，用户可以成功注册，接着我们就开始让用户登录了，此节我们就实现用户的登录功能，并且登录成功后跳转商品页面查看商品。</p>
<p>首先，我们还是在views目录下添加登录视图页面 —— login.html，效果图如下：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Login.jpg" alt=""></p>
<h2 id="访问视图">访问视图</h2><p>有了登录页面，那么注册页面(register)的登录按钮添加指向登陆页面的链接，相应的登陆页的注册按钮也是如此。</p>
<p>这里我们还是添加一个相对应的文件用来处理login页面的请求，routes目录下新建名为login.js的文件，先来增加一个处理get请求的方法，代码参考如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">module.exports = function ( app ) &#123;</div><div class="line">    app.get(&apos;/login&apos;,function(req,res)&#123;</div><div class="line">        res.render(&apos;login&apos;);</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>和register文件一样添加到index.js中，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">require(&apos;./login&apos;)(app);</div></pre></td></tr></table></figure>
<p>register视图页的register()函数的回调中，当注册成功时我们就可以跳转到登陆页面了，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">location.href=&apos;login&apos;;</div></pre></td></tr></table></figure>
<p>好，赶紧试试登陆、注册按钮能否成功跳转吧！</p>
<h2 id="实现登陆">实现登陆</h2><p>我们为登陆按钮增加单击事件和对应函数login()，参考如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">function login()&#123;</div><div class="line">  //通过serialize()方法获取form表单内输入框用户名、密码的值</div><div class="line">  //如：&quot;username=张三&amp;password=12345&quot;</div><div class="line">  var data = $(&quot;form&quot;).serialize();</div><div class="line">  $.ajax(&#123;</div><div class="line">      url:&apos;/login&apos;,</div><div class="line">      type:&apos;POST&apos;,</div><div class="line">      data:data,</div><div class="line">      success:function(data,status)&#123;</div><div class="line">          if(status == &apos;success&apos;)&#123;</div><div class="line">              location.href=&apos;home&apos;;</div><div class="line">          &#125;</div><div class="line">      &#125;,</div><div class="line">      error:function(data,status)&#123;</div><div class="line">           if(status == &quot;error&quot;)&#123;</div><div class="line">              location.href=&apos;login&apos;</div><div class="line">           &#125;</div><div class="line">       &#125;</div><div class="line">   &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在相应的login.js文件中，我们还得添加相对应的post请求处理方法，接着我们会讲述。</p>
<h2 id="登陆处理">登陆处理</h2><p>关于login视图页的post请求处理，我们需要判断用户所输入用户名是否存在，密码是否正确，并使用变量保存相应提示信息，当用户名和密码全部正确时，则返回成功并保存用户的个人信息，用作来判断用户的登陆状态，具体可参考register视图页的post请求。</p>
<p>login.js文件的post请求处理代码，参考如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">app.post(&apos;/login&apos;, function (req, res) &#123;</div><div class="line">  var User = global.dbHelper.getModel(&apos;user&apos;),uname = req.body.uname;</div><div class="line">  User.findOne(&#123;name: uname&#125;, function (error, doc) &#123;</div><div class="line">           if (用户不存在) &#123;</div><div class="line">                req.session.error = &apos;用户名不存在！&apos;;</div><div class="line">                res.send(404);</div><div class="line">            &#125; else if(用户存在，密码错误) &#123;</div><div class="line">                   req.session.error = &quot;密码错误!&quot;;</div><div class="line">                   res.send(404);</div><div class="line">               &#125;else&#123; //用户名、密码正确</div><div class="line">                   req.session.user=doc;</div><div class="line">                   res.send(200);</div><div class="line">               &#125;</div><div class="line">            &#125;);</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>还记得我们登陆的本地变量message嘛，用来保存html标签并包含相应提示信息，这里在登陆页面我们也可以使用，用法：&lt;%- message %&gt;，指定到相应位置即可。</p>
<h2 id="商品页视图">商品页视图</h2><p>用户登录成功之后则跳转至home视图页面(商品主页)，就可以进行对商品的浏览和选择了。</p>
<p>还是views目录，添加home商品视图页，如下简单效果图：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Commodity.jpg" alt=""></p>
<p>用户成功登录之后跳转至home页，这里我们还是做分开处理，routes目录下新建home.js文件用来处理来之home也的get请求。</p>
<p>这里我们假设如果用户未登录将不能查看商品主页，所以，在请求处理中我们还需要判断用户的登陆状态，这个可以使用我们在登录处理时所保存的用户个人信息。</p>
<p>关于商品页的视图展示我们只需要有其名称、价格、图片，这里使用ejs模板循环展示，可参考如下方式：</p>
<p>注：Commodity：商品集合所有数据，内置图片路径为“/example/img”</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/home_refer.jpg" alt=""></p>
<h2 id="请求处理">请求处理</h2><p>在home的get请求处理中，我们需要首先判断用户的登陆状态，只有用户登录了方可跳转到商品页，如果为登陆呢则跳转到登录页，而且在进入商品页的时候并传入Commodity集合的所有数据数据在页面展示。</p>
<p>首先呢，在models.js文件中定义Commodity集合的Schema属性，共包括商品名称、商品价格、商品图片，这里简单定义如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">commodity: &#123;</div><div class="line">   name: String,</div><div class="line">   price: Number,</div><div class="line">   imgSrc: String</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>routes目录下添加home.js文件(index.js文件中引用)。</p>
<p>具体处理方式可参考如下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">module.exports = function ( app ) &#123;</div><div class="line">    app.get(&apos;/home&apos;, function (req, res) &#123;</div><div class="line">        if(req.session.user)&#123;</div><div class="line">            var Commodity = global.dbHelper.getModel(&apos;commodity&apos;);</div><div class="line">            Commodity.find(&#123;&#125;, function (error, docs) &#123;</div><div class="line">               //将Commoditys变量传入home模板</div><div class="line">               res.render(&apos;home&apos;,&#123;Commoditys:docs&#125;);</div><div class="line">            &#125;);</div><div class="line">        &#125;else&#123;</div><div class="line">            req.session.error = &quot;请先登录&quot;</div><div class="line">            res.redirect(&apos;/login&apos;);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="添加商品">添加商品</h2><p>添加商品，views目录下添加addcommodity视图页面用来对商品的添加，这里简单样式参考如下：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Addcommodity.jpg" alt=""></p>
<p>相对应的addcommodity函数参考代码如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">//imgSrc表示图片路径)，这里内置了5张图片，格式为：xmsz-X.jpg(X为1-5数字)。</div><div class="line">var data = $(&quot;form&quot;).serialize()+&quot;&amp;imgSrc=&quot; + &quot;xmsz-&quot;+Math.floor(Math.random()*5+1)+&quot;.jpg&quot;;</div><div class="line">$.ajax(&#123;</div><div class="line">     url:&apos;/addcommodity&apos;,</div><div class="line">     type:&apos;POST&apos;,</div><div class="line">     data:data,</div><div class="line">     success:function(data,status)&#123;</div><div class="line">         if(status == &apos;success&apos;)&#123;</div><div class="line">            alert(&apos;添加成功！&apos;)</div><div class="line">         &#125;</div><div class="line">     &#125;,</div><div class="line">     error:function(data,err)&#123;</div><div class="line">         alert(&apos;添加失败！&apos;)</div><div class="line">     &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="商品添加处理">商品添加处理</h2><p>这里我们就直接在home.js文件中添加保存商品的处理方法，如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">app.get(&apos;/addcommodity&apos;, function(req, res) &#123;</div><div class="line">    res.render(&apos;addcommodity&apos;);</div><div class="line">&#125;);</div><div class="line">app.post(&apos;/addcommodity&apos;, function (req, res) &#123;</div><div class="line">    var Commodity = global.dbHelper.getModel(&apos;commodity&apos;);</div><div class="line">    Commodity.create(&#123;</div><div class="line">        name: req.body.name,</div><div class="line">        price: req.body.price,</div><div class="line">        imgSrc: req.body.imgSrc</div><div class="line">    &#125;, function (error, doc) &#123;</div><div class="line">        if (doc) &#123;</div><div class="line">            res.send(200);</div><div class="line">        &#125;else&#123;</div><div class="line">            res.send(404);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>到这里关于商品页的展示和添加就完成了</p>
<h1 id="购物车结算">购物车结算</h1><h2 id="添加商品链接">添加商品链接</h2><p>上节课程里我们已经实现了商品的添加和展示，接下来我们开始进行对商品的操作——加入购物车。</p>
<p>首先，商品页的加入购物车按钮、购物车查看按钮添加链接，如下所示：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;/addToCart/&lt;%=Commoditys[i]._id%&gt;&quot;&gt;加入购物车&lt;/a&gt;</div></pre></td></tr></table></figure>
<p>我们先定义购物车(cart)集合的Schema属性，包含：uId(用户ID)、cId(商品ID)、cName(商品名称)、cPrice(商品价格)、cImgSrc(商品展示图片路径)、cQuantity(商品数量)、cStatus(商品结算状态，默认为false)，参考如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cart:&#123;</div><div class="line">       uId: &#123; type: String &#125;,</div><div class="line">       cId: &#123; type: String &#125;,</div><div class="line">       cName: &#123; type: String &#125;,</div><div class="line">       cPrice: &#123; type: String &#125;,</div><div class="line">       cImgSrc: &#123; type:String &#125; ,</div><div class="line">       cQuantity: &#123; type: Number &#125;,</div><div class="line">       cStatus : &#123; type: Boolean, default: false  &#125;</div><div class="line">   &#125;</div></pre></td></tr></table></figure>
<p>以上属性定义我们还是统一放到models.js文件中以方便管理和操作。<br>接着views目录下添加购物车(cart.html)视图页面，参考如下：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Cart.jpg" alt=""></p>
<p>购物车页面的展示实现可参考如下贴图：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/cart_refer.jpg" alt=""></p>
<h2 id="访问视图-1">访问视图</h2><p>接着在routes目录添加cart.js文件(index.js文件中引用)，来定义路由处理规则。</p>
<ol>
<li>比如cart路径的处理，如下：</li>
</ol>
<p>1.1 检测登陆用户是否过期，已过期则跳转login页同时给出提示信息。<br>1.2 通过global.dbHelper.getModel方法获取cart模型。<br>1.3 通过find查询用户所有商品并传入模板，条件：用户ID，结算状态。<br>1.4 贴出部分代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">app.get(&apos;/cart&apos;, function(req, res) &#123;</div><div class="line">     ......</div><div class="line">   Cart.find(&#123;&quot;uId&quot;:用户ID,&quot;cStatus&quot;:false&#125;,function (error, docs) &#123;</div><div class="line">       res.render(&apos;cart&apos;,&#123;carts:docs&#125;);</div><div class="line">   &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<ol>
<li>加入购物车按钮链接所对应路径的处理，如：/addToCart/:商品id</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">app.get(&quot;/addToCart/:id&quot;, function(req, res) &#123;...&#125;);</div></pre></td></tr></table></figure>
<p>2.1 通过req.params.id获取商品ID号并检测登陆用户状态。<br>2.2 通过global.dbHelper.getModel方法获取购物车(cart)、商品(commodity)模型。<br>2.3 商品已存在则进行更新操作，贴出部分参考代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Cart.update(&#123;&quot;uId&quot;:用户ID,&quot;cId&quot;:商品ID&#125;,&#123;$set:&#123;cQuantity:已有数量+1&#125;&#125;</div></pre></td></tr></table></figure></p>
<p>2.4商品未存在则进行添加操作，贴出部分代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">Commodity.findOne(&#123;&quot;_id&quot;: 商品ID&#125;, function (error, doc) &#123;</div><div class="line">        Cart.create(&#123;</div><div class="line">            uId: 用户ID,</div><div class="line">            cId: 商品ID,</div><div class="line">            cName: doc.name,</div><div class="line">            cPrice: doc.price,</div><div class="line">            cImgSrc: doc.imgSrc,</div><div class="line">            cQuantity : 1</div><div class="line">        &#125;,function(error,doc)&#123;</div><div class="line">            if(doc)&#123;</div><div class="line">                res.redirect(&apos;/home&apos;);</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure></p>
<h2 id="商品的单选和全选">商品的单选和全选</h2><p>在购物车页面展示还是使用ejs模板(具体实现可参考贴图)来实现用户购物车商品的展示，现期间我们用到了checkbox，这里我们就来简单的实现商品的全选和单选。</p>
<p>首先，简单介绍实现步骤：</p>
<ol>
<li>用户选中全选按钮时，列表内选框全部变为勾选状态。</li>
<li>用户取消全选按钮选中状态时，列表内选框全部取消勾选状态。</li>
<li>列表内选框为全部勾选状态时，全选按钮为选中状态，反之不勾选。</li>
<li>全选按钮未选中情况下，当列表内按钮全部选中则全选按钮也要被选中。<br>对于checkbox按钮如下图所示：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/checkbox.jpg" alt=""></li>
</ol>
<p>注：data-index属性存储索引值用来获取商品数量，data=id存储商品ID，data-price存储商品价格。</p>
<p>实现全选：为全选框(如id为CheckAll)添加单击事件，这里我们使用prop方法设置checkbox状态、is方法判断checkbox状态，如下参考示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(&apos;#CheckAll&apos;).click(function()&#123;</div><div class="line">      var self = $(this);</div><div class="line">      $(&apos;input[name=&quot;chkItem&quot;]&apos;).each(function()&#123;</div><div class="line">         $(this).prop(&quot;checked&quot;,self.is(&apos;:checked&apos;));</div><div class="line">      &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>实现单选：单选框(如name为chkItem)添加单击事件，这里我们使用prop方法设置checkbox状态、not方法判断checkbox状态，如下参考示例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(&apos;input[name=&quot;chkItem&quot;]:checkbox&apos;).click(function()&#123;</div><div class="line">   var isCheck = $(&apos;input[name=&quot;chkItem&quot;]:not(:checked)&apos;).length?false:true;</div><div class="line">   $(&apos;#CheckAll&apos;).prop(&quot;checked&quot;,isCheck);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>到这里我们就简单实现了按钮的全选和单选，以上方法可供参考也可以自行思路去实现。</p>
<h2 id="商品的增加和减少">商品的增加和减少</h2><p>前面我们实现了对于商品的单选和全选功能，下面我们就开始实现商品数量的加减。</p>
<p>对于+、-按钮如下图所示：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/add-subtr.jpg" alt=""></p>
<p>简单实现步骤如下：</p>
<ol>
<li>定义data-type属性用于区分+、-按钮。</li>
<li>a标签添加单击事件。并同时改变显示框的值。</li>
<li>使用siblings()方法改变同级标签的数量值。<br>具体实现可参考如下方法：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$(&apos;.li-quantity a&apos;).click(function()&#123;</div><div class="line">    var self = $(this);</div><div class="line">    var type = self.attr(&apos;data-type&apos;),</div><div class="line">        num = parseFloat(self.siblings(&apos;input&apos;).val());</div><div class="line">    if(type == &apos;add&apos;)&#123;</div><div class="line">          num += 1;</div><div class="line">     &#125;else if(type == &apos;subtr&apos;)&#123;</div><div class="line">          if(num &gt; 1)&#123;</div><div class="line">             num -= 1;</div><div class="line">          &#125;else&#123;</div><div class="line">             return false;</div><div class="line">          &#125;</div><div class="line">     &#125;</div><div class="line">    self.siblings(&apos;input&apos;).val(num);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>到这里对于商品数量的加、减也实现了，接着我们开始实现用户选中商品的总价格计算功能。</p>
<h2 id="计算总金额">计算总金额</h2><p>商品的状态选择和数量的加减功能我们已经实现了，选择我们就开始实现当用户选择相关商品时总金额的计算功能。</p>
<p>实现步骤如下：</p>
<ol>
<li>定义公共方法，用于用户不同加、减、全选等操作时皆可调用。</li>
<li>循环列表内所有被选中的checkbox(假设name为chkItem)。</li>
<li>使用checkbox的相应属性值，来获取价格和数量。</li>
<li>定义全局变量(假设为sum)存储总金额并赋值显示。<br>具体方法实现可参考如下内容：</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">sum = 0;</div><div class="line">$(&apos;input[name=&quot;chkItem&quot;]:checked&apos;).each(function()&#123;</div><div class="line">    var self = $(this),</div><div class="line">     price = self.attr(&apos;data-price&apos;),</div><div class="line">     index = self.attr(&apos;data-index&apos;);</div><div class="line">     var quantity = $(&apos;#Q&apos;+index).val();</div><div class="line">     sum +=(parseFloat(price)*parseFloat(quantity));</div><div class="line"> &#125;);</div><div class="line"> $(&quot;金额标签&quot;).html(&apos;￥&apos;+ sum +&apos;.00&apos;);</div></pre></td></tr></table></figure>
<p>到这里，选中商品的价格总计功能也就简单实现了。</p>
<h2 id="商品结算">商品结算</h2><p>关于结算功能，这里就做简单介绍，当用户点击结算按钮时，计算出被选商品的总金额，给予alert出总金额，数据库则更新相应商品的结算状态和数量，当然你也可以在购物车集合中添加一个用户消费金额的属性来保存所消费的金额总数更好，这里就简单处理了。</p>
<p>具体功能实现这里简单介绍如下：</p>
<ol>
<li>定义公共方法，用于用户不同加、减、全选等操作时皆可调用。</li>
<li>循环列表内所有被选中的checkbox(假设name为chkItem)。</li>
<li>使用checkbox的相应属性值，来获取价格和数量。</li>
<li>定义全局变量(假设为sum)存储总金额并赋值显示。<br>这里贴出部分实现代码，如下：</li>
</ol>
<p>//结算方法内容</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">$(&apos;input[name=&quot;chkItem&quot;]:checked&apos;).each(function()&#123;</div><div class="line">     var self = $(this),</div><div class="line">         //通过data-index属性，获取索引值</div><div class="line">         index = self.attr(&apos;data-index&apos;),</div><div class="line">        //通过data-id属性，获取对应ID</div><div class="line">         ID= self.attr(&apos;data-id&apos;);</div><div class="line">     var 数量= $(&apos;#Q&apos;+index).val();</div><div class="line">     var data = &#123; &quot;cid&quot;: ID, &quot;cnum&quot;:数量&#125;;</div><div class="line">     //发送数据请求</div><div class="line">     ...   </div><div class="line">&#125;);</div><div class="line">alert(&apos;所付金额为：￥&apos;+sum);</div><div class="line">location.href = &quot;cart&quot;;</div></pre></td></tr></table></figure>
<p>cart.js文件添加对应路由处理如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">app.post(&quot;路径&quot;,function(req,res)&#123;</div><div class="line">   var Cart = global.dbHelper.getModel(&apos;cart&apos;);</div><div class="line">   Cart.update(&#123;&quot;_id&quot;:req.body.ID&#125;,&#123;$set : &#123; cQuantity : req.body.数量,cStatus:true &#125;&#125;,function(error,doc)&#123; </div><div class="line">...</div></pre></td></tr></table></figure>
<h2 id="商品删除">商品删除</h2><p>关于商品的删除功能就简单多了，我们只需获取其ID即可实现对于购物车内商品的删除操作</p>
<p>在购物车商品的展示功能实现时，我们就可以获取其ID，如下参考：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;a href=&quot;/delFromCart/&lt;%=carts[i]._id%&gt;&quot; &gt;删除&lt;/a&gt;</div><div class="line">cart.js文件，添加对应路径处理方法，这里简单实现参考如下：</div><div class="line"></div><div class="line">app.get(&quot;/delFromCart/:id&quot;, function(req, res) &#123;</div><div class="line">   //req.params.id 获取ID号</div><div class="line">   var Cart = global.dbHelper.getModel(&apos;cart&apos;);</div><div class="line">   Cart.remove(&#123;&quot;_id&quot;:req.params.id&#125;,function(error,doc)&#123;</div><div class="line">       //成功返回1  失败返回0</div><div class="line">       if(doc &gt; 0)&#123;</div><div class="line">           res.redirect(&apos;/cart&apos;);</div><div class="line">       &#125;</div><div class="line">   &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>好，到这里所有功能都已经实现了，赶快好好回味回味所学所悟吧！</p>
<p>附：项目源码下载地址：<a href="https://github.com/hubwiz/example-node" target="_blank" rel="external">https://github.com/hubwiz/example-node</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="需求与设计">需求与设计</h1><h2 id="功能介绍">功能介绍</h2><ol>
<li><p>用户可以完成注册、登录然后登录后对商品的浏览。</p>
</li>
<li><p>登录之后，用户可以对相关商品进行选购并添加到购物车。</p>
</li>
<li><p>用户可以对购物车里面的商品进行增加、减少、删除操作。</p>
</li>
<li><p>用户可对购物车商品进行结算操作。</p>
</li>
</ol>]]>
    
    </summary>
    
      <category term="MongoDb" scheme="http://mzeht.com/tags/MongoDb/"/>
    
      <category term="Nodejs" scheme="http://mzeht.com/tags/Nodejs/"/>
    
      <category term="综合" scheme="http://mzeht.com/categories/%E7%BB%BC%E5%90%88/"/>
    
      <category term="项目" scheme="http://mzeht.com/categories/%E7%BB%BC%E5%90%88/%E9%A1%B9%E7%9B%AE/"/>
    
  </entry>
  
</feed>