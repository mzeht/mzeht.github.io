<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>my soul your beats</title>
  <icon>https://www.gravatar.com/avatar/1e310ed28c529de1852f3d888b397760</icon>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://mzeht.com/"/>
  <updated>2019-04-30T21:59:57.874Z</updated>
  <id>http://mzeht.com/</id>
  
  <author>
    <name>mzeht</name>
    <email>mzeht@outlook.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试文章</title>
    <link href="http://mzeht.com/2019/05/01/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/"/>
    <id>http://mzeht.com/2019/05/01/测试文章/</id>
    <published>2019-04-30T21:57:23.000Z</published>
    <updated>2019-04-30T21:59:57.874Z</updated>
    
    <content type="html"><![CDATA[<p><img src="%20uploads/15304601545484.jpg" alt="15304601545484"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;%20uploads/15304601545484.jpg&quot; alt=&quot;15304601545484&quot;&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="技术" scheme="http://mzeht.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>springboot</title>
    <link href="http://mzeht.com/2017/11/01/2017-11-07/"/>
    <id>http://mzeht.com/2017/11/01/2017-11-07/</id>
    <published>2017-11-01T04:55:49.000Z</published>
    <updated>2019-04-30T20:33:51.256Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
      <category term="springboot" scheme="http://mzeht.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>r2*r2组合自定义异常处理</title>
    <link href="http://mzeht.com/2017/06/01/r2-r2%E7%BB%84%E5%90%88%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/"/>
    <id>http://mzeht.com/2017/06/01/r2-r2组合自定义异常处理/</id>
    <published>2017-06-01T04:55:49.000Z</published>
    <updated>2019-04-30T20:33:51.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="处理前"><a href="#处理前" class="headerlink" title="处理前"></a>处理前</h2><p>使用r2+r2组合 以下代码很常见</p><p>只有返回的数据能解析成即有格式时 会走<code>onNext</code> 我们往往还要进一步判断<br>常见的是判断成功／失败的标志字段</p><p>对于<code>onError</code> 我们一般都是弹出提示</p><p>如果服务端返还格式不规范也不会走<code>onNext</code></p><p>异常处理我们显得很无力</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">ApiManager.getApi().XXXXXXX(ObjectHelper.toMap(quickDeliverDTO))</span><br><span class="line">                .compose(this.bindToLifecycle())</span><br><span class="line">                .subscribeOn(Schedulers.io())</span><br><span class="line">                .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                .subscribe(new Observer&lt;ApiResult&lt;String&gt;&gt;() &#123;</span><br><span class="line">                    @Override</span><br><span class="line">                    public void onComplete() &#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    @Override</span><br><span class="line">                    public void onError(Throwable e) &#123;</span><br><span class="line">                        </span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    @Override</span><br><span class="line">                    public void onSubscribe(@NonNull Disposable d) &#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    @Override</span><br><span class="line">                    public void onNext(ApiResult&lt;String&gt; stringApiResult) &#123;</span><br><span class="line">                       </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br></pre></td></tr></table></figure><h2 id="我们希望可以。。。"><a href="#我们希望可以。。。" class="headerlink" title="我们希望可以。。。"></a>我们希望可以。。。</h2><p>1.自定义错误处理<br>2.成功／失败标志不要手动判断 成功走单独回调<br>3.失败时 默认方法提示错误，不用每次手写弹窗<br>4.没有网络连接时，不发起请求，走失败回调<br>5.保留原有回调 应对特殊情况</p><h2 id="自定义Converter-捕获异常"><a href="#自定义Converter-捕获异常" class="headerlink" title="自定义Converter 捕获异常"></a>自定义Converter 捕获异常</h2><p>CustomGsonResponseBodyConverter<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">class CustomGsonResponseBodyConverter&lt;T&gt; implements Converter&lt;ResponseBody, T&gt; &#123;</span><br><span class="line">    private final Gson gson;</span><br><span class="line">    private final TypeAdapter&lt;T&gt; adapter;</span><br><span class="line"></span><br><span class="line">    CustomGsonResponseBodyConverter(Gson gson, TypeAdapter&lt;T&gt; adapter) &#123;</span><br><span class="line">        this.gson = gson;</span><br><span class="line">        this.adapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public T convert(ResponseBody value) throws IOException &#123;</span><br><span class="line">        String response = value.string();</span><br><span class="line">        HttpStatus httpStatus = gson.fromJson(response, HttpStatus.class);</span><br><span class="line">        if (!httpStatus.isSuccess()) &#123;</span><br><span class="line">            value.close();</span><br><span class="line">            throw new ApiException(httpStatus.getCode(), httpStatus.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        MediaType contentType = value.contentType();</span><br><span class="line">        Charset charset = contentType != null ? contentType.charset(UTF_8) : UTF_8;</span><br><span class="line">        InputStream inputStream = new ByteArrayInputStream(response.getBytes());</span><br><span class="line">        Reader reader = new InputStreamReader(inputStream, charset);</span><br><span class="line">        JsonReader jsonReader = gson.newJsonReader(reader);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            return adapter.read(jsonReader);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            value.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>CustomGsonRequestBodyConverter</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">final class CustomGsonRequestBodyConverter&lt;T&gt; implements Converter&lt;T, RequestBody&gt; &#123;</span><br><span class="line">    private static final MediaType MEDIA_TYPE = MediaType.parse(&quot;application/json; charset=UTF-8&quot;);</span><br><span class="line">    private static final Charset UTF_8 = Charset.forName(&quot;UTF-8&quot;);</span><br><span class="line"></span><br><span class="line">    private final Gson gson;</span><br><span class="line">    private final TypeAdapter&lt;T&gt; adapter;</span><br><span class="line"></span><br><span class="line">    CustomGsonRequestBodyConverter(Gson gson, TypeAdapter&lt;T&gt; adapter) &#123;</span><br><span class="line">        this.gson = gson;</span><br><span class="line">        this.adapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public RequestBody convert(T value) throws IOException &#123;</span><br><span class="line">        Buffer buffer = new Buffer();</span><br><span class="line">        Writer writer = new OutputStreamWriter(buffer.outputStream(), UTF_8);</span><br><span class="line">        JsonWriter jsonWriter = gson.newJsonWriter(writer);</span><br><span class="line">        adapter.write(jsonWriter, value);</span><br><span class="line">        jsonWriter.close();</span><br><span class="line">        return RequestBody.create(MEDIA_TYPE, buffer.readByteString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CustomGsonResponseBodyConverter</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">class CustomGsonResponseBodyConverter&lt;T&gt; implements Converter&lt;ResponseBody, T&gt; &#123;</span><br><span class="line">    private final Gson gson;</span><br><span class="line">    private final TypeAdapter&lt;T&gt; adapter;</span><br><span class="line"></span><br><span class="line">    CustomGsonResponseBodyConverter(Gson gson, TypeAdapter&lt;T&gt; adapter) &#123;</span><br><span class="line">        this.gson = gson;</span><br><span class="line">        this.adapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public T convert(ResponseBody value) throws IOException &#123;</span><br><span class="line">        String response = value.string();</span><br><span class="line">        HttpStatus httpStatus = gson.fromJson(response, HttpStatus.class);</span><br><span class="line">        if (!httpStatus.isSuccess()) &#123;</span><br><span class="line">            value.close();</span><br><span class="line">            throw new ApiException(httpStatus.getCode(), httpStatus.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        MediaType contentType = value.contentType();</span><br><span class="line">        Charset charset = contentType != null ? contentType.charset(UTF_8) : UTF_8;</span><br><span class="line">        InputStream inputStream = new ByteArrayInputStream(response.getBytes());</span><br><span class="line">        Reader reader = new InputStreamReader(inputStream, charset);</span><br><span class="line">        JsonReader jsonReader = gson.newJsonReader(reader);</span><br><span class="line"></span><br><span class="line">        try &#123;</span><br><span class="line">            return adapter.read(jsonReader);</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            value.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其他相关类"><a href="#其他相关类" class="headerlink" title="其他相关类"></a>其他相关类</h3><p><code>HttpStatus.java</code><br>对应接口异常时的返回，不关心返回数据的解析，只解析code，message</p><p>如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">public class HttpStatus &#123;</span><br><span class="line">    @SerializedName(&quot;resultCode&quot;)</span><br><span class="line">    private int mCode;</span><br><span class="line">    @SerializedName(&quot;resultMsg&quot;)</span><br><span class="line">    private String mMessage;</span><br><span class="line"></span><br><span class="line">    public int getCode() &#123;</span><br><span class="line">        return mCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getMessage() &#123;</span><br><span class="line">        return mMessage;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>ApiException.java</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public class ApiException  extends RuntimeException &#123;</span><br><span class="line">    private int mErrorCode;</span><br><span class="line">    private String errorMessage;</span><br><span class="line"></span><br><span class="line">    public String getErrorMessage() &#123;</span><br><span class="line">        return errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setErrorMessage(String errorMessage) &#123;</span><br><span class="line">        this.errorMessage = errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getErrorCode() &#123;</span><br><span class="line">        return mErrorCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setErrorCode(int errorCode) &#123;</span><br><span class="line">        mErrorCode = errorCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public ApiException(int errorCode, String errorMessage) &#123;</span><br><span class="line">        super(errorMessage);</span><br><span class="line">        this.mErrorCode = errorCode;</span><br><span class="line">        this.errorMessage = errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="自定义-Observer"><a href="#自定义-Observer" class="headerlink" title="自定义 Observer"></a>自定义 Observer</h2><p>实现常用处理 免去复写</p><p>DisposableObserver 实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public abstract class BaseDisposableObserver&lt;T&gt; extends DisposableObserver&lt;ApiResult&lt;T&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    private final int RESPONSE_CODE_OK = 1;       //自定义的业务逻辑，成功</span><br><span class="line">    private final int RESPONSE_CODE_FAILED = 2;  //返回数据失败,严重的错误</span><br><span class="line">    private Context mContext;</span><br><span class="line">    private static Gson gson = new Gson();</span><br><span class="line">    private int errorCode;</span><br><span class="line">    private String errorMsg = &quot;未知的错误！&quot;;</span><br><span class="line"></span><br><span class="line">    public BaseDisposableObserver(Context context) &#123;</span><br><span class="line">        this.mContext = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onStart() &#123;</span><br><span class="line">        if (!NetworkUtils.isConnected()) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = &quot;没有网络，请检查网络连接&quot;;</span><br><span class="line">            onFailure(errorCode,errorMsg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public abstract void onSuccess(T t);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onNext(@NonNull ApiResult&lt;T&gt; response) &#123;</span><br><span class="line">        if (response.getResultCode() == RESPONSE_CODE_OK) &#123;</span><br><span class="line">            onSuccess(response.getObject());</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            onFailure(response.getResultCode(), response.getResultMsg());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onError(@NonNull Throwable t) &#123;</span><br><span class="line">        L.d(t.getMessage());</span><br><span class="line"></span><br><span class="line">        if (t instanceof HttpException) &#123;</span><br><span class="line">            HttpException httpException = (HttpException) t;</span><br><span class="line">            errorCode = httpException.code();</span><br><span class="line">            errorMsg = httpException.getMessage();</span><br><span class="line">            getErrorMsg(httpException);</span><br><span class="line">        &#125; else if (t instanceof ApiException) &#123;</span><br><span class="line">            ApiException exception = (ApiException) t;</span><br><span class="line">            errorCode = exception.getErrorCode();</span><br><span class="line">            errorMsg = exception.getErrorMessage();</span><br><span class="line">        &#125; else if (t instanceof SocketTimeoutException) &#123;  //VPN open</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = &quot;服务器响应超时&quot;;</span><br><span class="line">        &#125; else if (t instanceof ConnectException) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = &quot;网络连接异常，请检查网络&quot;;</span><br><span class="line">        &#125; else if (t instanceof RuntimeException) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = &quot;运行时错误&quot;;</span><br><span class="line">        &#125; else if (t instanceof UnknownHostException) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = &quot;无法解析主机，请检查网络连接&quot;;</span><br><span class="line">        &#125; else if (t instanceof UnknownServiceException) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = &quot;未知的服务器错误&quot;;</span><br><span class="line">        &#125; else if (t instanceof IOException) &#123;  //飞行模式等</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = &quot;没有网络，请检查网络连接&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        onFailure(errorCode, errorMsg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @CallSuper</span><br><span class="line">    public void onFailure(int code, String message) &#123;</span><br><span class="line">        switch (code) &#123;</span><br><span class="line"></span><br><span class="line">            case 4:</span><br><span class="line">                //退回到登录页面</span><br><span class="line">                Intent intent = new Intent();</span><br><span class="line">                intent.setClass(mContext, LoginActivity.class);</span><br><span class="line">                mContext.startActivity(intent);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        Toast.makeText(mContext, message + &quot;   code=&quot; + code, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void getErrorMsg(HttpException httpException) &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onComplete() &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Observer 实现也类似</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public abstract class BaseObserver &lt;T&gt; implements Observer&lt;ApiResult&lt;T&gt;&gt; &#123;</span><br><span class="line"></span><br><span class="line">.....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="代码使用"><a href="#代码使用" class="headerlink" title="代码使用"></a>代码使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ApiManager.getSmartApi().login(mNameEdit.getText().toString(), mPassEdit.getText().toString())</span><br><span class="line">               .compose(this.bindToLifecycle())</span><br><span class="line">               .subscribeOn(Schedulers.io())</span><br><span class="line">               .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">               .subscribe(new BaseDisposableObserver&lt;String&gt;(getActivity()) &#123;</span><br><span class="line">                   @Override</span><br><span class="line">                   public void onSuccess(String s) &#123;</span><br><span class="line">                       startActivity(new Intent(getActivity(),MainActivity.class));</span><br><span class="line">                       BasePreference.getInstance().saveToken(s);</span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">               &#125;) ;</span><br></pre></td></tr></table></figure><p>1.没网络时 不请求直接<code>onFailure</code></p><p>2.数据解析成功且标志位置成功时 <code>onSuccess</code></p><p>3.其他走<code>onFailure</code> </p><p><code>onFailure</code>默认弹出提示框提示错误代码 错误信息<br>token失效时返回登录页面</p><p>最重要的是默认<code>onFailure</code>处理都不用另写了！</p><p>当然也可以子类实现 不用默认处理 Observer的默认回调都在</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;处理前&quot;&gt;&lt;a href=&quot;#处理前&quot; class=&quot;headerlink&quot; title=&quot;处理前&quot;&gt;&lt;/a&gt;处理前&lt;/h2&gt;&lt;p&gt;使用r2+r2组合 以下代码很常见&lt;/p&gt;
&lt;p&gt;只有返回的数据能解析成即有格式时 会走&lt;code&gt;onNext&lt;/code&gt; 我们
      
    
    </summary>
    
      <category term="技术" scheme="http://mzeht.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>retrofit2 使用拦截器添加header，打印日志</title>
    <link href="http://mzeht.com/2017/06/01/retrofit2-%E4%BD%BF%E7%94%A8%E6%8B%A6%E6%88%AA%E5%99%A8%E6%B7%BB%E5%8A%A0header%EF%BC%8C%E6%89%93%E5%8D%B0%E6%97%A5%E5%BF%97/"/>
    <id>http://mzeht.com/2017/06/01/retrofit2-使用拦截器添加header，打印日志/</id>
    <published>2017-06-01T04:47:47.000Z</published>
    <updated>2019-04-30T20:33:51.264Z</updated>
    
    <content type="html"><![CDATA[<p>开发中可能遇到有的接口需要header传递一些信息，几个还好，可以用@header注解手动添加</p><p>如果每个接口都需要，一个个写header就很傻了，可以使用retrofit2的拦截器做到</p><h2 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">OkHttpClient.Builder builder = new OkHttpClient.Builder();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        builder.connectTimeout(5, TimeUnit.SECONDS)</span><br><span class="line">                .writeTimeout(5, TimeUnit.SECONDS)</span><br><span class="line">                .readTimeout(5,TimeUnit.SECONDS)</span><br><span class="line">                .addNetworkInterceptor(new StethoInterceptor())</span><br><span class="line">        .addInterceptor(new Interceptor() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public Response intercept(Chain chain) throws IOException &#123;</span><br><span class="line">                L.d(&quot;Interceptor&quot;);</span><br><span class="line"></span><br><span class="line">                // Request customization: add request headers</span><br><span class="line">                String Nonce = String.valueOf(System.currentTimeMillis());</span><br><span class="line">                String CheckSum = EncryptUtils.encryptSHA1ToString(&quot;DA3B979ABB5A4FC0B65382BC1A344A84&quot;+Nonce);</span><br><span class="line">                Request.Builder requestBuilder = chain.request().newBuilder()</span><br><span class="line">                        .addHeader(&quot;AppKey&quot;, &quot;10000001&quot;)</span><br><span class="line">                        .addHeader(&quot;Nonce&quot;, Nonce)</span><br><span class="line">                        .addHeader(&quot;CheckSum&quot;, CheckSum)</span><br><span class="line">                        .addHeader(&quot;x-session-token&quot;, BasePreference.getInstance().getToken())</span><br><span class="line">                        .addHeader(&quot;AppSecret&quot;, &quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;);</span><br><span class="line"></span><br><span class="line">                Request request = requestBuilder.build();</span><br><span class="line">                return chain.proceed(request);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        if (BuildConfig.DEBUG) &#123;</span><br><span class="line">            // Log信息拦截器</span><br><span class="line">            HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();</span><br><span class="line">            loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</span><br><span class="line">            //设置 Debug Log 模式</span><br><span class="line">            builder.addInterceptor(loggingInterceptor);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        OkHttpClient client = builder.build();</span><br><span class="line"></span><br><span class="line">        Retrofit retrofit_baimi = new Retrofit.Builder()</span><br><span class="line">                .baseUrl(BASE_URL+&quot;/&quot;)</span><br><span class="line">                .client(client)</span><br><span class="line">                .addConverterFactory(CustomGsonConverterFactory.create())</span><br><span class="line">                .addCallAdapterFactory(RxJava2CallAdapterFactory.create())</span><br><span class="line">                .build();</span><br><span class="line">        mSmartApi = retrofit_baimi.create(SmartApi.class);</span><br></pre></td></tr></table></figure><p>OkHttpClient 采用build模式 链式设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">addInterceptor(new Interceptor() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public Response intercept(Chain chain) throws IOException &#123;</span><br><span class="line">                L.d(&quot;Interceptor&quot;);</span><br><span class="line"></span><br><span class="line">                // Request customization: add request headers</span><br><span class="line">                String Nonce = String.valueOf(System.currentTimeMillis());</span><br><span class="line">                String CheckSum = EncryptUtils.encryptSHA1ToString(&quot;DA3B979ABB5A4FC0B65382BC1A344A84&quot;+Nonce);</span><br><span class="line">                Request.Builder requestBuilder = chain.request().newBuilder()</span><br><span class="line">                        .addHeader(&quot;AppKey&quot;, &quot;10000001&quot;)</span><br><span class="line">                        .addHeader(&quot;Nonce&quot;, Nonce)</span><br><span class="line">                        .addHeader(&quot;CheckSum&quot;, CheckSum)</span><br><span class="line">                        .addHeader(&quot;x-session-token&quot;, BasePreference.getInstance().getToken())</span><br><span class="line">                        .addHeader(&quot;AppSecret&quot;, &quot;XXXXXXXXXXXXXXXXXXXXXXXXXXXXX&quot;);</span><br><span class="line"></span><br><span class="line">                Request request = requestBuilder.build();</span><br><span class="line">                return chain.proceed(request);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>拦截请求 加入我们的header</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if (BuildConfig.DEBUG) &#123;</span><br><span class="line">            // Log信息拦截器</span><br><span class="line">            HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor();</span><br><span class="line">            loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</span><br><span class="line">            //设置 Debug Log 模式</span><br><span class="line">            builder.addInterceptor(loggingInterceptor);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>如果是开发配置下 拦截body级别日志 打印信息方便调试</p><p><code>注意</code> 日志拦截器建议最后添加 才能拦截到添加header之后的日志</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;开发中可能遇到有的接口需要header传递一些信息，几个还好，可以用@header注解手动添加&lt;/p&gt;
&lt;p&gt;如果每个接口都需要，一个个写header就很傻了，可以使用retrofit2的拦截器做到&lt;/p&gt;
&lt;h2 id=&quot;常用配置&quot;&gt;&lt;a href=&quot;#常用配置&quot; cla
      
    
    </summary>
    
      <category term="技术" scheme="http://mzeht.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>android 模块化统一管理依赖库版本号</title>
    <link href="http://mzeht.com/2017/06/01/android-%E6%A8%A1%E5%9D%97%E5%8C%96%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86%E4%BE%9D%E8%B5%96%E5%BA%93%E7%89%88%E6%9C%AC%E5%8F%B7/"/>
    <id>http://mzeht.com/2017/06/01/android-模块化统一管理依赖库版本号/</id>
    <published>2017-06-01T04:39:20.000Z</published>
    <updated>2019-04-30T20:33:51.262Z</updated>
    
    <content type="html"><![CDATA[<p>在android项目开发中 不断提炼出公用模块，方便以后的开发引入，很是方便，但是编译过程中不可避免遇到版本冲突的情况，<br>最常见的是sdk版本 v4 v7库版本，这种情况下 可以利用gradle配置统一管理</p><p>在项目根目录下新建 <code>common_config.gradle</code></p><h2 id="配置统一的版本号"><a href="#配置统一的版本号" class="headerlink" title="配置统一的版本号"></a>配置统一的版本号</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * 所有Module 的共享变量，这里修改了，全部地方都能修改</span><br><span class="line"> */</span><br><span class="line">project.ext &#123;</span><br><span class="line">    //1.关于SDK version</span><br><span class="line">    compileSdkVersion = 25</span><br><span class="line">    buildToolsVersion = &apos;25.0.3&apos;</span><br><span class="line"></span><br><span class="line">    minSdkVersion = 16</span><br><span class="line">    targetSdkVersion = 25</span><br><span class="line"></span><br><span class="line">    //2.关于Debug和Realease 的不同配置</span><br><span class="line"></span><br><span class="line">    //3.指定Java version</span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line"></span><br><span class="line">    //4.support Lib Version ,最好全部使用同一个版本号</span><br><span class="line">    supportLibraryVersion = &apos;25.3.1&apos;</span><br><span class="line"></span><br><span class="line">    //5.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>在project中引入上述文件</p><figure class="highlight plain"><figcaption><span>Top-level build file where you can add configuration options common to all sub-projects/modules.</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath &apos;com.android.tools.build:gradle:2.3.2&apos;</span><br><span class="line">//        classpath &apos;com.neenbedankt.gradle.plugins:android-apt:1.8&apos;</span><br><span class="line">        // NOTE: Do not place your application dependencies here; they belong</span><br><span class="line">        // in the individual module build.gradle files</span><br><span class="line">        classpath &apos;org.greenrobot:greendao-gradle-plugin:3.2.1&apos;</span><br><span class="line">        classpath &apos;com.jakewharton:butterknife-gradle-plugin:8.4.0&apos;</span><br><span class="line">        //lambda</span><br><span class="line">        classpath &apos;me.tatarka:gradle-retrolambda:3.6.0&apos;</span><br><span class="line">        //lombok</span><br><span class="line">        classpath &apos;me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2&apos;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    configurations.classpath.exclude group: &apos;com.android.tools.external.lombok&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 工程中所有的module 都将能使用common_config 中的配置</span><br><span class="line"> */</span><br><span class="line">subprojects &#123;</span><br><span class="line">    apply from: &quot;$&#123;project.rootDir&#125;/common_config.gradle&quot;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">//        testCompile &apos;junit:junit:4.12&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123; url &quot;https://jitpack.io&quot; &#125;</span><br><span class="line">       </span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task clean(type: Delete) &#123;</span><br><span class="line">    delete rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">compileSdkVersion project.ext.compileSdkVersion</span><br><span class="line">   buildToolsVersion project.ext.buildToolsVersion</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   minSdkVersion project.ext.minSdkVersion</span><br><span class="line">       targetSdkVersion project.ext.targetSdkVersion</span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">       compile &quot;com.android.support:appcompat-v7:$project.ext.supportLibraryVersion&quot;</span><br><span class="line">   compile &quot;com.android.support:design:$project.ext.supportLibraryVersion&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在android项目开发中 不断提炼出公用模块，方便以后的开发引入，很是方便，但是编译过程中不可避免遇到版本冲突的情况，&lt;br&gt;最常见的是sdk版本 v4 v7库版本，这种情况下 可以利用gradle配置统一管理&lt;/p&gt;
&lt;p&gt;在项目根目录下新建 &lt;code&gt;common_
      
    
    </summary>
    
      <category term="技术" scheme="http://mzeht.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
  </entry>
  
  <entry>
    <title>升级到rxjava2+retrofit2</title>
    <link href="http://mzeht.com/2017/06/01/%E5%8D%87%E7%BA%A7%E5%88%B0rxjava2-retrofit2/"/>
    <id>http://mzeht.com/2017/06/01/升级到rxjava2-retrofit2/</id>
    <published>2017-06-01T04:22:18.000Z</published>
    <updated>2019-04-30T20:33:51.265Z</updated>
    
    <content type="html"><![CDATA[<p>之前项目使用rxjava1和retorfit2，抽空在新项目升级到韧性java2</p><h2 id="依赖文件"><a href="#依赖文件" class="headerlink" title="依赖文件"></a>依赖文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    compile &apos;com.squareup.okhttp3:okhttp:3.4.2&apos;</span><br><span class="line">    compile &apos;com.google.code.gson:gson:2.7&apos;</span><br><span class="line">    compile &apos;io.reactivex.rxjava2:rxjava:2.0.7&apos;</span><br><span class="line">    compile &apos;io.reactivex.rxjava2:rxandroid:2.0.1&apos;</span><br><span class="line">    compile &apos;com.squareup.retrofit2:retrofit:2.3.0&apos;</span><br><span class="line">    compile &apos;com.squareup.retrofit2:converter-gson:2.2.0&apos;</span><br><span class="line">//    compile &apos;com.squareup.retrofit2:adapter-rxjava:2.1.0&apos;</span><br><span class="line">//    compile &apos;com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0&apos;</span><br><span class="line">    compile &apos;com.squareup.retrofit2:adapter-rxjava2:2.2.0&apos;</span><br><span class="line">    compile &apos;com.squareup.retrofit2:retrofit-converters:2.1.0&apos;</span><br><span class="line">    compile &apos;com.squareup.okhttp3:logging-interceptor:3.4.2&apos;</span><br><span class="line">//    compile &apos;com.trello:rxlifecycle:1.0&apos;</span><br><span class="line">    compile &apos;com.trello.rxlifecycle2:rxlifecycle:2.1.0&apos;</span><br><span class="line"></span><br><span class="line">//    compile &apos;com.trello:rxlifecycle-android:1.0&apos;</span><br><span class="line">    compile &apos;com.trello.rxlifecycle2:rxlifecycle-android:2.1.0&apos;</span><br><span class="line"></span><br><span class="line">//    compile &apos;com.trello:rxlifecycle-components:1.0&apos;</span><br><span class="line">    compile &apos;com.trello.rxlifecycle2:rxlifecycle-components:2.1.0&apos;</span><br></pre></td></tr></table></figure><p>1.<code>rxlifecycle</code> 也升级到<code>rxlifecycle2</code> 一个rxjava生命周期管理库</p><p>2.retrofit2 支持rxjava2之前</p><p>采用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile &apos;com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0&apos;</span><br></pre></td></tr></table></figure><p>之后</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile &apos;com.squareup.retrofit2:adapter-rxjava2:2.2.0&apos;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前项目使用rxjava1和retorfit2，抽空在新项目升级到韧性java2&lt;/p&gt;
&lt;h2 id=&quot;依赖文件&quot;&gt;&lt;a href=&quot;#依赖文件&quot; class=&quot;headerlink&quot; title=&quot;依赖文件&quot;&gt;&lt;/a&gt;依赖文件&lt;/h2&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Gitflow 工作流</title>
    <link href="http://mzeht.com/2017/05/28/Gitflow-%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    <id>http://mzeht.com/2017/05/28/Gitflow-工作流/</id>
    <published>2017-05-28T08:14:36.000Z</published>
    <updated>2019-04-30T20:33:51.259Z</updated>
    
    <content type="html"><![CDATA[<p>##简介</p><p><img src="http://nvie.com/img/git-model@2x.png" alt><br>[slide]</p><ol><li><code>feature</code>（多个、玫红）。主要是自己玩了，差不多的时候要合并回develop去。从不与master交互。</li><li><code>develop</code>（1个、黄色）。主要是和feature以及release交互。</li><li><code>release</code>（同一时间1个、绿色）。总是基于develop，最后又合并回develop。当然对应的tag跑到master这边去了。生命周期很短，只是为了发布</li><li><code>hotfix</code>（同一时间1个、红色）。总是基于master，并最后合并到master和develop。生命周期较短，用了修复bug或小粒度修改发布。</li><li><code>master</code>（1个蓝色）。没有什么东西，仅是一些关联的tag，因从不在master上开发。</li></ol><p>[slide]</p><ol><li><code>master</code>和<code>develop</code>都具有象征意义。master分支上的代码总是稳定的（stable build），随时可以发布出去。develop上的代码总是从feature上合并过来的，可以进行Nightly Builds，但不直接在develop上进行开发。当develop上的feature足够多以至于可以进行新版本的发布时，可以创建release分支</li><li><code>release</code>分支基于develop，进行很简单的修改后就被合并到master，并打上tag，表示可以发布了。紧接着release将被合并到develop；此时develop可能往前跑了一段，出现合并冲突，需要手工解决冲突后再次合并。这步完成后就删除release分支。</li><li>当从已发布版本中发现bug要修复时，就应用到<code>hotfix</code>分支了。hotfix基于master分支，完成bug修复或紧急修改后，要merge回master，打上一个新的tag，并merge回develop，删除hotfix分支。</li><li>由此可见release和hotfix的生命周期都较短，master/develop虽然总是存在但却不常使用。</li></ol><p>[slide]</p><h2 id="分支详解"><a href="#分支详解" class="headerlink" title="分支详解"></a>分支详解</h2><h3 id="主分支-（Historical-Branches）"><a href="#主分支-（Historical-Branches）" class="headerlink" title="主分支 （Historical Branches）"></a>主分支 （Historical Branches）</h3><p><img src="http://upload-images.jianshu.io/upload_images/54009-70ef16000c0832b0.jpg" alt></p><ol><li>主分支是所有开发活动的核心分支。所有的开发活动产生的输出物最终都会反映到主分支的代码中。主分支分为master分支和development分支。</li></ol><p>[slide]</p><h4 id="master-分支"><a href="#master-分支" class="headerlink" title="master 分支"></a>master 分支</h4><p>master分支上存放的应该是随时可供在生产环境中部署的代码（Production Ready state）。当开发活动告一段落，产生了一份新的可供部署的代码时，master分支上的代码会被更新。同时，每一次更新，最好添加对应的版本号标签（TAG）。<br>[slide]</p><h4 id="develop分支"><a href="#develop分支" class="headerlink" title="develop分支"></a>develop分支</h4><p>develop分支是保存当前最新开发成果的分支。通常这个分支上的代码也是可进行每日夜间发布的代码（Nightly build）。因此这个分支有时也可以被称作整合分支（integration branch）。</p><p>[slide]</p><h2 id="辅助分支"><a href="#辅助分支" class="headerlink" title="辅助分支"></a>辅助分支</h2><p><img src="http://upload-images.jianshu.io/upload_images/54009-7265a72025bddb1a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><ol><li>用于开发新功能时所使用的feature分支；</li><li>用于辅助版本发布的release分支；</li><li>用于修正生产代码中的缺陷的hotfix分支。</li></ol><p>[slide]</p><h3 id="feature-分支"><a href="#feature-分支" class="headerlink" title="feature 分支"></a>feature 分支</h3><p>使用规范：</p><ol><li>可以从develop分支发起feature分支</li><li>代码必须合并回develop分支</li><li>feature分支（有时也可以被叫做“topic分支”）通常是在开发一项新的软件功能的时候使用，这个分支上的代码变更最终合并回develop分支或者干脆被抛弃掉（例如实验性且效果不好的代码变更）</li></ol><p>[slide]</p><h3 id="release分支"><a href="#release分支" class="headerlink" title="release分支"></a>release分支</h3><p><img src="http://upload-images.jianshu.io/upload_images/54009-be502bd4658d9d79.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><ol><li>可以从develop分支派生</li><li>必须合并回develop分支和master分支</li><li>分支命名惯例：release-*</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;##简介&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://nvie.com/img/git-model@2x.png&quot; alt&gt;&lt;br&gt;[slide]&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;feature&lt;/code&gt;（多个、玫红）。主要是自己玩了，差不多的时候要合并回de
      
    
    </summary>
    
      <category term="文档" scheme="http://mzeht.com/categories/documents/"/>
    
    
  </entry>
  
  <entry>
    <title>jenkins项目打包发布配置(srpingboot-jar,war,apk)</title>
    <link href="http://mzeht.com/2017/05/28/jenkins%E5%90%8E%E5%8F%B0%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E5%8F%91%E5%B8%83%E9%85%8D%E7%BD%AE-srpingboot-jar-war/"/>
    <id>http://mzeht.com/2017/05/28/jenkins后台项目打包发布配置-srpingboot-jar-war/</id>
    <published>2017-05-28T08:03:37.000Z</published>
    <updated>2019-04-30T20:33:51.263Z</updated>
    
    <content type="html"><![CDATA[<h2 id="两种不同打包"><a href="#两种不同打包" class="headerlink" title="两种不同打包"></a>两种不同打包</h2><p>jar类 springboot项目</p><ol><li>springboot框架</li><li>生成jar包</li><li>内置tomcat</li><li>运行环境 java</li></ol><p>war类 springmvc项目</p><ol><li>springmvc</li><li>生成war包</li><li>需要外部tomcat</li></ol><h2 id="jar类配置"><a href="#jar类配置" class="headerlink" title="jar类配置"></a>jar类配置</h2><ol><li>配置代码分支来源</li><li>打包</li><li>传输</li><li>启动</li></ol><h3 id="配置代码"><a href="#配置代码" class="headerlink" title="配置代码"></a>配置代码</h3><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/33852371.jpg" alt></p><h3 id="传输"><a href="#传输" class="headerlink" title="传输"></a>传输</h3><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/21535521.jpg" alt></p><h3 id="邮件"><a href="#邮件" class="headerlink" title="邮件"></a>邮件</h3><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">#defined</span><br><span class="line">ID=`ps -ef|grep &quot;official-web-0.0.1-SNAPSHOT&quot; | grep &quot;java&quot;| awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">echo $ID</span><br><span class="line">kill -9 $ID</span><br><span class="line">echo &quot;kill $ID finish&quot;</span><br><span class="line">nohup java -jar official-web-0.0.1-SNAPSHOT.jar &amp;</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>[slide]</p><h2 id="war类配置"><a href="#war类配置" class="headerlink" title="war类配置"></a>war类配置</h2><ol><li>配置代码分支来源</li><li>打包</li><li>传输</li><li>启动</li></ol><p>[slide]</p><h3 id="配置代码-1"><a href="#配置代码-1" class="headerlink" title="配置代码"></a>配置代码</h3><h3 id="打包-1"><a href="#打包-1" class="headerlink" title="打包"></a>打包</h3><h3 id="传输-1"><a href="#传输-1" class="headerlink" title="传输"></a>传输</h3><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># !bin/sh</span><br><span class="line"># jenkins传输war包位置</span><br><span class="line">jenkins_dir=&quot;/root/jenkinsproject&quot;</span><br><span class="line"># war_name=&quot;appservice.war&quot;</span><br><span class="line">#项目名称</span><br><span class="line">project_name=&quot;appservice&quot;</span><br><span class="line">#tomcat路径</span><br><span class="line">tomcat_dir=&quot;/usr/tomcat/apache-tomcat-7.0.42&quot;</span><br><span class="line"># 当前脚本名称,查找进称号需要排除</span><br><span class="line">shell_name=&quot;appservice-deploy.sh&quot;</span><br><span class="line">pid=`ps -ef | grep $tomcat_dir | grep -v $shell_name | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">echo &quot;old pid:&quot;.$pid</span><br><span class="line">if test &quot;$pid&quot;</span><br><span class="line">then</span><br><span class="line">  echo &quot;kill old pid: $pid ing&quot;</span><br><span class="line">  kill -9 $pid</span><br><span class="line">  # 睡眠5s</span><br><span class="line">  sleep 20s</span><br><span class="line">else</span><br><span class="line">        echo &quot;not find old pid&quot;</span><br><span class="line">fi</span><br><span class="line">#删除旧的war包和生成文件夹</span><br><span class="line">rm -rf $tomcat_dir/webapps/$project_name*</span><br><span class="line"># 拷贝新的war包</span><br><span class="line">cp $jenkins_dir/$project_name.war  $tomcat_dir/webapps</span><br><span class="line">#启动tomcat</span><br><span class="line">sh $tomcat_dir/bin/startup.sh</span><br><span class="line">sleep 10s</span><br><span class="line"># 检查启动</span><br><span class="line">newpid=`ps -ef | grep $tomcat_dir | grep -v $shell_name | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">if test &quot;$newpid&quot;</span><br><span class="line">then</span><br><span class="line">        echo &quot;new pid:&quot;.$newpid</span><br><span class="line">#    刷新nginx</span><br><span class="line">    /usr/local/nginx/sbin/nginx -c /usr/local/nginx/conf/nginx.conf -s reload</span><br><span class="line">        exit</span><br><span class="line">else</span><br><span class="line">        echo &quot;not find new pid&quot;</span><br><span class="line">        exit 1</span><br><span class="line">fi</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>[slide]</p><h2 id="apk类配置"><a href="#apk类配置" class="headerlink" title="apk类配置"></a>apk类配置</h2><ol><li>配置代码分支来源</li><li>打包</li><li>传输</li></ol><p>[slide]</p><h3 id="配置代码-2"><a href="#配置代码-2" class="headerlink" title="配置代码"></a>配置代码</h3><h3 id="打包-2"><a href="#打包-2" class="headerlink" title="打包"></a>打包</h3><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/67349864.jpg" alt></p><h3 id="传输-2"><a href="#传输-2" class="headerlink" title="传输"></a>传输</h3><h3 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">applicationVariants.all &#123; variant -&gt;</span><br><span class="line">    if (variant.buildType.name.equals(&apos;release&apos;)) &#123;</span><br><span class="line">        variant.outputs.each &#123; output -&gt;</span><br><span class="line">            def outputFile = output.outputFile</span><br><span class="line">            if (outputFile != null &amp;&amp; outputFile.name.endsWith(&apos;.apk&apos;)) &#123;</span><br><span class="line">                def fileName = &quot;baimimobile_v$&#123;defaultConfig.versionName&#125;_$&#123;buildTime()&#125;.apk&quot;</span><br><span class="line">                output.outputFile = new File(outputFile.parent, fileName)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BUILD SUCCESSFUL</span><br><span class="line"></span><br><span class="line">Total time: 1 mins 27.55 secs</span><br><span class="line">Build step &apos;Invoke Gradle script&apos; changed build result to SUCCESS</span><br><span class="line">Root directory to find files to upload : /Users/wpmac/.jenkins/workspace/baimi-mobile-android</span><br><span class="line">found remote files : [app/build/outputs/apk/baimimobile_v1.1.6_2017-05-18_1126228.apk]</span><br><span class="line">Deploying archive app/build/outputs/apk/baimimobile_v1.1.6_2017-05-18_1126228.apk to fir.im (description=&quot;ecf02a33f60e3ad65c2bc0cae240c7f1&quot;, groups=&quot;&quot;)</span><br><span class="line">You can use ENV var $FIR_DOWNLOAD_URL in other plugins.</span><br><span class="line">Deployment to fir.im Done.</span><br><span class="line"> Your app short url: http://fir.im/baimimobile</span><br><span class="line">Finished: SUCCESS</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;两种不同打包&quot;&gt;&lt;a href=&quot;#两种不同打包&quot; class=&quot;headerlink&quot; title=&quot;两种不同打包&quot;&gt;&lt;/a&gt;两种不同打包&lt;/h2&gt;&lt;p&gt;jar类 springboot项目&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;springboot框架&lt;/li&gt;
&lt;li&gt;生
      
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
  </entry>
  
  <entry>
    <title>greendao 数据库升级</title>
    <link href="http://mzeht.com/2017/05/28/greendao-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8D%87%E7%BA%A7/"/>
    <id>http://mzeht.com/2017/05/28/greendao-数据库升级/</id>
    <published>2017-05-28T07:47:26.000Z</published>
    <updated>2019-04-30T20:33:51.263Z</updated>
    
    <content type="html"><![CDATA[<p>创建一个数据库帮助类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public class MyOpenHelper extends DaoMaster.OpenHelper&#123;</span><br><span class="line">    public MyOpenHelper(Context context, String name) &#123;</span><br><span class="line">        super(context, name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public MyOpenHelper(Context context, String name, SQLiteDatabase.CursorFactory factory) &#123;</span><br><span class="line">        super(context, name, factory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onUpgrade(Database db, int oldVersion, int newVersion) &#123;</span><br><span class="line">        L.d(&quot;db version update from &quot; + oldVersion + &quot; to &quot; + newVersion);</span><br><span class="line">        switch (oldVersion)&#123;</span><br><span class="line">            case 1:</span><br><span class="line">                CollectAdditionDao.createTable(db,true);</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>修改greenDao的版本号，在内层的gradle中的buildTypes节点下添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">greendao &#123;</span><br><span class="line">       // schemaVersion 1</span><br><span class="line">       schemaVersion 2//@add 增值服务表</span><br><span class="line">       targetGenDir &apos;src/main/java&apos;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><p>更新方式</p><p>1.删除再新建</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * 删除原表重新再建立一个表</span><br><span class="line">     * @param db</span><br><span class="line">     */</span><br><span class="line">    public void dropAndCreate(Database db)&#123;</span><br><span class="line">        DaoMaster.dropAllTables(db, true);</span><br><span class="line">        DaoMaster.createAllTables(db, false);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>2.备份数据库，建立新数据库，然后将备份导入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * 备份还原</span><br><span class="line">     * @param db</span><br><span class="line">     * @param daoClasses</span><br><span class="line">     */</span><br><span class="line">    public void migrate(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        generateTempTables(db, daoClasses);</span><br><span class="line">        DaoMaster.dropAllTables(db, true);</span><br><span class="line">        DaoMaster.createAllTables(db, false);</span><br><span class="line">        restoreData(db, daoClasses);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 数据库备份</span><br><span class="line">     * @param db</span><br><span class="line">     * @param daoClasses</span><br><span class="line">     */</span><br><span class="line">    private void generateTempTables(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        for (int i = 0; i &lt; daoClasses.length; i++) &#123;</span><br><span class="line">            DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</span><br><span class="line"></span><br><span class="line">            String divider = &quot;&quot;;</span><br><span class="line">            String tableName = daoConfig.tablename;</span><br><span class="line">            String tempTableName = daoConfig.tablename.concat(&quot;_TEMP&quot;);</span><br><span class="line">            ArrayList&lt;String&gt; properties = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            StringBuilder createTableStringBuilder = new StringBuilder();</span><br><span class="line"></span><br><span class="line">            createTableStringBuilder.append(&quot;CREATE TABLE &quot;).append(tempTableName).append(&quot; (&quot;);</span><br><span class="line"></span><br><span class="line">            for (int j = 0; j &lt; daoConfig.properties.length; j++) &#123;</span><br><span class="line">                String columnName = daoConfig.properties[j].columnName;</span><br><span class="line"></span><br><span class="line">                if (getColumns(db, tableName).contains(columnName)) &#123;</span><br><span class="line">                    properties.add(columnName);</span><br><span class="line"></span><br><span class="line">                    String type = null;</span><br><span class="line"></span><br><span class="line">                    try &#123;</span><br><span class="line">                        type = getTypeByClass(daoConfig.properties[j].type);</span><br><span class="line">                    &#125; catch (Exception exception) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    createTableStringBuilder.append(divider).append(columnName).append(&quot; &quot;).append(type);</span><br><span class="line"></span><br><span class="line">                    if (daoConfig.properties[j].primaryKey) &#123;</span><br><span class="line">                        createTableStringBuilder.append(&quot; PRIMARY KEY&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    divider = &quot;,&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            createTableStringBuilder.append(&quot;);&quot;);</span><br><span class="line"></span><br><span class="line">            db.execSQL(createTableStringBuilder.toString());</span><br><span class="line"></span><br><span class="line">            StringBuilder insertTableStringBuilder = new StringBuilder();</span><br><span class="line"></span><br><span class="line">            insertTableStringBuilder.append(&quot;INSERT INTO &quot;).append(tempTableName).append(&quot; (&quot;);</span><br><span class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</span><br><span class="line">            insertTableStringBuilder.append(&quot;) SELECT &quot;);</span><br><span class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</span><br><span class="line">            insertTableStringBuilder.append(&quot; FROM &quot;).append(tableName).append(&quot;;&quot;);</span><br><span class="line"></span><br><span class="line">            db.execSQL(insertTableStringBuilder.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 数据库恢复</span><br><span class="line">     * @param db</span><br><span class="line">     * @param daoClasses</span><br><span class="line">     */</span><br><span class="line">    private void restoreData(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        for (int i = 0; i &lt; daoClasses.length; i++) &#123;</span><br><span class="line">            DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</span><br><span class="line"></span><br><span class="line">            String tableName = daoConfig.tablename;</span><br><span class="line">            String tempTableName = daoConfig.tablename.concat(&quot;_TEMP&quot;);</span><br><span class="line">            ArrayList&lt;String&gt; properties = new ArrayList();</span><br><span class="line"></span><br><span class="line">            for (int j = 0; j &lt; daoConfig.properties.length; j++) &#123;</span><br><span class="line">                String columnName = daoConfig.properties[j].columnName;</span><br><span class="line"></span><br><span class="line">                if (getColumns(db, tempTableName).contains(columnName)) &#123;</span><br><span class="line">                    properties.add(columnName);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            StringBuilder insertTableStringBuilder = new StringBuilder();</span><br><span class="line"></span><br><span class="line">            insertTableStringBuilder.append(&quot;INSERT INTO &quot;).append(tableName).append(&quot; (&quot;);</span><br><span class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</span><br><span class="line">            insertTableStringBuilder.append(&quot;) SELECT &quot;);</span><br><span class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</span><br><span class="line">            insertTableStringBuilder.append(&quot; FROM &quot;).append(tempTableName).append(&quot;;&quot;);</span><br><span class="line"></span><br><span class="line">            StringBuilder dropTableStringBuilder = new StringBuilder();</span><br><span class="line"></span><br><span class="line">            dropTableStringBuilder.append(&quot;DROP TABLE &quot;).append(tempTableName);</span><br><span class="line"></span><br><span class="line">            db.execSQL(insertTableStringBuilder.toString());</span><br><span class="line">            db.execSQL(dropTableStringBuilder.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    private String getTypeByClass(Class&lt;?&gt; type) throws Exception &#123;</span><br><span class="line">        if (type.equals(String.class)) &#123;</span><br><span class="line">            return &quot;TEXT&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (type.equals(Long.class) || type.equals(Integer.class) || type.equals(long.class)) &#123;</span><br><span class="line">            return &quot;INTEGER&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (type.equals(Boolean.class)) &#123;</span><br><span class="line">            return &quot;BOOLEAN&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Exception exception =</span><br><span class="line">                new Exception(CONVERSION_CLASS_NOT_FOUND_EXCEPTION.concat(&quot; - Class: &quot;).concat(type.toString()));</span><br><span class="line">        throw exception;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static List&lt;String&gt; getColumns(Database db, String tableName) &#123;</span><br><span class="line">        List&lt;String&gt; columns = new ArrayList&lt;&gt;();</span><br><span class="line">        Cursor cursor = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            cursor = db.rawQuery(&quot;SELECT * FROM &quot; + tableName + &quot; limit 1&quot;, null);</span><br><span class="line">            if (cursor != null) &#123;</span><br><span class="line">                columns = new ArrayList&lt;&gt;(Arrays.asList(cursor.getColumnNames()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            Log.v(tableName, e.getMessage(), e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if (cursor != null) cursor.close();</span><br><span class="line">        &#125;</span><br><span class="line">        return columns;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>3.对比表差异，向原表中直接插入column</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     * 对比差异，在原表中直接添加column,赞不做删除操作</span><br><span class="line">     * @param db</span><br><span class="line">     * @param daoClasses</span><br><span class="line">     */</span><br><span class="line">    public void contrastDiff(Database db,ArrayList&lt;String&gt;properties, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses)&#123;</span><br><span class="line">     for(int i=0;i&lt;daoClasses.length;i++)&#123;</span><br><span class="line">         DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</span><br><span class="line">         String tableName=daoConfig.tablename;</span><br><span class="line">         if(properties!=null&amp;&amp;properties.size()&gt;0)&#123;</span><br><span class="line">             ArrayList&lt;String&gt;tem=new ArrayList&lt;&gt;();</span><br><span class="line">             StringBuilder sqlBuilder=new StringBuilder();</span><br><span class="line">             for(int j=0;j&lt;properties.size();j++)&#123;</span><br><span class="line">                 if(getColumns(db,tableName).contains(properties.get(j)))&#123;</span><br><span class="line">                     continue;</span><br><span class="line">                 &#125;</span><br><span class="line">                 tem.add(properties.get(j));</span><br><span class="line">             &#125;</span><br><span class="line">             sqlBuilder.append(&quot;INSERT INTO &quot;).append(tableName).append(&quot; (&quot;);</span><br><span class="line">             sqlBuilder.append(TextUtils.join(&quot;,&quot;, tem));</span><br><span class="line">             sqlBuilder.append(&quot;) SELECT &quot;);</span><br><span class="line">             sqlBuilder.append(TextUtils.join(&quot;,&quot;, tem));</span><br><span class="line">             sqlBuilder.append(&quot; FROM &quot;).append(tableName).append(&quot;;&quot;);</span><br><span class="line">             db.execSQL(sqlBuilder.toString());</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>完整的数据库升级帮助类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line"> * description: greenDao升级帮助</span><br><span class="line"> * author: bear .</span><br><span class="line"> * Created date:  2017/5/17.</span><br><span class="line"> */</span><br><span class="line">public class MigrationHelper &#123;</span><br><span class="line"></span><br><span class="line">    private static final String CONVERSION_CLASS_NOT_FOUND_EXCEPTION =</span><br><span class="line">            &quot;MIGRATION HELPER - CLASS DOESN&apos;T MATCH WITH THE CURRENT PARAMETERS&quot;;</span><br><span class="line">    private static MigrationHelper instance;</span><br><span class="line"></span><br><span class="line">    public static MigrationHelper getInstance() &#123;</span><br><span class="line">        if (instance == null) &#123;</span><br><span class="line">            instance = new MigrationHelper();</span><br><span class="line">        &#125;</span><br><span class="line">        return instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 备份还原</span><br><span class="line">     * @param db</span><br><span class="line">     * @param daoClasses</span><br><span class="line">     */</span><br><span class="line">    public void migrate(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        generateTempTables(db, daoClasses);</span><br><span class="line">        DaoMaster.dropAllTables(db, true);</span><br><span class="line">        DaoMaster.createAllTables(db, false);</span><br><span class="line">        restoreData(db, daoClasses);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 对比差异，在原表中直接添加column,赞不做删除操作</span><br><span class="line">     * @param db</span><br><span class="line">     * @param daoClasses</span><br><span class="line">     */</span><br><span class="line">    public void contrastDiff(Database db,ArrayList&lt;String&gt;properties, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses)&#123;</span><br><span class="line">     for(int i=0;i&lt;daoClasses.length;i++)&#123;</span><br><span class="line">         DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</span><br><span class="line">         String tableName=daoConfig.tablename;</span><br><span class="line">         if(properties!=null&amp;&amp;properties.size()&gt;0)&#123;</span><br><span class="line">             ArrayList&lt;String&gt;tem=new ArrayList&lt;&gt;();</span><br><span class="line">             StringBuilder sqlBuilder=new StringBuilder();</span><br><span class="line">             for(int j=0;j&lt;properties.size();j++)&#123;</span><br><span class="line">                 if(getColumns(db,tableName).contains(properties.get(j)))&#123;</span><br><span class="line">                     continue;</span><br><span class="line">                 &#125;</span><br><span class="line">                 tem.add(properties.get(j));</span><br><span class="line">             &#125;</span><br><span class="line">             sqlBuilder.append(&quot;INSERT INTO &quot;).append(tableName).append(&quot; (&quot;);</span><br><span class="line">             sqlBuilder.append(TextUtils.join(&quot;,&quot;, tem));</span><br><span class="line">             sqlBuilder.append(&quot;) SELECT &quot;);</span><br><span class="line">             sqlBuilder.append(TextUtils.join(&quot;,&quot;, tem));</span><br><span class="line">             sqlBuilder.append(&quot; FROM &quot;).append(tableName).append(&quot;;&quot;);</span><br><span class="line">             db.execSQL(sqlBuilder.toString());</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 删除原表重新再建立一个表</span><br><span class="line">     * @param db</span><br><span class="line">     */</span><br><span class="line">    public void dropAndCreate(Database db)&#123;</span><br><span class="line">        DaoMaster.dropAllTables(db, true);</span><br><span class="line">        DaoMaster.createAllTables(db, false);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 数据库备份</span><br><span class="line">     * @param db</span><br><span class="line">     * @param daoClasses</span><br><span class="line">     */</span><br><span class="line">    private void generateTempTables(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        for (int i = 0; i &lt; daoClasses.length; i++) &#123;</span><br><span class="line">            DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</span><br><span class="line"></span><br><span class="line">            String divider = &quot;&quot;;</span><br><span class="line">            String tableName = daoConfig.tablename;</span><br><span class="line">            String tempTableName = daoConfig.tablename.concat(&quot;_TEMP&quot;);</span><br><span class="line">            ArrayList&lt;String&gt; properties = new ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            StringBuilder createTableStringBuilder = new StringBuilder();</span><br><span class="line"></span><br><span class="line">            createTableStringBuilder.append(&quot;CREATE TABLE &quot;).append(tempTableName).append(&quot; (&quot;);</span><br><span class="line"></span><br><span class="line">            for (int j = 0; j &lt; daoConfig.properties.length; j++) &#123;</span><br><span class="line">                String columnName = daoConfig.properties[j].columnName;</span><br><span class="line"></span><br><span class="line">                if (getColumns(db, tableName).contains(columnName)) &#123;</span><br><span class="line">                    properties.add(columnName);</span><br><span class="line"></span><br><span class="line">                    String type = null;</span><br><span class="line"></span><br><span class="line">                    try &#123;</span><br><span class="line">                        type = getTypeByClass(daoConfig.properties[j].type);</span><br><span class="line">                    &#125; catch (Exception exception) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    createTableStringBuilder.append(divider).append(columnName).append(&quot; &quot;).append(type);</span><br><span class="line"></span><br><span class="line">                    if (daoConfig.properties[j].primaryKey) &#123;</span><br><span class="line">                        createTableStringBuilder.append(&quot; PRIMARY KEY&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    divider = &quot;,&quot;;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            createTableStringBuilder.append(&quot;);&quot;);</span><br><span class="line"></span><br><span class="line">            db.execSQL(createTableStringBuilder.toString());</span><br><span class="line"></span><br><span class="line">            StringBuilder insertTableStringBuilder = new StringBuilder();</span><br><span class="line"></span><br><span class="line">            insertTableStringBuilder.append(&quot;INSERT INTO &quot;).append(tempTableName).append(&quot; (&quot;);</span><br><span class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</span><br><span class="line">            insertTableStringBuilder.append(&quot;) SELECT &quot;);</span><br><span class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</span><br><span class="line">            insertTableStringBuilder.append(&quot; FROM &quot;).append(tableName).append(&quot;;&quot;);</span><br><span class="line"></span><br><span class="line">            db.execSQL(insertTableStringBuilder.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 数据库恢复</span><br><span class="line">     * @param db</span><br><span class="line">     * @param daoClasses</span><br><span class="line">     */</span><br><span class="line">    private void restoreData(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        for (int i = 0; i &lt; daoClasses.length; i++) &#123;</span><br><span class="line">            DaoConfig daoConfig = new DaoConfig(db, daoClasses[i]);</span><br><span class="line"></span><br><span class="line">            String tableName = daoConfig.tablename;</span><br><span class="line">            String tempTableName = daoConfig.tablename.concat(&quot;_TEMP&quot;);</span><br><span class="line">            ArrayList&lt;String&gt; properties = new ArrayList();</span><br><span class="line"></span><br><span class="line">            for (int j = 0; j &lt; daoConfig.properties.length; j++) &#123;</span><br><span class="line">                String columnName = daoConfig.properties[j].columnName;</span><br><span class="line"></span><br><span class="line">                if (getColumns(db, tempTableName).contains(columnName)) &#123;</span><br><span class="line">                    properties.add(columnName);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            StringBuilder insertTableStringBuilder = new StringBuilder();</span><br><span class="line"></span><br><span class="line">            insertTableStringBuilder.append(&quot;INSERT INTO &quot;).append(tableName).append(&quot; (&quot;);</span><br><span class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</span><br><span class="line">            insertTableStringBuilder.append(&quot;) SELECT &quot;);</span><br><span class="line">            insertTableStringBuilder.append(TextUtils.join(&quot;,&quot;, properties));</span><br><span class="line">            insertTableStringBuilder.append(&quot; FROM &quot;).append(tempTableName).append(&quot;;&quot;);</span><br><span class="line"></span><br><span class="line">            StringBuilder dropTableStringBuilder = new StringBuilder();</span><br><span class="line"></span><br><span class="line">            dropTableStringBuilder.append(&quot;DROP TABLE &quot;).append(tempTableName);</span><br><span class="line"></span><br><span class="line">            db.execSQL(insertTableStringBuilder.toString());</span><br><span class="line">            db.execSQL(dropTableStringBuilder.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private String getTypeByClass(Class&lt;?&gt; type) throws Exception &#123;</span><br><span class="line">        if (type.equals(String.class)) &#123;</span><br><span class="line">            return &quot;TEXT&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (type.equals(Long.class) || type.equals(Integer.class) || type.equals(long.class)) &#123;</span><br><span class="line">            return &quot;INTEGER&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if (type.equals(Boolean.class)) &#123;</span><br><span class="line">            return &quot;BOOLEAN&quot;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Exception exception =</span><br><span class="line">                new Exception(CONVERSION_CLASS_NOT_FOUND_EXCEPTION.concat(&quot; - Class: &quot;).concat(type.toString()));</span><br><span class="line">        throw exception;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private static List&lt;String&gt; getColumns(Database db, String tableName) &#123;</span><br><span class="line">        List&lt;String&gt; columns = new ArrayList&lt;&gt;();</span><br><span class="line">        Cursor cursor = null;</span><br><span class="line">        try &#123;</span><br><span class="line">            cursor = db.rawQuery(&quot;SELECT * FROM &quot; + tableName + &quot; limit 1&quot;, null);</span><br><span class="line">            if (cursor != null) &#123;</span><br><span class="line">                columns = new ArrayList&lt;&gt;(Arrays.asList(cursor.getColumnNames()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            Log.v(tableName, e.getMessage(), e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            if (cursor != null) cursor.close();</span><br><span class="line">        &#125;</span><br><span class="line">        return columns;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;创建一个数据库帮助类&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>仿京东三级地址选择器</title>
    <link href="http://mzeht.com/2017/05/28/%E4%BB%BF%E4%BA%AC%E4%B8%9C%E4%B8%89%E7%BA%A7%E5%9C%B0%E5%9D%80%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>http://mzeht.com/2017/05/28/仿京东三级地址选择器/</id>
    <published>2017-05-28T07:16:56.000Z</published>
    <updated>2019-04-30T20:33:51.265Z</updated>
    
    <content type="html"><![CDATA[<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/96157233.jpg" alt></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@BindView(R.id.recive_address_txt)</span><br><span class="line">    TextView mReciveAddressTxt;</span><br></pre></td></tr></table></figure><p>根据tab的深度和前一项选择的id，获取下一级菜单项<br>下一级的数据都是由上一级参数网络请求而来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mReciveAddressTxt.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line"></span><br><span class="line">                Selector selector = new Selector(getActivity(), 3);</span><br><span class="line"></span><br><span class="line">                selector.setDataProvider(new DataProvider() &#123;</span><br><span class="line">                    @Override</span><br><span class="line">                    public void provideData(int currentDeep, int preId, DataReceiver receiver) &#123;</span><br><span class="line">                        //根据tab的深度和前一项选择的id，获取下一级菜单项</span><br><span class="line">                        Log.i(TAG, &quot;provideData: currentDeep &gt;&gt;&gt; &quot; + currentDeep + &quot; preId &gt;&gt;&gt; &quot; + preId);</span><br><span class="line">//                        ApiManager.getBaimiApi().getCity()</span><br><span class="line"></span><br><span class="line">                        switch (currentDeep) &#123;</span><br><span class="line">                            case 0:</span><br><span class="line">                                if (proviceList.size() &gt; 0) &#123;</span><br><span class="line">                                    receiver.send(getDatas(proviceList));</span><br><span class="line">                                    return;</span><br><span class="line">                                &#125;</span><br><span class="line">                                ApiManager.getBaimiApi().getProvince().subscribeOn(Schedulers.io())</span><br><span class="line">                                        .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                                        .subscribe(new Subscriber&lt;ApiResult&lt;List&lt;String&gt;&gt;&gt;() &#123;</span><br><span class="line">                                            @Override</span><br><span class="line">                                            public void onCompleted() &#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            @Override</span><br><span class="line">                                            public void onError(Throwable e) &#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            @Override</span><br><span class="line">                                            public void onNext(ApiResult&lt;List&lt;String&gt;&gt; listApiResult) &#123;</span><br><span class="line">                                                if (listApiResult.getContent().size() &gt; 0) &#123;</span><br><span class="line">                                                    proviceList = listApiResult.getContent();</span><br><span class="line">                                                    receiver.send(getDatas(proviceList));</span><br><span class="line">                                                &#125;</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;);</span><br><span class="line">                                break;</span><br><span class="line">                            case 1:</span><br><span class="line"></span><br><span class="line">                                ApiManager.getBaimiApi().getCity(proviceList.get(preId))</span><br><span class="line">                                        .subscribeOn(Schedulers.io())</span><br><span class="line">                                        .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                                        .subscribe(new Subscriber&lt;ApiResult&lt;List&lt;String&gt;&gt;&gt;() &#123;</span><br><span class="line">                                            @Override</span><br><span class="line">                                            public void onCompleted() &#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            @Override</span><br><span class="line">                                            public void onError(Throwable e) &#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            @Override</span><br><span class="line">                                            public void onNext(ApiResult&lt;List&lt;String&gt;&gt; listApiResult) &#123;</span><br><span class="line">                                                if (listApiResult.getFlag().equals(&quot;1&quot;) || listApiResult.getContent().size() &gt; 0) &#123;</span><br><span class="line">                                                    cityList = listApiResult.getContent();</span><br><span class="line">                                                    receiver.send(getDatas(cityList));</span><br><span class="line">                                                &#125;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;);</span><br><span class="line">                                break;</span><br><span class="line">                            case 2:</span><br><span class="line">                                ApiManager.getBaimiApi().getArea(cityList.get(preId))</span><br><span class="line">                                        .subscribeOn(Schedulers.io())</span><br><span class="line">                                        .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                                        .subscribe(new Subscriber&lt;ApiResult&lt;List&lt;String&gt;&gt;&gt;() &#123;</span><br><span class="line">                                            @Override</span><br><span class="line">                                            public void onCompleted() &#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            @Override</span><br><span class="line">                                            public void onError(Throwable e) &#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            @Override</span><br><span class="line">                                            public void onNext(ApiResult&lt;List&lt;String&gt;&gt; listApiResult) &#123;</span><br><span class="line">                                                if (listApiResult.getFlag().equals(&quot;1&quot;) || listApiResult.getContent().size() &gt; 0) &#123;</span><br><span class="line">                                                    areaList = listApiResult.getContent();</span><br><span class="line">                                                    receiver.send(getDatas(areaList));</span><br><span class="line">                                                &#125;</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;);</span><br><span class="line">                                break;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    private ArrayList&lt;ISelectAble&gt; getDatas(List&lt;String&gt; list) &#123;</span><br><span class="line">                        int count = list.size();</span><br><span class="line">                        ArrayList&lt;ISelectAble&gt; data = new ArrayList&lt;&gt;(count);</span><br><span class="line">                        for (int j = 0; j &lt; count; j++) &#123;</span><br><span class="line"></span><br><span class="line">                            int finalJ = j;</span><br><span class="line">                            data.add(new ISelectAble() &#123;</span><br><span class="line">                                @Override</span><br><span class="line">                                public String getName() &#123;</span><br><span class="line">                                    return list.get(finalJ);</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                @Override</span><br><span class="line">                                public int getId() &#123;</span><br><span class="line">                                    return finalJ;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                @Override</span><br><span class="line">                                public Object getArg() &#123;</span><br><span class="line">                                    return this;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                        return data;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;);</span><br><span class="line">                selector.setSelectedListener(new SelectedListener() &#123;</span><br><span class="line">                    @Override</span><br><span class="line">                    public void onAddressSelected(ArrayList&lt;ISelectAble&gt; selectAbles) &#123;</span><br><span class="line">                        String result = &quot;&quot;;</span><br><span class="line">                        for (ISelectAble selectAble : selectAbles) &#123;</span><br><span class="line">                            result += selectAble.getName() + &quot; &quot;;</span><br><span class="line">                        &#125;</span><br><span class="line">//                        Toast.makeText(getActivity(), result, Toast.LENGTH_SHORT).show();</span><br><span class="line">                        mReciveAddressTxt.setText(result);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                BottomDialog dialog = new BottomDialog(getActivity());</span><br><span class="line">                dialog.init(getActivity(), selector);</span><br><span class="line">                dialog.show();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><h2 id="库地址"><a href="#库地址" class="headerlink" title="库地址"></a>库地址</h2><p><a href="https://github.com/dunwen/JDSelector" target="_blank" rel="noopener">https://github.com/dunwen/JDSelector</a></p><p><a href="https://github.com/chihane/JDAddressSelector" target="_blank" rel="noopener">https://github.com/chihane/JDAddressSelector</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;效果图&quot;&gt;&lt;a href=&quot;#效果图&quot; class=&quot;headerlink&quot; title=&quot;效果图&quot;&gt;&lt;/a&gt;效果图&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/96157233.j
      
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>popupwindow封装使用</title>
    <link href="http://mzeht.com/2017/05/28/popupwindow%E5%B0%81%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>http://mzeht.com/2017/05/28/popupwindow封装使用/</id>
    <published>2017-05-28T07:00:46.000Z</published>
    <updated>2019-04-30T20:33:51.264Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一个封装封装类"><a href="#一个封装封装类" class="headerlink" title="一个封装封装类"></a>一个封装封装类</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br></pre></td><td class="code"><pre><span class="line">public class CustomPopWindow implements PopupWindow.OnDismissListener&#123;</span><br><span class="line">    private static final float DEFAULT_ALPHA = 0.7f;</span><br><span class="line">    private Context mContext;</span><br><span class="line">    private int mWidth;</span><br><span class="line">    private int mHeight;</span><br><span class="line">    private boolean mIsFocusable = true;</span><br><span class="line">    private boolean mIsOutside = true;</span><br><span class="line">    private int mResLayoutId = -1;</span><br><span class="line">    private View mContentView;</span><br><span class="line">    private PopupWindow mPopupWindow;</span><br><span class="line">    private int mAnimationStyle = -1;</span><br><span class="line"></span><br><span class="line">    private boolean mClippEnable = true;//default is true</span><br><span class="line">    private boolean mIgnoreCheekPress = false;</span><br><span class="line">    private int mInputMode = -1;</span><br><span class="line">    private PopupWindow.OnDismissListener mOnDismissListener;</span><br><span class="line">    private int mSoftInputMode = -1;</span><br><span class="line">    private boolean mTouchable = true;//default is ture</span><br><span class="line">    private View.OnTouchListener mOnTouchListener;</span><br><span class="line"></span><br><span class="line">    private Window mWindow;//当前Activity 的窗口</span><br><span class="line">    /**</span><br><span class="line">     * 弹出PopWindow 背景是否变暗，默认不会变暗。</span><br><span class="line">     */</span><br><span class="line">    private boolean mIsBackgroundDark = false;</span><br><span class="line"></span><br><span class="line">    private float mBackgroundDrakValue = 0;// 背景变暗的值，0 - 1</span><br><span class="line"></span><br><span class="line">    private CustomPopWindow(Context context)&#123;</span><br><span class="line">        mContext = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getWidth() &#123;</span><br><span class="line">        return mWidth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public int getHeight() &#123;</span><br><span class="line">        return mHeight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     *</span><br><span class="line">     * @param anchor</span><br><span class="line">     * @param xOff</span><br><span class="line">     * @param yOff</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public CustomPopWindow showAsDropDown(View anchor, int xOff, int yOff)&#123;</span><br><span class="line">        if(mPopupWindow!=null)&#123;</span><br><span class="line">            mPopupWindow.showAsDropDown(anchor,xOff,yOff);</span><br><span class="line">        &#125;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public CustomPopWindow showAsDropDown(View anchor)&#123;</span><br><span class="line">        if(mPopupWindow!=null)&#123;</span><br><span class="line">            mPopupWindow.showAsDropDown(anchor);</span><br><span class="line">        &#125;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @RequiresApi(api = Build.VERSION_CODES.KITKAT)</span><br><span class="line">    public CustomPopWindow showAsDropDown(View anchor, int xOff, int yOff, int gravity)&#123;</span><br><span class="line">        if(mPopupWindow!=null)&#123;</span><br><span class="line">            mPopupWindow.showAsDropDown(anchor,xOff,yOff,gravity);</span><br><span class="line">        &#125;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 相对于父控件的位置（通过设置Gravity.CENTER，下方Gravity.BOTTOM等 ），可以设置具体位置坐标</span><br><span class="line">     * @param parent 父控件</span><br><span class="line">     * @param gravity</span><br><span class="line">     * @param x the popup&apos;s x location offset</span><br><span class="line">     * @param y the popup&apos;s y location offset</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public CustomPopWindow showAtLocation(View parent, int gravity, int x, int y)&#123;</span><br><span class="line">        if(mPopupWindow!=null)&#123;</span><br><span class="line">            mPopupWindow.showAtLocation(parent,gravity,x,y);</span><br><span class="line">        &#125;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 添加一些属性设置</span><br><span class="line">     * @param popupWindow</span><br><span class="line">     */</span><br><span class="line">    private void apply(PopupWindow popupWindow)&#123;</span><br><span class="line">        popupWindow.setClippingEnabled(mClippEnable);</span><br><span class="line">        if(mIgnoreCheekPress)&#123;</span><br><span class="line">            popupWindow.setIgnoreCheekPress();</span><br><span class="line">        &#125;</span><br><span class="line">        if(mInputMode!=-1)&#123;</span><br><span class="line">            popupWindow.setInputMethodMode(mInputMode);</span><br><span class="line">        &#125;</span><br><span class="line">        if(mSoftInputMode!=-1)&#123;</span><br><span class="line">            popupWindow.setSoftInputMode(mSoftInputMode);</span><br><span class="line">        &#125;</span><br><span class="line">        if(mOnDismissListener!=null)&#123;</span><br><span class="line">            popupWindow.setOnDismissListener(mOnDismissListener);</span><br><span class="line">        &#125;</span><br><span class="line">        if(mOnTouchListener!=null)&#123;</span><br><span class="line">            popupWindow.setTouchInterceptor(mOnTouchListener);</span><br><span class="line">        &#125;</span><br><span class="line">        popupWindow.setTouchable(mTouchable);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private PopupWindow build()&#123;</span><br><span class="line"></span><br><span class="line">        if(mContentView == null)&#123;</span><br><span class="line">            mContentView = LayoutInflater.from(mContext).inflate(mResLayoutId,null);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 2017.3.17 add</span><br><span class="line">        // 获取当前Activity的window</span><br><span class="line">        Activity activity = (Activity) mContentView.getContext();</span><br><span class="line">        if(activity!=null &amp;&amp; mIsBackgroundDark)&#123;</span><br><span class="line">            //如果设置的值在0 - 1的范围内，则用设置的值，否则用默认值</span><br><span class="line">            final  float alpha = (mBackgroundDrakValue &gt; 0 &amp;&amp; mBackgroundDrakValue &lt; 1) ? mBackgroundDrakValue : DEFAULT_ALPHA;</span><br><span class="line">            mWindow = activity.getWindow();</span><br><span class="line">            WindowManager.LayoutParams params = mWindow.getAttributes();</span><br><span class="line">            params.alpha = alpha;</span><br><span class="line">            mWindow.setAttributes(params);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        if(mWidth != 0 &amp;&amp; mHeight!=0 )&#123;</span><br><span class="line">            mPopupWindow = new PopupWindow(mContentView,mWidth,mHeight);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            mPopupWindow = new PopupWindow(mContentView, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class="line">        &#125;</span><br><span class="line">        if(mAnimationStyle!=-1)&#123;</span><br><span class="line">            mPopupWindow.setAnimationStyle(mAnimationStyle);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        apply(mPopupWindow);//设置一些属性</span><br><span class="line"></span><br><span class="line">        mPopupWindow.setFocusable(mIsFocusable);</span><br><span class="line">        mPopupWindow.setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));</span><br><span class="line">        mPopupWindow.setOutsideTouchable(mIsOutside);</span><br><span class="line"></span><br><span class="line">        if(mWidth == 0 || mHeight == 0)&#123;</span><br><span class="line">            mPopupWindow.getContentView().measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);</span><br><span class="line">            //如果外面没有设置宽高的情况下，计算宽高并赋值</span><br><span class="line">            mWidth = mPopupWindow.getContentView().getMeasuredWidth();</span><br><span class="line">            mHeight = mPopupWindow.getContentView().getMeasuredHeight();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        // 添加dissmiss 监听</span><br><span class="line">        mPopupWindow.setOnDismissListener(this);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        mPopupWindow.update();</span><br><span class="line"></span><br><span class="line">        return mPopupWindow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onDismiss() &#123;</span><br><span class="line">        dissmiss();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 关闭popWindow</span><br><span class="line">     */</span><br><span class="line">    public void dissmiss()&#123;</span><br><span class="line"></span><br><span class="line">        if(mOnDismissListener!=null)&#123;</span><br><span class="line">            mOnDismissListener.onDismiss();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        //如果设置了背景变暗，那么在dissmiss的时候需要还原</span><br><span class="line">        if(mWindow!=null)&#123;</span><br><span class="line">            WindowManager.LayoutParams params = mWindow.getAttributes();</span><br><span class="line">            params.alpha = 1.0f;</span><br><span class="line">            mWindow.setAttributes(params);</span><br><span class="line">        &#125;</span><br><span class="line">        if(mPopupWindow!=null &amp;&amp; mPopupWindow.isShowing())&#123;</span><br><span class="line">            mPopupWindow.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static class PopupWindowBuilder&#123;</span><br><span class="line">        private CustomPopWindow mCustomPopWindow;</span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder(Context context)&#123;</span><br><span class="line">            mCustomPopWindow = new CustomPopWindow(context);</span><br><span class="line">        &#125;</span><br><span class="line">        public PopupWindowBuilder size(int width,int height)&#123;</span><br><span class="line">            mCustomPopWindow.mWidth = width;</span><br><span class="line">            mCustomPopWindow.mHeight = height;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setFocusable(boolean focusable)&#123;</span><br><span class="line">            mCustomPopWindow.mIsFocusable = focusable;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setView(int resLayoutId)&#123;</span><br><span class="line">            mCustomPopWindow.mResLayoutId = resLayoutId;</span><br><span class="line">            mCustomPopWindow.mContentView = null;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setView(View view)&#123;</span><br><span class="line">            mCustomPopWindow.mContentView = view;</span><br><span class="line">            mCustomPopWindow.mResLayoutId = -1;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setOutsideTouchable(boolean outsideTouchable)&#123;</span><br><span class="line">            mCustomPopWindow.mIsOutside = outsideTouchable;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 设置弹窗动画</span><br><span class="line">         * @param animationStyle</span><br><span class="line">         * @return</span><br><span class="line">         */</span><br><span class="line">        public PopupWindowBuilder setAnimationStyle(int animationStyle)&#123;</span><br><span class="line">            mCustomPopWindow.mAnimationStyle = animationStyle;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setClippingEnable(boolean enable)&#123;</span><br><span class="line">            mCustomPopWindow.mClippEnable =enable;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setIgnoreCheekPress(boolean ignoreCheekPress)&#123;</span><br><span class="line">            mCustomPopWindow.mIgnoreCheekPress = ignoreCheekPress;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setInputMethodMode(int mode)&#123;</span><br><span class="line">            mCustomPopWindow.mInputMode = mode;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setOnDissmissListener(PopupWindow.OnDismissListener onDissmissListener)&#123;</span><br><span class="line">            mCustomPopWindow.mOnDismissListener = onDissmissListener;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setSoftInputMode(int softInputMode)&#123;</span><br><span class="line">            mCustomPopWindow.mSoftInputMode = softInputMode;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setTouchable(boolean touchable)&#123;</span><br><span class="line">            mCustomPopWindow.mTouchable = touchable;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        public PopupWindowBuilder setTouchIntercepter(View.OnTouchListener touchIntercepter)&#123;</span><br><span class="line">            mCustomPopWindow.mOnTouchListener = touchIntercepter;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 设置背景变暗是否可用</span><br><span class="line">         * @param isDark</span><br><span class="line">         * @return</span><br><span class="line">         */</span><br><span class="line">        public PopupWindowBuilder enableBackgroundDark(boolean isDark)&#123;</span><br><span class="line">            mCustomPopWindow.mIsBackgroundDark = isDark;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        /**</span><br><span class="line">         * 设置北京变暗的值</span><br><span class="line">         * @param darkValue</span><br><span class="line">         * @return</span><br><span class="line">         */</span><br><span class="line">        public PopupWindowBuilder setBgDarkAlpha(float darkValue)&#123;</span><br><span class="line">            mCustomPopWindow.mBackgroundDrakValue = darkValue;</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        public CustomPopWindow create()&#123;</span><br><span class="line">            //构建PopWindow</span><br><span class="line">            mCustomPopWindow.build();</span><br><span class="line">            return mCustomPopWindow;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="实际使用"><a href="#实际使用" class="headerlink" title="实际使用"></a>实际使用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br></pre></td><td class="code"><pre><span class="line">public class ReadMineActivity extends BaseActivity &#123;</span><br><span class="line"></span><br><span class="line">    CustomPopWindow mCustomPopWindow;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Dialog dateDialog, timeDialog;</span><br><span class="line"></span><br><span class="line">    final popupwindow p = new popupwindow();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    class popupwindow &#123;</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.is_switch)</span><br><span class="line">        SwitchCompat is_switch;//是否重复</span><br><span class="line">        @BindView(R.id.set_dataandtime)</span><br><span class="line">        LinearLayout setDateAndTimeLL;//选择日期时间菜单</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.set_dataandtime_detail)</span><br><span class="line">        LinearLayout setDateAndTimeDetailLL;//选择日期时间</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.set_time)</span><br><span class="line">        LinearLayout setTimeLL;</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.set_time_detail)</span><br><span class="line">        LinearLayout setTimeDetailLL;</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.data_text)</span><br><span class="line">        TextView dateText;//日期</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.time1)</span><br><span class="line">        TextView time1;//time</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.time2)</span><br><span class="line">        TextView time2;//time</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.day1)</span><br><span class="line">        CheckBox day1;</span><br><span class="line">        @BindView(R.id.day2)</span><br><span class="line">        CheckBox day2;</span><br><span class="line">        @BindView(R.id.day3)</span><br><span class="line">        CheckBox day3;</span><br><span class="line">        @BindView(R.id.day4)</span><br><span class="line">        CheckBox day4;</span><br><span class="line">        @BindView(R.id.day5)</span><br><span class="line">        CheckBox day5;</span><br><span class="line">        @BindView(R.id.day6)</span><br><span class="line">        CheckBox day6;</span><br><span class="line">        @BindView(R.id.day7)</span><br><span class="line">        CheckBox day7;</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.add_readmine_submit)</span><br><span class="line">        TextView submit;</span><br><span class="line"></span><br><span class="line">        @BindView(R.id.readmine_message_edit)</span><br><span class="line">        EditText message;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @BindView(R.id.bind_newreadmie_ll)</span><br><span class="line">    LinearLayout bindNewReadMineLL;</span><br><span class="line"></span><br><span class="line">    @BindView(R.id.recyclerView)</span><br><span class="line">    RecyclerView mRecyclerView;</span><br><span class="line"></span><br><span class="line">    MultiTypeAdapter mAdapter;</span><br><span class="line">    Items items = new Items();</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onCreate(Bundle savedInstanceState) &#123;</span><br><span class="line">        super.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_read_mine);</span><br><span class="line">        ButterKnife.bind(this);</span><br><span class="line">        initView();</span><br><span class="line">        setListener();</span><br><span class="line">        initData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void initData() &#123;</span><br><span class="line">        for (int i = 0; i &lt;25 ; i++) &#123;</span><br><span class="line">            ReadmineItem item = new ReadmineItem();</span><br><span class="line">            items.add(item);</span><br><span class="line">        &#125;</span><br><span class="line">        mAdapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void setListener() &#123;</span><br><span class="line">        bindNewReadMineLL.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                mCustomPopWindow.showAsDropDown(bindNewReadMineLL, 0, 20);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void initView() &#123;</span><br><span class="line">        //=======================================mCustomPopWindow============================================//</span><br><span class="line">        View contentView = LayoutInflater.from(getActivity()).inflate(R.layout.popwindow_add_readmine, null);</span><br><span class="line">        //处理popWindow 显示内容</span><br><span class="line">        handleLogic(contentView);</span><br><span class="line">        //创建并显示popWindow</span><br><span class="line">        mCustomPopWindow = new CustomPopWindow.PopupWindowBuilder(getActivity())</span><br><span class="line">                .setView(contentView)</span><br><span class="line">                .size(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)</span><br><span class="line">                .enableBackgroundDark(false) //弹出popWindow时，背景是否变暗</span><br><span class="line">                .setBgDarkAlpha(0.7f) // 控制亮度</span><br><span class="line">                .setOnDissmissListener(new PopupWindow.OnDismissListener() &#123;</span><br><span class="line">                    @Override</span><br><span class="line">                    public void onDismiss() &#123;</span><br><span class="line">                        Log.e(&quot;TAG&quot;, &quot;onDismiss&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .create();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        //=======================================recyclerView============================================//</span><br><span class="line">        mRecyclerView.setLayoutManager(new WrapContentLinearLayoutManager(getActivity()));</span><br><span class="line">        mAdapter = new MultiTypeAdapter();</span><br><span class="line">        mAdapter.register(ReadmineItem.class, new ReadmineItemViewBinder());</span><br><span class="line">        mAdapter.setItems(items);</span><br><span class="line">        mRecyclerView.setAdapter(mAdapter);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void handleLogic(View contentView) &#123;</span><br><span class="line"></span><br><span class="line">        ButterKnife.bind(p, contentView);</span><br><span class="line"></span><br><span class="line">        p.dateText.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                showDateDialog(DateUtil.getDateForString(p.dateText.getText().toString()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        p.time1.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                showTimeDialog();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        p.time2.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                showTimeDialog();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        p.setTimeLL.setVisibility(View.GONE);</span><br><span class="line">        p.setTimeDetailLL.setVisibility(View.GONE);</span><br><span class="line">        p.is_switch.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) &#123;</span><br><span class="line">                if (isChecked) &#123;</span><br><span class="line">                    p.setDateAndTimeLL.setVisibility(View.GONE);</span><br><span class="line">                    p.setDateAndTimeDetailLL.setVisibility(View.GONE);</span><br><span class="line">                    p.setTimeLL.setVisibility(View.VISIBLE);</span><br><span class="line">                    p.setTimeDetailLL.setVisibility(View.VISIBLE);</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    p.setDateAndTimeLL.setVisibility(View.VISIBLE);</span><br><span class="line">                    p.setDateAndTimeDetailLL.setVisibility(View.VISIBLE);</span><br><span class="line">                    p.setTimeLL.setVisibility(View.GONE);</span><br><span class="line">                    p.setTimeDetailLL.setVisibility(View.GONE);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        p.submit.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                T.showShort(getActivity(),p.dateText.getText().toString()+p.time1.getText().toString()+p.day1.isChecked()+p.message.getText().toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void showTimeDialog() &#123;</span><br><span class="line">        if (timeDialog == null) &#123;</span><br><span class="line"></span><br><span class="line">            TimePickerDialog.Builder builder = new TimePickerDialog.Builder(this);</span><br><span class="line">            timeDialog = builder.setOnTimeSelectedListener(new TimePickerDialog.OnTimeSelectedListener() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                public void onTimeSelected(int[] times) &#123;</span><br><span class="line"></span><br><span class="line">                    p.time1.setText(times[0] + &quot;:&quot; + times[1]);</span><br><span class="line">                    p.time2.setText(times[0] + &quot;:&quot; + times[1]);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).create();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        timeDialog.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void showDateDialog(List&lt;Integer&gt; date) &#123;</span><br><span class="line"></span><br><span class="line">        //==============================DatePickerDialog===================================//</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        if (dateDialog==null)&#123;</span><br><span class="line">            DatePickerDialog.Builder Datebuilder = new DatePickerDialog.Builder(this);</span><br><span class="line">            dateDialog=Datebuilder.setOnDateSelectedListener(new DatePickerDialog.OnDateSelectedListener() &#123;</span><br><span class="line">                @Override</span><br><span class="line">                public void onDateSelected(int[] dates) &#123;</span><br><span class="line"></span><br><span class="line">                    p.dateText.setText(dates[0] + &quot;-&quot; + (dates[1] &gt; 9 ? dates[1] : (&quot;0&quot; + dates[1])) + &quot;-&quot;</span><br><span class="line">                            + (dates[2] &gt; 9 ? dates[2] : (&quot;0&quot; + dates[2])));</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                @Override</span><br><span class="line">                public void onCancel() &#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).setSelectYear(date.get(0) - 1)</span><br><span class="line">                    .setSelectMonth(date.get(1) - 1)</span><br><span class="line">                    .setSelectDay(date.get(2) - 1)</span><br><span class="line">                    .setMaxYear(DateUtil.getYear())</span><br><span class="line">                    .setMaxMonth(DateUtil.getDateForString(DateUtil.getToday()).get(1))</span><br><span class="line">                    .setMaxDay(DateUtil.getDateForString(DateUtil.getToday()).get(2)).create();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        dateDialog.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/39434013.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;一个封装封装类&quot;&gt;&lt;a href=&quot;#一个封装封装类&quot; class=&quot;headerlink&quot; title=&quot;一个封装封装类&quot;&gt;&lt;/a&gt;一个封装封装类&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=
      
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>Recycleview Mutitype的使用</title>
    <link href="http://mzeht.com/2017/05/04/2017-05-05-2/"/>
    <id>http://mzeht.com/2017/05/04/2017-05-05-2/</id>
    <published>2017-05-04T15:50:16.000Z</published>
    <updated>2019-04-30T20:33:51.256Z</updated>
    
    <content type="html"><![CDATA[<p>安利一波<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">compile(&apos;me.drakeet.multitype:multitype:2.5.0&apos;, &#123;</span><br><span class="line">       exclude group: &apos;com.android.support&apos;</span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure></p><p>基本文档github主页写的较好</p><p>基本使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public class EmptyDataViewProvider extends ItemViewBinder&lt;EmptyData,EmptyDataViewProvider.ViewHolder&gt;&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @NonNull</span><br><span class="line">    @Override</span><br><span class="line">    protected ViewHolder onCreateViewHolder(@NonNull LayoutInflater inflater, @NonNull ViewGroup parent) &#123;</span><br><span class="line">        return new ViewHolder(inflater.inflate(R.layout.bm_list_empty_view,parent,false));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onBindViewHolder(@NonNull ViewHolder holder, @NonNull EmptyData item) &#123;</span><br><span class="line">        if (TextUtils.isEmpty(item.getMessage()))&#123;</span><br><span class="line">        holder.messageTextView.setText(&quot;你来到一片荒芜之地, 空空如也, 什么都没有\\n实在是太冷清了╮(╯_╰)╭&quot;);</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            holder.messageTextView.setText(item.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static class ViewHolder extends RecyclerView.ViewHolder &#123;</span><br><span class="line">        private TextView messageTextView;</span><br><span class="line"></span><br><span class="line">        public ViewHolder(View itemView) &#123;</span><br><span class="line">            super(itemView);</span><br><span class="line">            this.messageTextView = (TextView) itemView.findViewById(R.id.bm_empty_text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mRecyclerView.setLayoutManager(new LinearLayoutManager(getActivity()));</span><br><span class="line">       mAdapter = new MultiTypeAdapter();</span><br><span class="line">       mAdapter.register(EmptyData.class,new EmptyDataViewProvider());</span><br><span class="line">       mAdapter.register(SendExpressOrder.class,new OrderViewProvider(new OrderViewProvider.OnItemClickListener() &#123;</span><br><span class="line">           @Override</span><br><span class="line">           public void onItemClick(View view, int position, SendExpressOrder order) &#123;</span><br><span class="line">               Intent intent=new Intent();</span><br><span class="line">               intent.setClass(getActivity(), JijianSearchDetailActivity.class);</span><br><span class="line">               intent.putExtra(&quot;order&quot;, order);</span><br><span class="line">               startActivity(intent);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;));</span><br><span class="line">       mRecyclerView.setAdapter(mAdapter);</span><br><span class="line">       mSwipeRefreshLayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() &#123;</span><br><span class="line">           @Override</span><br><span class="line">           public void onRefresh() &#123;</span><br><span class="line">               new Handler().postDelayed(new Runnable() &#123;</span><br><span class="line">                   @Override</span><br><span class="line">                   public void run() &#123;</span><br><span class="line">                       searchData();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;, 1000);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure><h3 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h3><p>针对LinearLayoutManager</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">public abstract class OnLoadMoreListener extends RecyclerView.OnScrollListener&#123;</span><br><span class="line">    private LinearLayoutManager layoutManager;</span><br><span class="line">    private int itemCount, lastPosition, lastItemCount;</span><br><span class="line"></span><br><span class="line">    public abstract void onLoadMore();</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public void onScrolled(RecyclerView recyclerView, int dx, int dy) &#123;</span><br><span class="line">        if (recyclerView.getLayoutManager() instanceof LinearLayoutManager) &#123;</span><br><span class="line">            layoutManager = (LinearLayoutManager) recyclerView.getLayoutManager();</span><br><span class="line"></span><br><span class="line">            itemCount = layoutManager.getItemCount();</span><br><span class="line">            lastPosition = layoutManager.findLastCompletelyVisibleItemPosition();</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            L.e(&quot;OnLoadMoreListener&quot;, &quot;The OnLoadMoreListener only support LinearLayoutManager&quot;);</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        if ( lastPosition == itemCount - 1) &#123;</span><br><span class="line">            lastItemCount = itemCount;</span><br><span class="line">            this.onLoadMore();</span><br><span class="line">        &#125;</span><br><span class="line">        L.d(&quot;itemCount&quot;,itemCount+&quot;&quot;);</span><br><span class="line">        L.d(&quot;lastPosition&quot;,lastPosition+&quot;&quot;);</span><br><span class="line">        L.d(&quot;lastItemCount&quot;,lastItemCount+&quot;&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>暴露子视图接口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">public class PayMentTempLateProvider extends ItemViewBinder&lt;PayMentTempLatePO,PayMentTempLateProvider.ViewHolder&gt; &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public PayMentTempLateProvider(OnItemClickListener onItemClickListener) &#123;</span><br><span class="line">        this.mOnItemClickListener=onItemClickListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public interface OnItemClickListener&#123;</span><br><span class="line">        void onItemClick(View view,int position,PayMentTempLatePO payMentTempLatePO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private OnItemClickListener mOnItemClickListener;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @NonNull</span><br><span class="line">    @Override</span><br><span class="line">    protected ViewHolder onCreateViewHolder(@NonNull LayoutInflater inflater, @NonNull ViewGroup parent) &#123;</span><br><span class="line">        return new ViewHolder(inflater.inflate(R.layout.item_express_template,parent,false));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onBindViewHolder(@NonNull ViewHolder holder, @NonNull PayMentTempLatePO item) &#123;</span><br><span class="line">        holder.templateName_tv.setText(item.getTemplateName());</span><br><span class="line">        holder.templatCode.setText(item.getTemplateCode());</span><br><span class="line">        holder.itemView.setOnClickListener(new View.OnClickListener() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void onClick(View v) &#123;</span><br><span class="line">                mOnItemClickListener.onItemClick(holder.itemView,holder.getLayoutPosition(),item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    class ViewHolder extends RecyclerView.ViewHolder &#123;</span><br><span class="line">        private TextView templateName_tv;</span><br><span class="line">        private TextView templatCode;</span><br><span class="line">        public ViewHolder(View itemView) &#123;</span><br><span class="line">            super(itemView);</span><br><span class="line">            templateName_tv = (TextView) itemView.findViewById(R.id.templateName);</span><br><span class="line">            templatCode = (TextView) itemView.findViewById(R.id.templateCode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>更新ui</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">@Override</span><br><span class="line">                   public void onCompleted() &#123;</span><br><span class="line">                       QujianFragment.getInstance().setWeiquItemText(count);</span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">                   @Override</span><br><span class="line">                   public void onError(Throwable e) &#123;</span><br><span class="line">                       L.e(e.getMessage());</span><br><span class="line">                       if (mSwipeRefreshLayout.isRefreshing()) &#123;</span><br><span class="line">                           mSwipeRefreshLayout.setRefreshing(false);</span><br><span class="line">                       &#125;</span><br><span class="line">                       Items items = new Items();</span><br><span class="line">                       items.add(new EmptyData(&quot;请求失败&quot;));</span><br><span class="line">                       adapter.setItems(items);</span><br><span class="line">                       adapter.notifyDataSetChanged();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">                   @Override</span><br><span class="line">                   public void onNext(ApiPagesResult&lt;SendExpressOrder&gt; listApiResult) &#123;</span><br><span class="line">                       if (mSwipeRefreshLayout.isRefreshing()) &#123;</span><br><span class="line">                           mSwipeRefreshLayout.setRefreshing(false);</span><br><span class="line">                       &#125;</span><br><span class="line">                       mRecyclerView.scrollToPosition(0);</span><br><span class="line">                       if (listApiResult.getFlag().equals(&quot;1&quot;)) &#123;</span><br><span class="line">                           Items items = new Items();</span><br><span class="line">                           if (listApiResult.getContent().getCount() == 0) &#123;</span><br><span class="line">                               items.add(new EmptyData());</span><br><span class="line">                           &#125; else &#123;</span><br><span class="line">                               items.addAll(listApiResult.getContent().getContent());</span><br><span class="line">                               count = listApiResult.getContent().getCount();</span><br><span class="line"></span><br><span class="line">                           &#125;</span><br><span class="line"></span><br><span class="line">                           adapter.setItems(items);</span><br><span class="line">                           adapter.notifyDataSetChanged();</span><br><span class="line"></span><br><span class="line">                       &#125;</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安利一波&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;
      
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
      <category term="multitype" scheme="http://mzeht.com/tags/multitype/"/>
    
  </entry>
  
  <entry>
    <title>重构到springboot注意事项</title>
    <link href="http://mzeht.com/2017/05/03/2017-05-05-1/"/>
    <id>http://mzeht.com/2017/05/03/2017-05-05-1/</id>
    <published>2017-05-03T13:47:33.000Z</published>
    <updated>2019-04-30T20:33:51.256Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>旧web项目没有采用maven管理依赖包，jsp页面，xml配置环境，mybatis数据库交互，现在改造为springboot项目，最终打包为war包，java命令直接启动，不依赖tomcat容器</p><p>开发环境 idea</p><p>###idea新建springboot项目<br>选择web支持</p><p>生成的项目src／main下有java，resource两个文件夹</p><p>新建第三个文件夹webapp，和之上两个同级，最终<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-5/36622722-file_1493976502014_16cc0.png" alt></p><h3 id="jsp依赖配置（同时适配本地运行和打包）"><a href="#jsp依赖配置（同时适配本地运行和打包）" class="headerlink" title="jsp依赖配置（同时适配本地运行和打包）"></a>jsp依赖配置（同时适配本地运行和打包）</h3><p>注意有些依赖改为<code>&lt;scope&gt;compile&lt;/scope&gt;</code>， 参考maven的scope解释(test,runtime,provide,complie)<br>这样通过idea的application或者打包都不会有问题</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-tomcat&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;compile&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;test&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">            &lt;groupId&gt;javax.servlet&lt;/groupId&gt;</span><br><span class="line">            &lt;artifactId&gt;jstl&lt;/artifactId&gt;</span><br><span class="line">        &lt;/dependency&gt;</span><br><span class="line">&lt;!--用于编译jsp--&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.apache.tomcat.embed&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;tomcat-embed-jasper&lt;/artifactId&gt;</span><br><span class="line">&lt;scope&gt;compile&lt;/scope&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>jsp映射路径</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  profiles: dev</span><br><span class="line">  mvc:</span><br><span class="line">    view:</span><br><span class="line">      prefix: /WEB-INF/jsp/</span><br><span class="line">      suffix: .jsp</span><br></pre></td></tr></table></figure><h3 id="serverlet支持"><a href="#serverlet支持" class="headerlink" title="serverlet支持"></a>serverlet支持</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">@SpringBootApplication</span><br><span class="line">public class BootlabbookmanagerApplication  extends SpringBootServletInitializer&#123;</span><br><span class="line"> @Override</span><br><span class="line">    protected SpringApplicationBuilder configure(SpringApplicationBuilder application) &#123;</span><br><span class="line">        return application.sources(BootlabbookmanagerApplication.class);</span><br><span class="line">    &#125;</span><br><span class="line">.......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###拦截器，资源映射，</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">@Configuration</span><br><span class="line">@Component</span><br><span class="line">public class WebMVCConfig extends WebMvcConfigurerAdapter</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Bean</span><br><span class="line">    public HandlerInterceptor getLoginInterceptor()&#123;</span><br><span class="line">        return new LoginInterceptor();</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     *  * &lt;mvc:mapping path=&quot;/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:exclude-mapping path=&quot;/assets/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:exclude-mapping path=&quot;/images/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:exclude-mapping path=&quot;/upload/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:exclude-mapping path=&quot;/login/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:exclude-mapping path=&quot;/register/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:exclude-mapping path=&quot;/forgetPassword/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:exclude-mapping path=&quot;/check/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:exclude-mapping path=&quot;/exists/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:exclude-mapping path=&quot;/code/**&quot; /&gt;</span><br><span class="line">     * @param registry</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public void addInterceptors(InterceptorRegistry registry) &#123;</span><br><span class="line">        registry.addInterceptor(getLoginInterceptor()).addPathPatterns(&quot;/**&quot;);</span><br><span class="line">        registry.addInterceptor(getLoginInterceptor()).excludePathPatterns(&quot;/assets/**&quot;,&quot;/images/**&quot;,&quot;/upload/**&quot;,&quot;/login/**&quot;,&quot;/register/**&quot;,&quot;/forgetPassword/**&quot;,&quot;/check/**&quot;,&quot;/exists/**&quot;,&quot;/code/**&quot;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * &lt;mvc:resources location=&quot;/WEB-INF/assets/&quot; mapping=&quot;/assets/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:resources location=&quot;/WEB-INF/images/&quot; mapping=&quot;/images/**&quot; /&gt;</span><br><span class="line">     &lt;mvc:resources location=&quot;/upload/&quot; mapping=&quot;/upload/**&quot; /&gt;</span><br><span class="line">     * @param registry</span><br><span class="line">     */</span><br><span class="line">    @Override</span><br><span class="line">    public void addResourceHandlers(ResourceHandlerRegistry registry) &#123;</span><br><span class="line">        registry.addResourceHandler(&quot;/assets/**&quot;).addResourceLocations(&quot;classpath:/WEB-INF/assets/&quot;);</span><br><span class="line">        registry.addResourceHandler(&quot;/images/**&quot;).addResourceLocations(&quot;classpath:/WEB-INF/images/&quot;);</span><br><span class="line">        registry.addResourceHandler(&quot;/upload/**&quot;).addResourceLocations(&quot;classpath:/upload&quot;);</span><br><span class="line">        super.addResourceHandlers(registry);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>注释对象旧web项目中的设置，注意拦截器之中引用service或其他需要注入的变量时</p><p>配置拦截器不能写成以下形式</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@Override</span><br><span class="line">    public void addInterceptors(InterceptorRegistry registry) &#123;</span><br><span class="line">        registry.addInterceptor(new LoginInterceptor().addPathPatterns(&quot;/**&quot;);</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>必须要提前注入，否则LoginInterceptor中变量注入失败</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">@Bean</span><br><span class="line">   public HandlerInterceptor getLoginInterceptor()&#123;</span><br><span class="line">       return new LoginInterceptor();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h3 id="默认error页面"><a href="#默认error页面" class="headerlink" title="默认error页面"></a>默认error页面</h3><p>Application中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> @Bean</span><br><span class="line">    public EmbeddedServletContainerCustomizer containerCustomizer() &#123;</span><br><span class="line"></span><br><span class="line">        return new EmbeddedServletContainerCustomizer() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public void customize(ConfigurableEmbeddedServletContainer container) &#123;</span><br><span class="line"></span><br><span class="line">//                ErrorPage error401Page = new ErrorPage(HttpStatus.UNAUTHORIZED, &quot;/401.html&quot;);</span><br><span class="line">                ErrorPage error404Page = new ErrorPage(HttpStatus.NOT_FOUND, &quot;/error&quot;);</span><br><span class="line">//                ErrorPage error500Page = new ErrorPage(HttpStatus.INTERNAL_SERVER_ERROR, &quot;/500.html&quot;);</span><br><span class="line"></span><br><span class="line">                container.addErrorPages( error404Page);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="全局错误处理"><a href="#全局错误处理" class="headerlink" title="全局错误处理"></a>全局错误处理</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">@ControllerAdvice</span><br><span class="line">public class GlobalExceptionHandler &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public static final String DEFAULT_ERROR_VIEW = &quot;error&quot;;</span><br><span class="line">    public static final String DEFAULT_NOT_LOG = &quot;login&quot;;</span><br><span class="line">    public static final String DEFAULT_INDEX = &quot;index&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @ExceptionHandler(value = UserNotLoginException.class)</span><br><span class="line">    public ModelAndView defaultErrorHandler(HttpServletRequest req, Exception e) throws Exception &#123;</span><br><span class="line">        ModelAndView mav = new ModelAndView();</span><br><span class="line">        mav.setViewName(DEFAULT_NOT_LOG);</span><br><span class="line">        return mav;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>数据库源，mybatis，redis之类的就很常规了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;p&gt;旧web项目没有采用maven管理依赖包，jsp页面，xml配置环境，mybatis数据库交互，现在改造为springboot项目，最终打包
      
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
      <category term="springboot" scheme="http://mzeht.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>老式web项目重构springboot帮助文档</title>
    <link href="http://mzeht.com/2017/05/03/2017-05-05/"/>
    <id>http://mzeht.com/2017/05/03/2017-05-05/</id>
    <published>2017-05-03T12:47:33.000Z</published>
    <updated>2019-04-30T20:33:51.256Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ol><li>采用springboot 1.5.3 重构现有项目</li><li>配置文件精简，提高开发效率</li><li>maven管理依赖包</li><li>注解代替xml</li></ol><h2 id="如何启动"><a href="#如何启动" class="headerlink" title="如何启动"></a>如何启动</h2><p>开发时idea<br><code>BootlabbookmanagerApplication</code>文件右侧绿色三角形，启动即可</p><h2 id="如何打包发布"><a href="#如何打包发布" class="headerlink" title="如何打包发布"></a>如何打包发布</h2><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>本地需要安装maven，添加环境变量<br>项目根目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean &amp;&amp; mvn package -Dmaven.test.skip</span><br></pre></td></tr></table></figure><p>在target目录下生成<br><code>bootlabbookmanager-0.0.1-SNAPSHOT.war</code></p><h3 id="前台运行"><a href="#前台运行" class="headerlink" title="前台运行"></a>前台运行</h3><p>前台启动（命令行启动，退出命令行，进程跟着退出）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br></pre></td></tr></table></figure><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>后台运行（命令行关闭后进程仍在，发布到服务器上用）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar  bootlabbookmanager-0.0.1-SNAPSHOT.war &amp;</span><br></pre></td></tr></table></figure><h3 id="重新发布"><a href="#重新发布" class="headerlink" title="重新发布"></a>重新发布</h3><p>查找旧进程并kill</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  target git:(master) ✗ ps -ef|grep bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">  501  3524  2794   0 12:25上午 ttys000    0:32.90 /usr/bin/java -jar bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">  501  3536  2794   0 12:25上午 ttys000    0:00.00 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">➜  target git:(master) ✗ kill 3524</span><br><span class="line">➜  target git:(master) ✗ </span><br><span class="line">[1]  + 3524 exit 143   nohup java -jar bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">➜  target git:(master) ✗ ps -ef|grep bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">  501  3580  2794   0 12:27上午 ttys000    0:00.00 grep --color=auto --exclude-dir=.bzr --exclude-dir=CVS --exclude-dir=.git --exclude-dir=.hg --exclude-dir=.svn bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">➜  target git:(master) ✗</span><br></pre></td></tr></table></figure><p>然后替换war包 后台启动新war包</p><h2 id="改造概述"><a href="#改造概述" class="headerlink" title="改造概述"></a>改造概述</h2><p>推荐两本书，电子版／实体<br><code>springboot实战</code><br><code>spring实战第四版</code></p><p>点到即止，零碎知识点可以以下方式查阅资料<br>推荐</p><ol><li><code>简书</code> 很多很好的spring文章和系列博客</li><li><code>stackoverflow</code> </li><li>springboot的官方<code>github</code> 本身就有很多示例了</li></ol><h3 id="添加jsp支持"><a href="#添加jsp支持" class="headerlink" title="添加jsp支持"></a>添加jsp支持</h3><ol><li>Application继承<code>SpringBootServletInitializer</code></li><li>pom文件添加jsp支持，servlet，标签，tomcat等等</li><li>view解析规则配置</li></ol><h3 id="登录拦截器"><a href="#登录拦截器" class="headerlink" title="登录拦截器"></a>登录拦截器</h3><p>见<code>WebMvcConfigurerAdapter</code>–》<code>addInterceptors</code></p><h3 id="资源映射"><a href="#资源映射" class="headerlink" title="资源映射"></a>资源映射</h3><p>见<code>WebMvcConfigurerAdapter</code>–》<code>addResourceHandlers</code></p><h3 id="UserNotLoginException-处理"><a href="#UserNotLoginException-处理" class="headerlink" title="UserNotLoginException 处理"></a>UserNotLoginException 处理</h3><p>见<code>GlobalExceptionHandler</code>–》<code>defaultErrorHandler</code></p><h3 id="全局错误页面处理"><a href="#全局错误页面处理" class="headerlink" title="全局错误页面处理"></a>全局错误页面处理</h3><p>见<code>BootlabbookmanagerApplication</code>–》<br><code>EmbeddedServletContainerCustomizer</code></p><h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><p>阿里开源druid数据库连接池<br>见<code>LabBookDBConfig</code>，时间问题，未启用数据库连接加密，但加入了监控页面<br>访问<code>http://localhost:8080/druid</code><br>yml文件中找到用户名，密码 登录<br>可查看sql监控，访问，servlet监控</p><p>注意：<code>ApplyPurchaseMapper</code>之类文件要添加注解</p><h3 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h3><p>见<code>log4j.xml</code></p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol><li>Service 相关类都要<code>@Service</code>注解</li><li><code>@Autowired</code>一般直接标注在变量上，不用set</li><li><code>application.yml</code>可以定义常量</li><li>有兴趣可以用jenkins配置自动发布</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;采用springboot 1.5.3 重构现有项目&lt;/li&gt;
&lt;li&gt;配置文件精简，提高开发效率&lt;/li&gt;
&lt;li&gt;maven管
      
    
    </summary>
    
      <category term="后端开发" scheme="http://mzeht.com/categories/bg/"/>
    
      <category term="java" scheme="http://mzeht.com/categories/bg/java/"/>
    
    
      <category term="springboot" scheme="http://mzeht.com/tags/springboot/"/>
    
  </entry>
  
  <entry>
    <title>android ndk开发检查包名，签名</title>
    <link href="http://mzeht.com/2017/04/28/2017-04-28-2/"/>
    <id>http://mzeht.com/2017/04/28/2017-04-28-2/</id>
    <published>2017-04-28T06:53:01.000Z</published>
    <updated>2019-04-30T20:33:51.256Z</updated>
    
    <content type="html"><![CDATA[<p>java层传入app的Context，ndk内检查包名和签名特征</p><h2 id="java-native-方法"><a href="#java-native-方法" class="headerlink" title="java native 方法"></a>java native 方法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">public static native String getSignIfo(Context context);</span><br></pre></td></tr></table></figure><h2 id="c语言调用"><a href="#c语言调用" class="headerlink" title="c语言调用"></a>c语言调用</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line">Java_com_example_hehe_utils_StringUtils_getSignIfo(JNIEnv *env, jclass type, jobject obj) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // 获得Context类</span><br><span class="line">    jclass cls = (*env)-&gt;GetObjectClass(env, obj);</span><br><span class="line">    // 得到getPackageManager方法的ID</span><br><span class="line">    jmethodID mid = (*env)-&gt;GetMethodID(env, cls, &quot;getPackageManager&quot;, &quot;()Landroid/content/pm/PackageManager;&quot;);</span><br><span class="line"></span><br><span class="line">    // 获得应用包的管理器</span><br><span class="line">    jobject pm = (*env)-&gt;CallObjectMethod(env, obj, mid);</span><br><span class="line"></span><br><span class="line">    // 得到getPackageName方法的ID</span><br><span class="line">    mid = (*env)-&gt;GetMethodID(env, cls, &quot;getPackageName&quot;, &quot;()Ljava/lang/String;&quot;);</span><br><span class="line">    // 获得当前应用包名</span><br><span class="line">    jstring packageName = (jstring)(*env)-&gt;CallObjectMethod(env, obj, mid);</span><br><span class="line"></span><br><span class="line">//    printf(&quot;%s&quot;,packageName);</span><br><span class="line">//    const jbyte *str = (*env)-&gt;GetStringUTFChars(env, packageName, NULL);</span><br><span class="line">//    __android_log_print(ANDROID_LOG_INFO, &quot;JNITag&quot;,&quot;string From Java To C : %s&quot;, str);</span><br><span class="line"></span><br><span class="line">    // 获得PackageManager类</span><br><span class="line">    cls = (*env)-&gt;GetObjectClass(env, pm);</span><br><span class="line">    // 得到getPackageInfo方法的ID</span><br><span class="line">    mid  = (*env)-&gt;GetMethodID(env, cls, &quot;getPackageInfo&quot;, &quot;(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;&quot;);</span><br><span class="line">    // 获得应用包的信息</span><br><span class="line">    jobject packageInfo = (*env)-&gt;CallObjectMethod(env, pm, mid, packageName, 0x40); //GET_SIGNATURES = 64;</span><br><span class="line">    // 获得PackageInfo 类</span><br><span class="line">    cls = (*env)-&gt;GetObjectClass(env, packageInfo);</span><br><span class="line">    // 获得签名数组属性的ID</span><br><span class="line">    jfieldID fid = (*env)-&gt;GetFieldID(env, cls, &quot;signatures&quot;, &quot;[Landroid/content/pm/Signature;&quot;);</span><br><span class="line">    // 得到签名数组</span><br><span class="line">    jobjectArray signatures = (jobjectArray)(*env)-&gt;GetObjectField(env, packageInfo, fid);</span><br><span class="line">    // 得到签名</span><br><span class="line">    jobject sign = (*env)-&gt;GetObjectArrayElement(env, signatures, 0);</span><br><span class="line"></span><br><span class="line">    // 获得Signature类</span><br><span class="line">    cls = (*env)-&gt;GetObjectClass(env, sign);</span><br><span class="line">    // 得到toCharsString方法的ID</span><br><span class="line">    mid = (*env)-&gt;GetMethodID(env, cls, &quot;toCharsString&quot;, &quot;()Ljava/lang/String;&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    jstring signString=(jstring)(*env)-&gt;CallObjectMethod(env, sign, mid);</span><br><span class="line">//    const jbyte *singn = (*env)-&gt;GetStringUTFChars(env, signString, NULL);</span><br><span class="line">//    __android_log_print(ANDROID_LOG_INFO, &quot;JNITag&quot;,&quot;string From Java To C : %s&quot;, singn);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return packageName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a href="http://blog.csdn.net/grafx/article/details/40403577" target="_blank" rel="noopener">参考链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;java层传入app的Context，ndk内检查包名和签名特征&lt;/p&gt;
&lt;h2 id=&quot;java-native-方法&quot;&gt;&lt;a href=&quot;#java-native-方法&quot; class=&quot;headerlink&quot; title=&quot;java native 方法&quot;&gt;&lt;/a&gt;java
      
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
      <category term="ndk" scheme="http://mzeht.com/tags/ndk/"/>
    
  </entry>
  
  <entry>
    <title>android项目利用cmake方式实现ndk开发</title>
    <link href="http://mzeht.com/2017/04/28/2017-04-28-1/"/>
    <id>http://mzeht.com/2017/04/28/2017-04-28-1/</id>
    <published>2017-04-28T06:53:01.000Z</published>
    <updated>2019-04-30T20:33:51.256Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加ndk支持"><a href="#添加ndk支持" class="headerlink" title="添加ndk支持"></a>添加ndk支持</h2><p><code>gradle.properties</code>(project properties)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">org.gradle.daemon=true</span><br><span class="line">org.gradle.jvmargs=-Xmx2048m -XX:MaxPermSize=512m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8</span><br><span class="line">org.gradle.parallel=true</span><br><span class="line">org.gradle.configureondemand=true</span><br><span class="line">android.useDeprecatedNdk=true</span><br></pre></td></tr></table></figure><h2 id="在需要ndk的模块新建JNI-Folder"><a href="#在需要ndk的模块新建JNI-Folder" class="headerlink" title="在需要ndk的模块新建JNI Folder"></a>在需要ndk的模块新建JNI Folder</h2><p>当前模块下生成了/src/main/jni</p><p>这个文件夹下放置<code>CMakeLists.txt</code>，和c文件<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-4-28/13776882-file_1493364079424_4904.png" alt></p><h2 id="创建CMakeLists-txt"><a href="#创建CMakeLists-txt" class="headerlink" title="创建CMakeLists.txt"></a>创建CMakeLists.txt</h2><p><code>stringutils</code> cmake生成so包命名相关<br>反编译apk，可以发现so包名称为<code>libstringutils.so</code></p><p><code>SHARED</code>之后</p><p>打包进入so包的文件目录，可以多个</p><p><code>cmake_minimum_required(VERSION 3.4.1)</code>默认版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(VERSION 3.4.1)</span><br><span class="line"></span><br><span class="line">add_library(stringutils SHARED</span><br><span class="line">            stringutils.c)</span><br><span class="line"></span><br><span class="line"># Include libraries needed for stringutils lib</span><br><span class="line">target_link_libraries(stringutils log android)</span><br></pre></td></tr></table></figure><p>##在java文件中创建native方法</p><p>如<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">public class StringUtils &#123;</span><br><span class="line"></span><br><span class="line">    public static native String makeSkey(String[] array, Context context);</span><br><span class="line">    static &#123;</span><br><span class="line">        System.loadLibrary(&quot;stringutils&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="创建c文件"><a href="#创建c文件" class="headerlink" title="创建c文件"></a>创建c文件</h2><p>在java报红的方法名处查看智能提示，生成c文件</p><p>如</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;jni.h&gt;</span><br><span class="line"></span><br><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line">Java_com_mzeht_wp_skbyjni_StringUtils_makeSkey(JNIEnv *env, jclass type, jobjectArray array,</span><br><span class="line">                                               jobject context) &#123;</span><br><span class="line"></span><br><span class="line">    // TODO</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    return (*env)-&gt;NewStringUTF(env, &quot;hehe&quot;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>返回一个“hehe”，运行android项目即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;添加ndk支持&quot;&gt;&lt;a href=&quot;#添加ndk支持&quot; class=&quot;headerlink&quot; title=&quot;添加ndk支持&quot;&gt;&lt;/a&gt;添加ndk支持&lt;/h2&gt;&lt;p&gt;&lt;code&gt;gradle.properties&lt;/code&gt;(project properties)
      
    
    </summary>
    
      <category term="移动开发" scheme="http://mzeht.com/categories/app/"/>
    
      <category term="Android" scheme="http://mzeht.com/categories/app/Android/"/>
    
    
      <category term="ndk" scheme="http://mzeht.com/tags/ndk/"/>
    
      <category term="cmake" scheme="http://mzeht.com/tags/cmake/"/>
    
  </entry>
  
  <entry>
    <title>jenkins 发布war包到远程tomcat(含脚本)</title>
    <link href="http://mzeht.com/2017/04/28/2017-04-28/"/>
    <id>http://mzeht.com/2017/04/28/2017-04-28/</id>
    <published>2017-04-28T04:53:01.000Z</published>
    <updated>2019-04-30T20:33:51.256Z</updated>
    
    <content type="html"><![CDATA[<h2 id="总体步骤"><a href="#总体步骤" class="headerlink" title="总体步骤"></a>总体步骤</h2><ol><li>配置源码</li><li>编译打包</li><li>ssh传输到远处服务器</li><li>启动远程服务器脚本</li></ol><h3 id="配置代码源"><a href="#配置代码源" class="headerlink" title="配置代码源"></a>配置代码源</h3><p>jenkis上的git插件</p><h3 id="编译打包"><a href="#编译打包" class="headerlink" title="编译打包"></a>编译打包</h3><p>jenkins机器上安装需要的命令工具<br>一般是maven</p><p>构建选项卡中，配置和项目相对应的打包脚本</p><p>如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mvn clean &amp;&amp; mvn package -Dmaven.test.skip</span><br></pre></td></tr></table></figure><h3 id="传输到远程服务器"><a href="#传输到远程服务器" class="headerlink" title="传输到远程服务器"></a>传输到远程服务器</h3><p>jenkins插件<code>ssh publish</code></p><p>系统设置中配置远程服务器信息（密钥或用户名密码）</p><p><code>构建后操作</code>选项卡中<br>如：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-4-28/37403645-file_1493355931851_4fe5.png" alt></p><h2 id="启动远程服务器脚本"><a href="#启动远程服务器脚本" class="headerlink" title="启动远程服务器脚本"></a>启动远程服务器脚本</h2><p><code>project_name</code> 生成的war包名称，没有’.war’<br><code>jenkins_dir</code> 本机上jenkins传输来的war包的存储位置<br><code>tomcat_dir</code> 该war包需要放置的tomcat的位置<br><code>shell_name</code> 脚本自身的名称</p><p>test-deploy.sh</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># !bin/sh</span><br><span class="line"># tomcat路径</span><br><span class="line">jenkins_dir=&quot;/root/jenkinsproject&quot;</span><br><span class="line">project_name=&quot;delopytest&quot;</span><br><span class="line">tomcat_dir=&quot;/usr/apache-tomcat-7.0.70&quot;</span><br><span class="line"># 当前脚本名称</span><br><span class="line">shell_name=&quot;test-deploy.sh&quot;</span><br><span class="line">pid=`ps -ef | grep $tomcat_dir | grep -v $shell_name | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">echo &quot;old pid:&quot;.$pid</span><br><span class="line">if test &quot;$pid&quot;</span><br><span class="line">then </span><br><span class="line">  echo &quot;kill old pid: $pid ing&quot;</span><br><span class="line">  kill -9 $pid</span><br><span class="line">  # 睡眠10s</span><br><span class="line">  sleep 10s</span><br><span class="line">else</span><br><span class="line">echo &quot;not find old pid&quot;</span><br><span class="line">fi</span><br><span class="line"># 删除旧的war包及解压文件夹，拷贝新的war包</span><br><span class="line">rm -rf $tomcat_dir/webapps/$project_name*</span><br><span class="line">cp $jenkins_dir/$project_name.war  $tomcat_dir/webapps</span><br><span class="line">sh $tomcat_dir/bin/startup.sh</span><br><span class="line">sleep 10s</span><br><span class="line"># 检查启动</span><br><span class="line">newpid=`ps -ef | grep $tomcat_dir | grep -v $shell_name | grep -v grep | awk &apos;&#123;print $2&#125;&apos;`</span><br><span class="line">if test &quot;$newpid&quot;</span><br><span class="line">then</span><br><span class="line">echo &quot;new pid:&quot;.$newpid</span><br><span class="line">exit</span><br><span class="line">else</span><br><span class="line">echo &quot;not find new pid&quot;</span><br><span class="line">exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;总体步骤&quot;&gt;&lt;a href=&quot;#总体步骤&quot; class=&quot;headerlink&quot; title=&quot;总体步骤&quot;&gt;&lt;/a&gt;总体步骤&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;配置源码&lt;/li&gt;
&lt;li&gt;编译打包&lt;/li&gt;
&lt;li&gt;ssh传输到远处服务器&lt;/li&gt;
&lt;li&gt;启动远程服务器
      
    
    </summary>
    
      <category term="运维" scheme="http://mzeht.com/categories/operation/"/>
    
    
      <category term="jenkins" scheme="http://mzeht.com/tags/jenkins/"/>
    
      <category term="shell" scheme="http://mzeht.com/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis-plugin收费插件破解</title>
    <link href="http://mzeht.com/2017/02/10/Mybatis-plugin%E6%94%B6%E8%B4%B9%E6%8F%92%E4%BB%B6%E7%A0%B4%E8%A7%A3/"/>
    <id>http://mzeht.com/2017/02/10/Mybatis-plugin收费插件破解/</id>
    <published>2017-02-10T15:53:42.000Z</published>
    <updated>2019-04-30T20:33:51.261Z</updated>
    
    <content type="html"><![CDATA[<p>IDEA版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">IntelliJ IDEA 2016.3.4</span><br><span class="line">Build #IU-163.12024.16, built on January 31, 2017</span><br><span class="line">Licensed to lan yu</span><br><span class="line">Subscription is active until February 25, 2017</span><br><span class="line">JRE: 1.8.0_112-release-408-b6 x86_64</span><br><span class="line">JVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o</span><br></pre></td></tr></table></figure><p>Mybatis-plugin版本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Version: 2.9</span><br></pre></td></tr></table></figure><p>插件功能介绍地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://www.oschina.net/p/intellij-mybatis-plugin</span><br></pre></td></tr></table></figure><p>破解方法来院地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://myoss.github.io/2016/MyBatis-Plugin-%E5%AD%A6%E4%B9%A0%E4%BD%BF%E7%94%A8/</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">➜  IntelliJIdea2016.3 git clone https://github.com/myoss/profile.git</span><br><span class="line">Cloning into &apos;profile&apos;...</span><br><span class="line">remote: Counting objects: 297, done.</span><br><span class="line">remote: Total 297 (delta 0), reused 0 (delta 0), pack-reused 297</span><br><span class="line">Receiving objects: 100% (297/297), 87.32 KiB | 143.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (90/90), done.</span><br><span class="line">➜  IntelliJIdea2016.3 ls</span><br><span class="line">ECTranslation1.3.jar     GsonFormat.jar           Sexy_Editor.jar          availables.xml           idea-gitignore           jvm-memory-view          mybatis_plus</span><br><span class="line">GenerateSerialVersionUID MavenRunHelper           TranslationPlugin        codehelper.generator     jr-ide-idea              lombok-plugin            profile</span><br><span class="line">➜  IntelliJIdea2016.3 cd mybatis_plus</span><br><span class="line">➜  mybatis_plus ls</span><br><span class="line">lib</span><br><span class="line">➜  mybatis_plus cd lib</span><br><span class="line">➜  lib ls</span><br><span class="line">mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar</span><br><span class="line">➜  lib cp -R ~/Library/Application\ Support/IntelliJIdea2016.3/profile/idea/plugin</span><br><span class="line">usage: cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file target_file</span><br><span class="line">       cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file ... target_directory</span><br><span class="line">➜  lib cp -R ~/Library/Application\ Support/IntelliJIdea2016.3/profile/idea/plugin/MybatisPlugin/v2.7\~v2.87 .</span><br><span class="line">➜  lib ls</span><br><span class="line">mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar          v2.7~v2.87</span><br><span class="line">➜  lib cp -R ~/Library/Application\ Support/IntelliJIdea2016.3/profile/idea/plugin/MybatisPlugin/v2.7\~v2.87 .</span><br><span class="line">➜  lib ls</span><br><span class="line">mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar          v2.7~v2.87</span><br><span class="line">➜  lib cp -R ~/Library/Application\ Support/IntelliJIdea2016.3/profile/idea/plugin/MybatisPlugin/v2.7\~v2.87/com .</span><br><span class="line">➜  lib ls</span><br><span class="line">com                              mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar          v2.7~v2.87</span><br><span class="line">➜  lib jar uvf mybatis_plus.jar com</span><br><span class="line"></span><br><span class="line">正在添加: com/(输入 = 0) (输出 = 0)(存储了 0%)</span><br><span class="line">正在添加: com/seventh7/(输入 = 0) (输出 = 0)(存储了 0%)</span><br><span class="line">正在添加: com/seventh7/mybatis/(输入 = 0) (输出 = 0)(存储了 0%)</span><br><span class="line">正在添加: com/seventh7/mybatis/dom/(输入 = 0) (输出 = 0)(存储了 0%)</span><br><span class="line">正在添加: com/seventh7/mybatis/dom/model/(输入 = 0) (输出 = 0)(存储了 0%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/(输入 = 0) (输出 = 0)(存储了 0%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/license/(输入 = 0) (输出 = 0)(存储了 0%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/license/ActivationDriver$1.class(输入 = 1926) (输出 = 797)(压缩了 58%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/license/ActivationDriver.class(输入 = 1398) (输出 = 656)(压缩了 53%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/RefProject$1.class(输入 = 2224) (输出 = 1092)(压缩了 50%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/RefProject.class(输入 = 1982) (输出 = 919)(压缩了 53%)</span><br><span class="line">正在添加: com/seventh7/mybatis/service/(输入 = 0) (输出 = 0)(存储了 0%)</span><br><span class="line">正在添加: com/seventh7/mybatis/service/JavaService$1.class(输入 = 1408) (输出 = 613)(压缩了 56%)</span><br><span class="line">正在添加: com/seventh7/mybatis/service/JavaService$2.class(输入 = 1312) (输出 = 575)(压缩了 56%)</span><br><span class="line">正在添加: com/seventh7/mybatis/service/JavaService.class(输入 = 10921) (输出 = 4166)(压缩了 61%)</span><br><span class="line">正在添加: com/seventh7/mybatis/util/(输入 = 0) (输出 = 0)(存储了 0%)</span><br><span class="line">正在添加: com/seventh7/mybatis/util/JavaUtils$SystemData.class(输入 = 3412) (输出 = 1602)(压缩了 53%)</span><br><span class="line">正在添加: com/seventh7/mybatis/util/JavaUtils.class(输入 = 13339) (输出 = 4773)(压缩了 64%)</span><br><span class="line">正在添加: com/seventh7/mybatis/dom/model/Completion.class(输入 = 1663) (输出 = 923)(压缩了 44%)</span><br><span class="line">➜  lib ls</span><br><span class="line">com                              mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar          v2.7~v2.87</span><br><span class="line">➜  lib rm -rf v2.7\~v2.87</span><br><span class="line">➜  lib ls</span><br><span class="line">com                              mybatis-generator-core-1.3.2.jar mybatis_plus.jar                 ref.idea.common-1.0.jar</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;IDEA版本&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;
      
    
    </summary>
    
      <category term="工具" scheme="http://mzeht.com/categories/tool/"/>
    
      <category term="破解" scheme="http://mzeht.com/categories/tool/%E7%A0%B4%E8%A7%A3/"/>
    
    
      <category term="Mybatis" scheme="http://mzeht.com/tags/Mybatis/"/>
    
      <category term="IDEA" scheme="http://mzeht.com/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>Centos下docker导致的升级内核</title>
    <link href="http://mzeht.com/2017/02/01/Centos%E4%B8%8Bdocker%E5%AF%BC%E8%87%B4%E7%9A%84%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/"/>
    <id>http://mzeht.com/2017/02/01/Centos下docker导致的升级内核/</id>
    <published>2017-02-01T05:50:42.000Z</published>
    <updated>2019-04-30T20:33:51.259Z</updated>
    
    <content type="html"><![CDATA[<p>接着上一篇文章</p><p>形如下面的错误出现了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --rm -ti ubuntu:14.04 bin/bash                                       </span><br><span class="line">FATA[0000] Error response from daemon: mkdir /var/lib/docker/overlay/c4a8f5e516d401534f2d994f5546f7e08639ffd675eb3573267f76d79394f172-init/merged/dev/shm: invalid argument</span><br></pre></td></tr></table></figure><p>Centos下安装docker正常，拉取镜像正常，就在启动容器的时候报错<br><a id="more"></a></p><p>一番谷歌，github</p><p><a href="https://github.com/docker/docker/issues/10294" target="_blank" rel="noopener">https://github.com/docker/docker/issues/10294</a></p><h1 id="首先检查docker-info"><a href="#首先检查docker-info" class="headerlink" title="首先检查docker info"></a>首先检查docker info</h1><p>如果有</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: bridge-nf-call-iptables is disabled</span><br><span class="line">WARNING: bridge-nf-call-ip6tables is disabled</span><br></pre></td></tr></table></figure><p>就需要添加内核参数，具体看上一篇</p><p>之后看到</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Fixed...</span><br><span class="line"></span><br><span class="line">from docker official site.</span><br><span class="line"></span><br><span class="line">To configure Docker to use the overlay storage driver your Docker host must be running version 3.18 of the Linux kernel (preferably newer) with the overlay kernel module loaded. OverlayFS can operate on top of most supported Linux filesystems. However, ext4 is currently recommended for use in production environments.</span><br><span class="line">so, update kernel from 3.10.0 to 3.18.0 + fixed the issue.</span><br></pre></td></tr></table></figure><p>提示我们要升级Centos内核3.10.0 to 3.18.0 + </p><h1 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h1><h2 id="查看机器内核版本"><a href="#查看机器内核版本" class="headerlink" title="查看机器内核版本"></a>查看机器内核版本</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname -r</span><br><span class="line">4.9.6-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><p>这里我是升级后在写的文章，升级之前是3.10</p><h2 id="查看Linux各版本内核"><a href="#查看Linux各版本内核" class="headerlink" title="查看Linux各版本内核"></a>查看Linux各版本内核</h2><p><a href="https://www.kernel.org/" target="_blank" rel="noopener">网站地址</a></p><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/55278371-file_1485959943374_7bc7.png" alt></p><p>稳定版 4.9.7</p><h2 id="导入key"><a href="#导入key" class="headerlink" title="导入key"></a>导入key</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org</span><br></pre></td></tr></table></figure><h2 id="安装elrepo的yum源"><a href="#安装elrepo的yum源" class="headerlink" title="安装elrepo的yum源"></a>安装elrepo的yum源</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span><br></pre></td></tr></table></figure><h2 id="安装内核"><a href="#安装内核" class="headerlink" title="安装内核"></a>安装内核</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --enablerepo=elrepo-kernel install  kernel-ml-devel kernel-ml -y</span><br></pre></td></tr></table></figure><h2 id="查看默认启动顺序"><a href="#查看默认启动顺序" class="headerlink" title="查看默认启动顺序"></a>查看默认启动顺序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">awk -F\&apos; &apos;$1==&quot;menuentry &quot; &#123;print $2&#125;&apos; /etc/grub2.cfg</span><br><span class="line">CentOS Linux (4.9.6-1.el7.elrepo.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-514.2.2.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-327.22.2.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (3.10.0-327.el7.x86_64) 7 (Core)</span><br><span class="line">CentOS Linux (0-rescue-7d26c16f128042a684ea474c9e2c240f) 7 (Core)</span><br></pre></td></tr></table></figure><h2 id="调整启动顺序"><a href="#调整启动顺序" class="headerlink" title="调整启动顺序"></a>调整启动顺序</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-set-default 0</span><br></pre></td></tr></table></figure><h2 id="重新启动"><a href="#重新启动" class="headerlink" title="重新启动"></a>重新启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> uname -r</span><br><span class="line">4.9.6-1.el7.elrepo.x86_64</span><br></pre></td></tr></table></figure><p>成功</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;接着上一篇文章&lt;/p&gt;
&lt;p&gt;形如下面的错误出现了&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ docker run --rm -ti ubuntu:14.04 bin/bash                                       &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;FATA[0000] Error response from daemon: mkdir /var/lib/docker/overlay/c4a8f5e516d401534f2d994f5546f7e08639ffd675eb3573267f76d79394f172-init/merged/dev/shm: invalid argument&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Centos下安装docker正常，拉取镜像正常，就在启动容器的时候报错&lt;br&gt;
    
    </summary>
    
      <category term="运维" scheme="http://mzeht.com/categories/operation/"/>
    
      <category term="docker" scheme="http://mzeht.com/categories/operation/docker/"/>
    
    
      <category term="Centos" scheme="http://mzeht.com/tags/Centos/"/>
    
  </entry>
  
  <entry>
    <title>Centos下docker部署rap</title>
    <link href="http://mzeht.com/2017/02/01/Centos%E4%B8%8Bdocker%E9%83%A8%E7%BD%B2rap/"/>
    <id>http://mzeht.com/2017/02/01/Centos下docker部署rap/</id>
    <published>2017-02-01T05:43:42.000Z</published>
    <updated>2019-04-30T20:33:51.259Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://rap.taobao.org/org/index.do" target="_blank" rel="noopener">rap官网</a><br><a href="https://github.com/thx/RAP/wiki/home_cn" target="_blank" rel="noopener">rapgithub地址</a></p><p>RAP是一个GUI的WEB接口管理工具。在RAP中，您可定义接口的URL、请求&amp;响应细节格式等等。通过分析这些数据，RAP提供MOCK服务、测试服务等自动化工具。RAP同时提供大量企业级功能，帮助企业和团队高效的工作。</p><p>在前后端分离的开发模式下，我们通常需要定义一份接口文档来规范接口的具体信息。如一个请求的地址、有几个参数、参数名称及类型含义等等。RAP 首先方便团队录入、查看和管理这些接口文档，并通过分析结构化的文档数据，重复利用并生成自测数据、提供自测控制台等等… 大幅度提升开发效率</p><a id="more"></a><p>1.<code>强大的GUI工具</code> 给力的用户体验，你将会爱上使用RAP来管理您的API文档。<br>2.<code>完善的MOCK服务</code> 文档定义好的瞬间，所有接口已经准备就绪。有了MockJS，无论您的业务模型有多复杂，它都能很好的满足。</p><h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>由于我是在阿里云上的服务器</p><h2 id="采用阿里云的脚本进行安装"><a href="#采用阿里云的脚本进行安装" class="headerlink" title="采用阿里云的脚本进行安装"></a>采用阿里云的脚本进行安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL http://acs-public-mirror.oss-cn-hangzhou.aliyuncs.com/docker-engine/internet | sh -</span><br></pre></td></tr></table></figure><h2 id="添加内核参数"><a href="#添加内核参数" class="headerlink" title="添加内核参数"></a>添加内核参数</h2><p>默认配置下，在 CentOS 使用 Docker 可能会碰到下面的这些警告信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: bridge-nf-call-iptables is disabled</span><br><span class="line">WARNING: bridge-nf-call-ip6tables is disabled</span><br></pre></td></tr></table></figure><p>很不巧我就遇到了</p><p>添加内核配置参数以启用这些功能。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tee -a /etc/sysctl.conf &lt;&lt;-EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>然后重新加载 sysctl.conf</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo sysctl -p</span><br></pre></td></tr></table></figure><h1 id="配置加速器"><a href="#配置加速器" class="headerlink" title="配置加速器"></a>配置加速器</h1><p> 参考阿里云论坛的一篇文章<a href="https://yq.aliyun.com/articles/29941" target="_blank" rel="noopener">here</a></p><p>CentOS的配置方式略微复杂，需要先将默认的配置文件复制出来<br>/lib/systemd/system/docker.service -&gt; /etc/systemd/system/docker.service<br>然后再将加速器地址添加到配置文件的启动命令<br>重启Docker就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -n /lib/systemd/system/docker.service /etc/systemd/system/docker.service</span><br><span class="line">sudo sed -i &quot;s|ExecStart=/usr/bin/docker daemon|ExecStart=/usr/bin/docker daemon --registry-mirror=&lt;your accelerate address&gt;|g&quot; /etc/systemd/system/docker.service</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure><p>your accelerate address 处填入阿里云账号分配的加速器地址</p><h1 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">docker search rap</span><br><span class="line">NAME                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">neo4j                           Neo4j is a highly scalable, robust native ...   282       [OK]</span><br><span class="line">r-base                          R is a system for statistical computation ...   147       [OK]</span><br><span class="line">arangodb                        ArangoDB - a distributed database with a f...   78        [OK]</span><br><span class="line">orientdb                        OrientDB a Multi-Model Open Source NoSQL D...   46        [OK]</span><br><span class="line">ubuntu-debootstrap              debootstrap --variant=minbase --components...   27        [OK]</span><br><span class="line">rapidftr/rapidftr               UNICEF RapidFTR (Family Tracing and Reunif...   2                    [OK]</span><br><span class="line">rapi/psgi                       Image for running PSGI apps, comes with Ra...   2                    [OK]</span><br><span class="line">huangfushun/rap                 ali rap web ui docker file                      1                    [OK]</span><br><span class="line">lihuansse/rap                   RAP 接口管理工具                                      1</span><br><span class="line">masonliu/rap                    Docker Image for RAP https://github.com/th...   1</span><br><span class="line">rapidoid                        Rapidoid is a high-performance HTTP server...   1         [OK]</span><br><span class="line">ukgovdatascience/rap-docker     Environment for reproducible analytical pi...   0                    [OK]</span><br><span class="line">rapidreg/rapidreg                                                               0                    [OK]</span><br><span class="line">raphiz/raphael.li                                                               0                    [OK]</span><br><span class="line">rapi/rapidapp                   Standard RapidApp base image, from officia...   0                    [OK]</span><br><span class="line">team19awshack/rapidprowebhook   RapidProWebhook                                 0                    [OK]</span><br><span class="line">tp81/rapidstorm                 RapidSTORM docker image                         0                    [OK]</span><br><span class="line">qdsang/rap                      docker rap alpine                               0                    [OK]</span><br><span class="line">raphsfeir/raphaelsfeir          Portfolio and blog for me                       0                    [OK]</span><br><span class="line">rapidpro/rapidpro-base          Base Python 2.7 + geolibs Docker image for...   0                    [OK]</span><br><span class="line">tonimichel/rapidflask           A boilerplate flask application for easy s...   0                    [OK]</span><br><span class="line">andreweskeclarke/rapidftr                                                       0                    [OK]</span><br><span class="line">raphiz/mathe.raphael.li                                                         0                    [OK]</span><br><span class="line">raphaelgroup/magi                                                               0                    [OK]</span><br><span class="line">divio/rapidpro                  RapidPro in docker.                             0                    [OK]</span><br></pre></td></tr></table></figure><p>这里选择lihuansse/rap</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull lihuansse/rap</span><br></pre></td></tr></table></figure><p>创建并启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run --name rap -p 8080:8080 -d lihuansse/rap:latest</span><br></pre></td></tr></table></figure><p>然而就在即将完成这最后一步的时候</p><p>形如下面的错误出现了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --rm -ti ubuntu:14.04 bin/bash                                       </span><br><span class="line">FATA[0000] Error response from daemon: mkdir /var/lib/docker/overlay/c4a8f5e516d401534f2d994f5546f7e08639ffd675eb3573267f76d79394f172-init/merged/dev/shm: invalid argument</span><br></pre></td></tr></table></figure><p>请看下回分解</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://rap.taobao.org/org/index.do&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;rap官网&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/thx/RAP/wiki/home_cn&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;rapgithub地址&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;RAP是一个GUI的WEB接口管理工具。在RAP中，您可定义接口的URL、请求&amp;amp;响应细节格式等等。通过分析这些数据，RAP提供MOCK服务、测试服务等自动化工具。RAP同时提供大量企业级功能，帮助企业和团队高效的工作。&lt;/p&gt;
&lt;p&gt;在前后端分离的开发模式下，我们通常需要定义一份接口文档来规范接口的具体信息。如一个请求的地址、有几个参数、参数名称及类型含义等等。RAP 首先方便团队录入、查看和管理这些接口文档，并通过分析结构化的文档数据，重复利用并生成自测数据、提供自测控制台等等… 大幅度提升开发效率&lt;/p&gt;
    
    </summary>
    
      <category term="运维" scheme="http://mzeht.com/categories/operation/"/>
    
      <category term="docker" scheme="http://mzeht.com/categories/operation/docker/"/>
    
    
      <category term="Centos" scheme="http://mzeht.com/tags/Centos/"/>
    
  </entry>
  
</feed>
