<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[测试文章]]></title>
      <url>http://mzeht.com/2019/05/01/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0/</url>
      <content type="html"><![CDATA[<p><img src="/uploads/15304601545484.jpg" alt="15304601545484"></p>
<p><img src="/uploads/a7691515_s.jpg" alt="a7691515_s"></p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[springboot]]></title>
      <url>http://mzeht.com/2017/11/01/2017-11-07/</url>
      <content type="html"></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[r2*r2组合自定义异常处理]]></title>
      <url>http://mzeht.com/2017/06/01/r2-r2%E7%BB%84%E5%90%88%E8%87%AA%E5%AE%9A%E4%B9%89%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/</url>
      <content type="html"><![CDATA[<h2 id="处理前"><a href="#处理前" class="headerlink" title="处理前"></a>处理前</h2><p>使用r2+r2组合 以下代码很常见</p>
<p>只有返回的数据能解析成即有格式时 会走<code>onNext</code> 我们往往还要进一步判断<br>常见的是判断成功／失败的标志字段</p>
<p>对于<code>onError</code> 我们一般都是弹出提示</p>
<p>如果服务端返还格式不规范也不会走<code>onNext</code></p>
<p>异常处理我们显得很无力</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">ApiManager.getApi().XXXXXXX(ObjectHelper.toMap(quickDeliverDTO))</span><br><span class="line">                .compose(<span class="keyword">this</span>.bindToLifecycle())</span><br><span class="line">                .subscribeOn(Schedulers.io())</span><br><span class="line">                .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                .subscribe(<span class="keyword">new</span> Observer&lt;ApiResult&lt;String&gt;&gt;() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onComplete</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line">                        </span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSubscribe</span><span class="params">(@NonNull Disposable d)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(ApiResult&lt;String&gt; stringApiResult)</span> </span>&#123;</span><br><span class="line">                       </span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br></pre></td></tr></table></figure>
<h2 id="我们希望可以。。。"><a href="#我们希望可以。。。" class="headerlink" title="我们希望可以。。。"></a>我们希望可以。。。</h2><p>1.自定义错误处理<br>2.成功／失败标志不要手动判断 成功走单独回调<br>3.失败时 默认方法提示错误，不用每次手写弹窗<br>4.没有网络连接时，不发起请求，走失败回调<br>5.保留原有回调 应对特殊情况</p>
<h2 id="自定义Converter-捕获异常"><a href="#自定义Converter-捕获异常" class="headerlink" title="自定义Converter 捕获异常"></a>自定义Converter 捕获异常</h2><p>CustomGsonResponseBodyConverter<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomGsonResponseBodyConverter</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">ResponseBody</span>, <span class="title">T</span>&gt; &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Gson gson;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TypeAdapter&lt;T&gt; adapter;</span><br><span class="line"></span><br><span class="line">    CustomGsonResponseBodyConverter(Gson gson, TypeAdapter&lt;T&gt; adapter) &#123;</span><br><span class="line">        <span class="keyword">this</span>.gson = gson;</span><br><span class="line">        <span class="keyword">this</span>.adapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T convert(ResponseBody value) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        String response = value.string();</span><br><span class="line">        HttpStatus httpStatus = gson.fromJson(response, HttpStatus.<span class="keyword">class</span>);</span><br><span class="line">        <span class="keyword">if</span> (!httpStatus.isSuccess()) &#123;</span><br><span class="line">            value.close();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(httpStatus.getCode(), httpStatus.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        MediaType contentType = value.contentType();</span><br><span class="line">        Charset charset = contentType != <span class="literal">null</span> ? contentType.charset(UTF_8) : UTF_8;</span><br><span class="line">        InputStream inputStream = <span class="keyword">new</span> ByteArrayInputStream(response.getBytes());</span><br><span class="line">        Reader reader = <span class="keyword">new</span> InputStreamReader(inputStream, charset);</span><br><span class="line">        JsonReader jsonReader = gson.newJsonReader(reader);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> adapter.read(jsonReader);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            value.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>CustomGsonRequestBodyConverter</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomGsonRequestBodyConverter</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">T</span>, <span class="title">RequestBody</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> MediaType MEDIA_TYPE = MediaType.parse(<span class="string">"application/json; charset=UTF-8"</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Charset UTF_8 = Charset.forName(<span class="string">"UTF-8"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Gson gson;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TypeAdapter&lt;T&gt; adapter;</span><br><span class="line"></span><br><span class="line">    CustomGsonRequestBodyConverter(Gson gson, TypeAdapter&lt;T&gt; adapter) &#123;</span><br><span class="line">        <span class="keyword">this</span>.gson = gson;</span><br><span class="line">        <span class="keyword">this</span>.adapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RequestBody <span class="title">convert</span><span class="params">(T value)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Buffer buffer = <span class="keyword">new</span> Buffer();</span><br><span class="line">        Writer writer = <span class="keyword">new</span> OutputStreamWriter(buffer.outputStream(), UTF_8);</span><br><span class="line">        JsonWriter jsonWriter = gson.newJsonWriter(writer);</span><br><span class="line">        adapter.write(jsonWriter, value);</span><br><span class="line">        jsonWriter.close();</span><br><span class="line">        <span class="keyword">return</span> RequestBody.create(MEDIA_TYPE, buffer.readByteString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>CustomGsonResponseBodyConverter</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CustomGsonResponseBodyConverter</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Converter</span>&lt;<span class="title">ResponseBody</span>, <span class="title">T</span>&gt; &#123;</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Gson gson;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> TypeAdapter&lt;T&gt; adapter;</span><br><span class="line"></span><br><span class="line">    CustomGsonResponseBodyConverter(Gson gson, TypeAdapter&lt;T&gt; adapter) &#123;</span><br><span class="line">        <span class="keyword">this</span>.gson = gson;</span><br><span class="line">        <span class="keyword">this</span>.adapter = adapter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> T convert(ResponseBody value) <span class="keyword">throws</span> IOException &#123;</span><br><span class="line">        String response = value.string();</span><br><span class="line">        HttpStatus httpStatus = gson.fromJson(response, HttpStatus.<span class="keyword">class</span>);</span><br><span class="line">        <span class="keyword">if</span> (!httpStatus.isSuccess()) &#123;</span><br><span class="line">            value.close();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> ApiException(httpStatus.getCode(), httpStatus.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        MediaType contentType = value.contentType();</span><br><span class="line">        Charset charset = contentType != <span class="literal">null</span> ? contentType.charset(UTF_8) : UTF_8;</span><br><span class="line">        InputStream inputStream = <span class="keyword">new</span> ByteArrayInputStream(response.getBytes());</span><br><span class="line">        Reader reader = <span class="keyword">new</span> InputStreamReader(inputStream, charset);</span><br><span class="line">        JsonReader jsonReader = gson.newJsonReader(reader);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> adapter.read(jsonReader);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            value.close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="其他相关类"><a href="#其他相关类" class="headerlink" title="其他相关类"></a>其他相关类</h3><p><code>HttpStatus.java</code><br>对应接口异常时的返回，不关心返回数据的解析，只解析code，message</p>
<p>如</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpStatus</span> </span>&#123;</span><br><span class="line">    <span class="meta">@SerializedName</span>(<span class="string">"resultCode"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mCode;</span><br><span class="line">    <span class="meta">@SerializedName</span>(<span class="string">"resultMsg"</span>)</span><br><span class="line">    <span class="keyword">private</span> String mMessage;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mMessage;</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>ApiException.java</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiException</span>  <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mErrorCode;</span><br><span class="line">    <span class="keyword">private</span> String errorMessage;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getErrorMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorMessage</span><span class="params">(String errorMessage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.errorMessage = errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getErrorCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mErrorCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setErrorCode</span><span class="params">(<span class="keyword">int</span> errorCode)</span> </span>&#123;</span><br><span class="line">        mErrorCode = errorCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ApiException</span><span class="params">(<span class="keyword">int</span> errorCode, String errorMessage)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(errorMessage);</span><br><span class="line">        <span class="keyword">this</span>.mErrorCode = errorCode;</span><br><span class="line">        <span class="keyword">this</span>.errorMessage = errorMessage;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="自定义-Observer"><a href="#自定义-Observer" class="headerlink" title="自定义 Observer"></a>自定义 Observer</h2><p>实现常用处理 免去复写</p>
<p>DisposableObserver 实现</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">BaseDisposableObserver</span>&lt;<span class="title">T</span>&gt; <span class="keyword">extends</span> <span class="title">DisposableObserver</span>&lt;<span class="title">ApiResult</span>&lt;<span class="title">T</span>&gt;&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> RESPONSE_CODE_OK = <span class="number">1</span>;       <span class="comment">//自定义的业务逻辑，成功</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> RESPONSE_CODE_FAILED = <span class="number">2</span>;  <span class="comment">//返回数据失败,严重的错误</span></span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Gson gson = <span class="keyword">new</span> Gson();</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> errorCode;</span><br><span class="line">    <span class="keyword">private</span> String errorMsg = <span class="string">"未知的错误！"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BaseDisposableObserver</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStart</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!NetworkUtils.isConnected()) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = <span class="string">"没有网络，请检查网络连接"</span>;</span><br><span class="line">            onFailure(errorCode,errorMsg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(T t)</span></span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNext</span><span class="params">(@NonNull ApiResult&lt;T&gt; response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (response.getResultCode() == RESPONSE_CODE_OK) &#123;</span><br><span class="line">            onSuccess(response.getObject());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            onFailure(response.getResultCode(), response.getResultMsg());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onError</span><span class="params">(@NonNull Throwable t)</span> </span>&#123;</span><br><span class="line">        L.d(t.getMessage());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (t <span class="keyword">instanceof</span> HttpException) &#123;</span><br><span class="line">            HttpException httpException = (HttpException) t;</span><br><span class="line">            errorCode = httpException.code();</span><br><span class="line">            errorMsg = httpException.getMessage();</span><br><span class="line">            getErrorMsg(httpException);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t <span class="keyword">instanceof</span> ApiException) &#123;</span><br><span class="line">            ApiException exception = (ApiException) t;</span><br><span class="line">            errorCode = exception.getErrorCode();</span><br><span class="line">            errorMsg = exception.getErrorMessage();</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t <span class="keyword">instanceof</span> SocketTimeoutException) &#123;  <span class="comment">//VPN open</span></span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = <span class="string">"服务器响应超时"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t <span class="keyword">instanceof</span> ConnectException) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = <span class="string">"网络连接异常，请检查网络"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t <span class="keyword">instanceof</span> RuntimeException) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = <span class="string">"运行时错误"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t <span class="keyword">instanceof</span> UnknownHostException) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = <span class="string">"无法解析主机，请检查网络连接"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t <span class="keyword">instanceof</span> UnknownServiceException) &#123;</span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = <span class="string">"未知的服务器错误"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (t <span class="keyword">instanceof</span> IOException) &#123;  <span class="comment">//飞行模式等</span></span><br><span class="line">            errorCode = RESPONSE_CODE_FAILED;</span><br><span class="line">            errorMsg = <span class="string">"没有网络，请检查网络连接"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        onFailure(errorCode, errorMsg);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@CallSuper</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> code, String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (code) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="comment">//退回到登录页面</span></span><br><span class="line">                Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">                intent.setClass(mContext, LoginActivity.class);</span><br><span class="line">                mContext.startActivity(intent);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Toast.makeText(mContext, message + <span class="string">"   code="</span> + code, Toast.LENGTH_SHORT).show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">getErrorMsg</span><span class="params">(HttpException httpException)</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onComplete</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Observer 实现也类似</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public abstract <span class="class"><span class="keyword">class</span> <span class="title">BaseObserver</span> &lt;T&gt; <span class="title">implements</span> <span class="title">Observer</span>&lt;ApiResult&lt;T&gt;&gt; &#123;</span></span><br><span class="line"></span><br><span class="line">.....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="代码使用"><a href="#代码使用" class="headerlink" title="代码使用"></a>代码使用</h2><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ApiManager</span><span class="selector-class">.getSmartApi</span>()<span class="selector-class">.login</span>(mNameEdit.getText().toString(), mPassEdit.getText().toString())</span><br><span class="line">               <span class="selector-class">.compose</span>(this.bindToLifecycle())</span><br><span class="line">               <span class="selector-class">.subscribeOn</span>(Schedulers.io())</span><br><span class="line">               <span class="selector-class">.observeOn</span>(AndroidSchedulers.mainThread())</span><br><span class="line">               <span class="selector-class">.subscribe</span>(new BaseDisposableObserver&lt;String&gt;(getActivity()) &#123;</span><br><span class="line">                   <span class="variable">@Override</span></span><br><span class="line">                   public void onSuccess(String s) &#123;</span><br><span class="line">                       <span class="selector-tag">startActivity</span>(new Intent(getActivity(),MainActivity.class));</span><br><span class="line">                       <span class="selector-tag">BasePreference</span><span class="selector-class">.getInstance</span>()<span class="selector-class">.saveToken</span>(s);</span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">               &#125;) ;</span><br></pre></td></tr></table></figure>
<p>1.没网络时 不请求直接<code>onFailure</code></p>
<p>2.数据解析成功且标志位置成功时 <code>onSuccess</code></p>
<p>3.其他走<code>onFailure</code> </p>
<p><code>onFailure</code>默认弹出提示框提示错误代码 错误信息<br>token失效时返回登录页面</p>
<p>最重要的是默认<code>onFailure</code>处理都不用另写了！</p>
<p>当然也可以子类实现 不用默认处理 Observer的默认回调都在</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[retrofit2 使用拦截器添加header，打印日志]]></title>
      <url>http://mzeht.com/2017/06/01/retrofit2-%E4%BD%BF%E7%94%A8%E6%8B%A6%E6%88%AA%E5%99%A8%E6%B7%BB%E5%8A%A0header%EF%BC%8C%E6%89%93%E5%8D%B0%E6%97%A5%E5%BF%97/</url>
      <content type="html"><![CDATA[<p>开发中可能遇到有的接口需要header传递一些信息，几个还好，可以用@header注解手动添加</p>
<p>如果每个接口都需要，一个个写header就很傻了，可以使用retrofit2的拦截器做到</p>
<h2 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h2><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">OkHttpClient.Builder</span> <span class="keyword">builder </span>= new OkHttpClient.<span class="keyword">Builder();</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword"> </span>       <span class="keyword">builder.connectTimeout(5, </span>TimeUnit.SECONDS)</span><br><span class="line">                .writeTimeout(<span class="number">5</span>, TimeUnit.SECONDS)</span><br><span class="line">                .readTimeout(<span class="number">5</span>,TimeUnit.SECONDS)</span><br><span class="line">                .<span class="keyword">addNetworkInterceptor(new </span>StethoInterceptor())</span><br><span class="line">        .<span class="keyword">addInterceptor(new </span>Interceptor() &#123;</span><br><span class="line">            <span class="comment">@Override</span></span><br><span class="line">            public Response intercept(Chain chain) throws IOException &#123;</span><br><span class="line">                L.d(<span class="string">"Interceptor"</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">                // Request customization: <span class="keyword">add </span>request headers</span><br><span class="line">                <span class="keyword">String </span>Nonce = <span class="keyword">String.valueOf(System.currentTimeMillis());</span></span><br><span class="line"><span class="keyword"> </span>               <span class="keyword">String </span>CheckSum = EncryptUtils.encryptSHA1ToString(<span class="string">"DA3B979ABB5A4FC0B65382BC1A344A84"</span>+Nonce)<span class="comment">;</span></span><br><span class="line">                Request.<span class="keyword">Builder </span>requestBuilder = chain.request().newBuilder()</span><br><span class="line">                        .<span class="keyword">addHeader("AppKey", </span><span class="string">"10000001"</span>)</span><br><span class="line">                        .<span class="keyword">addHeader("Nonce", </span>Nonce)</span><br><span class="line">                        .<span class="keyword">addHeader("CheckSum", </span>CheckSum)</span><br><span class="line">                        .<span class="keyword">addHeader("x-session-token", </span><span class="keyword">BasePreference.getInstance().getToken())</span></span><br><span class="line"><span class="keyword"> </span>                       .<span class="keyword">addHeader("AppSecret", </span><span class="string">"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX"</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">                Request request = requestBuilder.<span class="keyword">build();</span></span><br><span class="line"><span class="keyword"> </span>               return chain.proceed(request)<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)<span class="comment">;</span></span><br><span class="line">        <span class="meta">if</span> (<span class="keyword">BuildConfig.DEBUG) </span>&#123;</span><br><span class="line">            // Log信息拦截器</span><br><span class="line">            HttpLoggingInterceptor loggingInterceptor = new HttpLoggingInterceptor()<span class="comment">;</span></span><br><span class="line">            loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.<span class="keyword">BODY);</span></span><br><span class="line"><span class="keyword"> </span>           //设置 Debug Log 模式</span><br><span class="line">            <span class="keyword">builder.addInterceptor(loggingInterceptor);</span></span><br><span class="line"><span class="keyword"> </span>       &#125;</span><br><span class="line"></span><br><span class="line">        OkHttpClient client = <span class="keyword">builder.build();</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword"> </span>       Retrofit retrofit_baimi = new Retrofit.<span class="keyword">Builder()</span></span><br><span class="line"><span class="keyword"> </span>               .<span class="keyword">baseUrl(BASE_URL+"/")</span></span><br><span class="line"><span class="keyword"> </span>               .client(client)</span><br><span class="line">                .<span class="keyword">addConverterFactory(CustomGsonConverterFactory.create())</span></span><br><span class="line"><span class="keyword"> </span>               .<span class="keyword">addCallAdapterFactory(RxJava2CallAdapterFactory.create())</span></span><br><span class="line"><span class="keyword"> </span>               .<span class="keyword">build();</span></span><br><span class="line"><span class="keyword"> </span>       mSmartApi = retrofit_baimi.create(SmartApi.class)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>OkHttpClient 采用build模式 链式设置</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">addInterceptor(<span class="name">new</span> Interceptor() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            public Response intercept(<span class="name">Chain</span> chain) throws IOException &#123;</span><br><span class="line">                L.d(<span class="string">"Interceptor"</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">                // Request customization: add request headers</span><br><span class="line">                String Nonce = String.valueOf(<span class="name">System</span>.currentTimeMillis())<span class="comment">;</span></span><br><span class="line">                String CheckSum = EncryptUtils.encryptSHA1ToString(<span class="string">"DA3B979ABB5A4FC0B65382BC1A344A84"</span>+Nonce)<span class="comment">;</span></span><br><span class="line">                Request.Builder requestBuilder = chain.request().newBuilder()</span><br><span class="line">                        .addHeader(<span class="string">"AppKey"</span>, <span class="string">"10000001"</span>)</span><br><span class="line">                        .addHeader(<span class="string">"Nonce"</span>, Nonce)</span><br><span class="line">                        .addHeader(<span class="string">"CheckSum"</span>, CheckSum)</span><br><span class="line">                        .addHeader(<span class="string">"x-session-token"</span>, BasePreference.getInstance().getToken())</span><br><span class="line">                        .addHeader(<span class="string">"AppSecret"</span>, <span class="string">"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX"</span>)<span class="comment">;</span></span><br><span class="line"></span><br><span class="line">                Request request = requestBuilder.build()<span class="comment">;</span></span><br><span class="line">                return chain.proceed(<span class="name">request</span>)<span class="comment">;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>拦截请求 加入我们的header</p>
<figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (BuildConfig.DEBUG) &#123;</span><br><span class="line">            <span class="comment">// Log信息拦截器</span></span><br><span class="line">            HttpLoggingInterceptor loggingInterceptor = <span class="keyword">new</span> <span class="built_in">HttpLoggingInterceptor</span>();</span><br><span class="line">            loggingInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</span><br><span class="line">            <span class="comment">//设置 Debug Log 模式</span></span><br><span class="line">            builder.addInterceptor(loggingInterceptor);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>如果是开发配置下 拦截body级别日志 打印信息方便调试</p>
<p><code>注意</code> 日志拦截器建议最后添加 才能拦截到添加header之后的日志</p>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[android 模块化统一管理依赖库版本号]]></title>
      <url>http://mzeht.com/2017/06/01/android-%E6%A8%A1%E5%9D%97%E5%8C%96%E7%BB%9F%E4%B8%80%E7%AE%A1%E7%90%86%E4%BE%9D%E8%B5%96%E5%BA%93%E7%89%88%E6%9C%AC%E5%8F%B7/</url>
      <content type="html"><![CDATA[<p>在android项目开发中 不断提炼出公用模块，方便以后的开发引入，很是方便，但是编译过程中不可避免遇到版本冲突的情况，<br>最常见的是sdk版本 v4 v7库版本，这种情况下 可以利用gradle配置统一管理</p>
<p>在项目根目录下新建 <code>common_config.gradle</code></p>
<h2 id="配置统一的版本号"><a href="#配置统一的版本号" class="headerlink" title="配置统一的版本号"></a>配置统一的版本号</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 所有Module 的共享变量，这里修改了，全部地方都能修改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">project<span class="selector-class">.ext</span> &#123;</span><br><span class="line">    <span class="comment">//1.关于SDK version</span></span><br><span class="line">    compileSdkVersion = <span class="number">25</span></span><br><span class="line">    buildToolsVersion = <span class="string">'25.0.3'</span></span><br><span class="line"></span><br><span class="line">    minSdkVersion = <span class="number">16</span></span><br><span class="line">    targetSdkVersion = <span class="number">25</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//2.关于Debug和Realease 的不同配置</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//3.指定Java version</span></span><br><span class="line">    sourceCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line">    targetCompatibility = JavaVersion.VERSION_1_8</span><br><span class="line"></span><br><span class="line">    <span class="comment">//4.support Lib Version ,最好全部使用同一个版本号</span></span><br><span class="line">    supportLibraryVersion = <span class="string">'25.3.1'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//5.</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><p>在project中引入上述文件</p>
<figure class="highlight plain"><figcaption><span>Top-level build file where you can add configuration options common to all sub-projects/modules.</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">buildscript &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">        classpath &apos;com.android.tools.build:gradle:2.3.2&apos;</span><br><span class="line">//        classpath &apos;com.neenbedankt.gradle.plugins:android-apt:1.8&apos;</span><br><span class="line">        // NOTE: Do not place your application dependencies here; they belong</span><br><span class="line">        // in the individual module build.gradle files</span><br><span class="line">        classpath &apos;org.greenrobot:greendao-gradle-plugin:3.2.1&apos;</span><br><span class="line">        classpath &apos;com.jakewharton:butterknife-gradle-plugin:8.4.0&apos;</span><br><span class="line">        //lambda</span><br><span class="line">        classpath &apos;me.tatarka:gradle-retrolambda:3.6.0&apos;</span><br><span class="line">        //lombok</span><br><span class="line">        classpath &apos;me.tatarka.retrolambda.projectlombok:lombok.ast:0.2.3.a2&apos;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    configurations.classpath.exclude group: &apos;com.android.tools.external.lombok&apos;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 工程中所有的module 都将能使用common_config 中的配置</span><br><span class="line"> */</span><br><span class="line">subprojects &#123;</span><br><span class="line">    apply from: &quot;$&#123;project.rootDir&#125;/common_config.gradle&quot;</span><br><span class="line">    dependencies &#123;</span><br><span class="line">//        testCompile &apos;junit:junit:4.12&apos;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123; url &quot;https://jitpack.io&quot; &#125;</span><br><span class="line">       </span><br><span class="line">        mavenCentral()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">task clean(type: Delete) &#123;</span><br><span class="line">    delete rootProject.buildDir</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">compileSdkVersion project<span class="selector-class">.ext</span><span class="selector-class">.compileSdkVersion</span></span><br><span class="line">   buildToolsVersion project<span class="selector-class">.ext</span><span class="selector-class">.buildToolsVersion</span></span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   minSdkVersion project<span class="selector-class">.ext</span><span class="selector-class">.minSdkVersion</span></span><br><span class="line">       targetSdkVersion project<span class="selector-class">.ext</span><span class="selector-class">.targetSdkVersion</span></span><br><span class="line">       </span><br><span class="line">       </span><br><span class="line">       compile <span class="string">"com.android.support:appcompat-v7:$project.ext.supportLibraryVersion"</span></span><br><span class="line">   compile <span class="string">"com.android.support:design:$project.ext.supportLibraryVersion"</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 技术 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[升级到rxjava2+retrofit2]]></title>
      <url>http://mzeht.com/2017/06/01/%E5%8D%87%E7%BA%A7%E5%88%B0rxjava2-retrofit2/</url>
      <content type="html"><![CDATA[<p>之前项目使用rxjava1和retorfit2，抽空在新项目升级到韧性java2</p>
<h2 id="依赖文件"><a href="#依赖文件" class="headerlink" title="依赖文件"></a>依赖文件</h2><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">    </span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.squareup.okhttp3:okhttp:3.4.2'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.google.code.gson:gson:2.7'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'io.reactivex.rxjava2:rxjava:2.0.7'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'io.reactivex.rxjava2:rxandroid:2.0.1'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:retrofit:2.3.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:converter-gson:2.2.0'</span></span><br><span class="line"><span class="comment">//    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'</span></span><br><span class="line"><span class="comment">//    compile 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:adapter-rxjava2:2.2.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:retrofit-converters:2.1.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.squareup.okhttp3:logging-interceptor:3.4.2'</span></span><br><span class="line"><span class="comment">//    compile 'com.trello:rxlifecycle:1.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.trello.rxlifecycle2:rxlifecycle:2.1.0'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    compile 'com.trello:rxlifecycle-android:1.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.trello.rxlifecycle2:rxlifecycle-android:2.1.0'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//    compile 'com.trello:rxlifecycle-components:1.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.trello.rxlifecycle2:rxlifecycle-components:2.1.0'</span></span><br></pre></td></tr></table></figure>
<p>1.<code>rxlifecycle</code> 也升级到<code>rxlifecycle2</code> 一个rxjava生命周期管理库</p>
<p>2.retrofit2 支持rxjava2之前</p>
<p>采用</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'</span></span><br></pre></td></tr></table></figure>
<p>之后</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span> <span class="string">'com.squareup.retrofit2:adapter-rxjava2:2.2.0'</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Gitflow 工作流]]></title>
      <url>http://mzeht.com/2017/05/28/Gitflow-%E5%B7%A5%E4%BD%9C%E6%B5%81/</url>
      <content type="html"><![CDATA[<p>##简介</p>
<p><img src="http://nvie.com/img/git-model@2x.png" alt><br>[slide]</p>
<ol>
<li><code>feature</code>（多个、玫红）。主要是自己玩了，差不多的时候要合并回develop去。从不与master交互。</li>
<li><code>develop</code>（1个、黄色）。主要是和feature以及release交互。</li>
<li><code>release</code>（同一时间1个、绿色）。总是基于develop，最后又合并回develop。当然对应的tag跑到master这边去了。生命周期很短，只是为了发布</li>
<li><code>hotfix</code>（同一时间1个、红色）。总是基于master，并最后合并到master和develop。生命周期较短，用了修复bug或小粒度修改发布。</li>
<li><code>master</code>（1个蓝色）。没有什么东西，仅是一些关联的tag，因从不在master上开发。</li>
</ol>
<p>[slide]</p>
<ol>
<li><code>master</code>和<code>develop</code>都具有象征意义。master分支上的代码总是稳定的（stable build），随时可以发布出去。develop上的代码总是从feature上合并过来的，可以进行Nightly Builds，但不直接在develop上进行开发。当develop上的feature足够多以至于可以进行新版本的发布时，可以创建release分支</li>
<li><code>release</code>分支基于develop，进行很简单的修改后就被合并到master，并打上tag，表示可以发布了。紧接着release将被合并到develop；此时develop可能往前跑了一段，出现合并冲突，需要手工解决冲突后再次合并。这步完成后就删除release分支。</li>
<li>当从已发布版本中发现bug要修复时，就应用到<code>hotfix</code>分支了。hotfix基于master分支，完成bug修复或紧急修改后，要merge回master，打上一个新的tag，并merge回develop，删除hotfix分支。</li>
<li>由此可见release和hotfix的生命周期都较短，master/develop虽然总是存在但却不常使用。</li>
</ol>
<p>[slide]</p>
<h2 id="分支详解"><a href="#分支详解" class="headerlink" title="分支详解"></a>分支详解</h2><h3 id="主分支-（Historical-Branches）"><a href="#主分支-（Historical-Branches）" class="headerlink" title="主分支 （Historical Branches）"></a>主分支 （Historical Branches）</h3><p><img src="http://upload-images.jianshu.io/upload_images/54009-70ef16000c0832b0.jpg" alt></p>
<ol>
<li>主分支是所有开发活动的核心分支。所有的开发活动产生的输出物最终都会反映到主分支的代码中。主分支分为master分支和development分支。</li>
</ol>
<p>[slide]</p>
<h4 id="master-分支"><a href="#master-分支" class="headerlink" title="master 分支"></a>master 分支</h4><p>master分支上存放的应该是随时可供在生产环境中部署的代码（Production Ready state）。当开发活动告一段落，产生了一份新的可供部署的代码时，master分支上的代码会被更新。同时，每一次更新，最好添加对应的版本号标签（TAG）。<br>[slide]</p>
<h4 id="develop分支"><a href="#develop分支" class="headerlink" title="develop分支"></a>develop分支</h4><p>develop分支是保存当前最新开发成果的分支。通常这个分支上的代码也是可进行每日夜间发布的代码（Nightly build）。因此这个分支有时也可以被称作整合分支（integration branch）。</p>
<p>[slide]</p>
<h2 id="辅助分支"><a href="#辅助分支" class="headerlink" title="辅助分支"></a>辅助分支</h2><p><img src="http://upload-images.jianshu.io/upload_images/54009-7265a72025bddb1a.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<ol>
<li>用于开发新功能时所使用的feature分支；</li>
<li>用于辅助版本发布的release分支；</li>
<li>用于修正生产代码中的缺陷的hotfix分支。</li>
</ol>
<p>[slide]</p>
<h3 id="feature-分支"><a href="#feature-分支" class="headerlink" title="feature 分支"></a>feature 分支</h3><p>使用规范：</p>
<ol>
<li>可以从develop分支发起feature分支</li>
<li>代码必须合并回develop分支</li>
<li>feature分支（有时也可以被叫做“topic分支”）通常是在开发一项新的软件功能的时候使用，这个分支上的代码变更最终合并回develop分支或者干脆被抛弃掉（例如实验性且效果不好的代码变更）</li>
</ol>
<p>[slide]</p>
<h3 id="release分支"><a href="#release分支" class="headerlink" title="release分支"></a>release分支</h3><p><img src="http://upload-images.jianshu.io/upload_images/54009-be502bd4658d9d79.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<ol>
<li>可以从develop分支派生</li>
<li>必须合并回develop分支和master分支</li>
<li>分支命名惯例：release-*</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 文档 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[jenkins项目打包发布配置(srpingboot-jar,war,apk)]]></title>
      <url>http://mzeht.com/2017/05/28/jenkins%E5%90%8E%E5%8F%B0%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E5%8F%91%E5%B8%83%E9%85%8D%E7%BD%AE-srpingboot-jar-war/</url>
      <content type="html"><![CDATA[<h2 id="两种不同打包"><a href="#两种不同打包" class="headerlink" title="两种不同打包"></a>两种不同打包</h2><p>jar类 springboot项目</p>
<ol>
<li>springboot框架</li>
<li>生成jar包</li>
<li>内置tomcat</li>
<li>运行环境 java</li>
</ol>
<p>war类 springmvc项目</p>
<ol>
<li>springmvc</li>
<li>生成war包</li>
<li>需要外部tomcat</li>
</ol>
<h2 id="jar类配置"><a href="#jar类配置" class="headerlink" title="jar类配置"></a>jar类配置</h2><ol>
<li>配置代码分支来源</li>
<li>打包</li>
<li>传输</li>
<li>启动</li>
</ol>
<h3 id="配置代码"><a href="#配置代码" class="headerlink" title="配置代码"></a>配置代码</h3><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/33852371.jpg" alt></p>
<h3 id="传输"><a href="#传输" class="headerlink" title="传输"></a>传输</h3><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/21535521.jpg" alt></p>
<h3 id="邮件"><a href="#邮件" class="headerlink" title="邮件"></a>邮件</h3><h3 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">#defined</span></span><br><span class="line">ID=`ps -ef|grep <span class="string">"official-web-0.0.1-SNAPSHOT"</span> | grep <span class="string">"java"</span>| awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$ID</span></span><br><span class="line"><span class="built_in">kill</span> -9 <span class="variable">$ID</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"kill <span class="variable">$ID</span> finish"</span></span><br><span class="line">nohup java -jar official-web-0.0.1-SNAPSHOT.jar &amp;</span><br><span class="line">....</span><br></pre></td></tr></table></figure>
<p>[slide]</p>
<h2 id="war类配置"><a href="#war类配置" class="headerlink" title="war类配置"></a>war类配置</h2><ol>
<li>配置代码分支来源</li>
<li>打包</li>
<li>传输</li>
<li>启动</li>
</ol>
<p>[slide]</p>
<h3 id="配置代码-1"><a href="#配置代码-1" class="headerlink" title="配置代码"></a>配置代码</h3><h3 id="打包-1"><a href="#打包-1" class="headerlink" title="打包"></a>打包</h3><h3 id="传输-1"><a href="#传输-1" class="headerlink" title="传输"></a>传输</h3><h3 id="脚本-1"><a href="#脚本-1" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !bin/sh</span></span><br><span class="line"><span class="comment"># jenkins传输war包位置</span></span><br><span class="line">jenkins_dir=<span class="string">"/root/jenkinsproject"</span></span><br><span class="line"><span class="comment"># war_name="appservice.war"</span></span><br><span class="line"><span class="comment">#项目名称</span></span><br><span class="line">project_name=<span class="string">"appservice"</span></span><br><span class="line"><span class="comment">#tomcat路径</span></span><br><span class="line">tomcat_dir=<span class="string">"/usr/tomcat/apache-tomcat-7.0.42"</span></span><br><span class="line"><span class="comment"># 当前脚本名称,查找进称号需要排除</span></span><br><span class="line">shell_name=<span class="string">"appservice-deploy.sh"</span></span><br><span class="line">pid=`ps -ef | grep <span class="variable">$tomcat_dir</span> | grep -v <span class="variable">$shell_name</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">echo <span class="string">"old pid:"</span>.<span class="variable">$pid</span></span><br><span class="line"><span class="keyword">if</span> test <span class="string">"$pid"</span></span><br><span class="line">then</span><br><span class="line">  echo <span class="string">"kill old pid: $pid ing"</span></span><br><span class="line">  kill -<span class="number">9</span> <span class="variable">$pid</span></span><br><span class="line">  <span class="comment"># 睡眠5s</span></span><br><span class="line">  sleep <span class="number">20</span>s</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        echo <span class="string">"not find old pid"</span></span><br><span class="line">fi</span><br><span class="line"><span class="comment">#删除旧的war包和生成文件夹</span></span><br><span class="line">rm -rf <span class="variable">$tomcat_dir</span><span class="regexp">/webapps/</span><span class="variable">$project_name</span>*</span><br><span class="line"><span class="comment"># 拷贝新的war包</span></span><br><span class="line">cp <span class="variable">$jenkins_dir</span><span class="regexp">/$project_name.war  $tomcat_dir/</span>webapps</span><br><span class="line"><span class="comment">#启动tomcat</span></span><br><span class="line">sh <span class="variable">$tomcat_dir</span><span class="regexp">/bin/</span>startup.sh</span><br><span class="line">sleep <span class="number">10</span>s</span><br><span class="line"><span class="comment"># 检查启动</span></span><br><span class="line">newpid=`ps -ef | grep <span class="variable">$tomcat_dir</span> | grep -v <span class="variable">$shell_name</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> test <span class="string">"$newpid"</span></span><br><span class="line">then</span><br><span class="line">        echo <span class="string">"new pid:"</span>.<span class="variable">$newpid</span></span><br><span class="line"><span class="comment">#    刷新nginx</span></span><br><span class="line">    <span class="regexp">/usr/</span>local<span class="regexp">/nginx/</span>sbin<span class="regexp">/nginx -c /u</span>sr<span class="regexp">/local/</span>nginx<span class="regexp">/conf/</span>nginx.conf -s reload</span><br><span class="line">        <span class="keyword">exit</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">        echo <span class="string">"not find new pid"</span></span><br><span class="line">        <span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br><span class="line">....</span><br></pre></td></tr></table></figure>
<p>[slide]</p>
<h2 id="apk类配置"><a href="#apk类配置" class="headerlink" title="apk类配置"></a>apk类配置</h2><ol>
<li>配置代码分支来源</li>
<li>打包</li>
<li>传输</li>
</ol>
<p>[slide]</p>
<h3 id="配置代码-2"><a href="#配置代码-2" class="headerlink" title="配置代码"></a>配置代码</h3><h3 id="打包-2"><a href="#打包-2" class="headerlink" title="打包"></a>打包</h3><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/67349864.jpg" alt></p>
<h3 id="传输-2"><a href="#传输-2" class="headerlink" title="传输"></a>传输</h3><h3 id="脚本-2"><a href="#脚本-2" class="headerlink" title="脚本"></a>脚本</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">applicationVariants.all &#123; variant -&gt;</span><br><span class="line">    if (variant.buildType.name.equals('release')) &#123;</span><br><span class="line">        variant.outputs.each &#123; output -&gt;</span><br><span class="line">            def outputFile = output.outputFile</span><br><span class="line">            if (outputFile != null &amp;&amp; outputFile.name.endsWith('.apk')) &#123;</span><br><span class="line">                def fileName = "baimimobile_v$&#123;defaultConfig.versionName&#125;_$&#123;buildTime()&#125;.apk"</span><br><span class="line">                output.outputFile = new File(outputFile.parent, fileName)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">BUILD SUCCESSFUL</span><br><span class="line"></span><br><span class="line">Total <span class="string">time:</span> <span class="number">1</span> mins <span class="number">27.55</span> secs</span><br><span class="line">Build step <span class="string">'Invoke Gradle script'</span> changed build result to SUCCESS</span><br><span class="line">Root directory to find files to <span class="string">upload :</span> <span class="regexp">/Users/</span>wpmac<span class="regexp">/.jenkins/</span>workspace/baimi-mobile-android</span><br><span class="line">found remote <span class="string">files :</span> [app<span class="regexp">/build/</span>outputs<span class="regexp">/apk/</span>baimimobile_v1<span class="number">.1</span><span class="number">.6</span>_2017<span class="number">-05</span><span class="number">-18</span>_1126228.apk]</span><br><span class="line">Deploying archive app<span class="regexp">/build/</span>outputs<span class="regexp">/apk/</span>baimimobile_v1<span class="number">.1</span><span class="number">.6</span>_2017<span class="number">-05</span><span class="number">-18</span>_1126228.apk to fir.im (description=<span class="string">"ecf02a33f60e3ad65c2bc0cae240c7f1"</span>, groups=<span class="string">""</span>)</span><br><span class="line">You can use ENV var $FIR_DOWNLOAD_URL <span class="keyword">in</span> other plugins.</span><br><span class="line">Deployment to fir.im Done.</span><br><span class="line"> Your app <span class="keyword">short</span> <span class="string">url:</span> <span class="string">http:</span><span class="comment">//fir.im/baimimobile</span></span><br><span class="line"><span class="string">Finished:</span> SUCCESS</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[greendao 数据库升级]]></title>
      <url>http://mzeht.com/2017/05/28/greendao-%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8D%87%E7%BA%A7/</url>
      <content type="html"><![CDATA[<p>创建一个数据库帮助类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyOpenHelper</span> <span class="keyword">extends</span> <span class="title">DaoMaster</span>.<span class="title">OpenHelper</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyOpenHelper</span><span class="params">(Context context, String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, name);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyOpenHelper</span><span class="params">(Context context, String name, SQLiteDatabase.CursorFactory factory)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, name, factory);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(Database db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line">        L.d(<span class="string">"db version update from "</span> + oldVersion + <span class="string">" to "</span> + newVersion);</span><br><span class="line">        <span class="keyword">switch</span> (oldVersion)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">                CollectAdditionDao.createTable(db,<span class="keyword">true</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>修改greenDao的版本号，在内层的gradle中的buildTypes节点下添加</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">greendao &#123;</span><br><span class="line">       <span class="comment">// schemaVersion 1</span></span><br><span class="line">       schemaVersion <span class="number">2</span><span class="comment">//@add 增值服务表</span></span><br><span class="line">       targetGenDir 'src/main/java'</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p>更新方式</p>
<p>1.删除再新建</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除原表重新再建立一个表</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dropAndCreate</span><span class="params">(Database db)</span></span>&#123;</span><br><span class="line">        DaoMaster.dropAllTables(db, <span class="literal">true</span>);</span><br><span class="line">        DaoMaster.createAllTables(db, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>2.备份数据库，建立新数据库，然后将备份导入</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 备份还原</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     * @param daoClasses</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> migrate(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        generateTempTables(db, daoClasses);</span><br><span class="line">        DaoMaster.dropAllTables(db, <span class="keyword">true</span>);</span><br><span class="line">        DaoMaster.createAllTables(db, <span class="keyword">false</span>);</span><br><span class="line">        restoreData(db, daoClasses);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据库备份</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     * @param daoClasses</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> generateTempTables(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; daoClasses.length; i++) &#123;</span><br><span class="line">            DaoConfig daoConfig = <span class="keyword">new</span> DaoConfig(db, daoClasses[i]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">String</span> divider = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">String</span> tableName = daoConfig.tablename;</span><br><span class="line">            <span class="keyword">String</span> tempTableName = daoConfig.tablename.<span class="built_in">concat</span>(<span class="string">"_TEMP"</span>);</span><br><span class="line">            ArrayList&lt;<span class="keyword">String</span>&gt; properties = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            StringBuilder createTableStringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            createTableStringBuilder.<span class="built_in">append</span>(<span class="string">"CREATE TABLE "</span>).<span class="built_in">append</span>(tempTableName).<span class="built_in">append</span>(<span class="string">" ("</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; daoConfig.properties.length; j++) &#123;</span><br><span class="line">                <span class="keyword">String</span> columnName = daoConfig.properties[j].columnName;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (getColumns(db, tableName).contains(columnName)) &#123;</span><br><span class="line">                    properties.<span class="built_in">add</span>(columnName);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">String</span> type = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        type = getTypeByClass(daoConfig.properties[j].type);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    createTableStringBuilder.<span class="built_in">append</span>(divider).<span class="built_in">append</span>(columnName).<span class="built_in">append</span>(<span class="string">" "</span>).<span class="built_in">append</span>(type);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (daoConfig.properties[j].primaryKey) &#123;</span><br><span class="line">                        createTableStringBuilder.<span class="built_in">append</span>(<span class="string">" PRIMARY KEY"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    divider = <span class="string">","</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            createTableStringBuilder.<span class="built_in">append</span>(<span class="string">");"</span>);</span><br><span class="line"></span><br><span class="line">            db.execSQL(createTableStringBuilder.toString());</span><br><span class="line"></span><br><span class="line">            StringBuilder insertTableStringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">"INSERT INTO "</span>).<span class="built_in">append</span>(tempTableName).<span class="built_in">append</span>(<span class="string">" ("</span>);</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, properties));</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">") SELECT "</span>);</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, properties));</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">" FROM "</span>).<span class="built_in">append</span>(tableName).<span class="built_in">append</span>(<span class="string">";"</span>);</span><br><span class="line"></span><br><span class="line">            db.execSQL(insertTableStringBuilder.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据库恢复</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     * @param daoClasses</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> restoreData(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; daoClasses.length; i++) &#123;</span><br><span class="line">            DaoConfig daoConfig = <span class="keyword">new</span> DaoConfig(db, daoClasses[i]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">String</span> tableName = daoConfig.tablename;</span><br><span class="line">            <span class="keyword">String</span> tempTableName = daoConfig.tablename.<span class="built_in">concat</span>(<span class="string">"_TEMP"</span>);</span><br><span class="line">            ArrayList&lt;<span class="keyword">String</span>&gt; properties = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; daoConfig.properties.length; j++) &#123;</span><br><span class="line">                <span class="keyword">String</span> columnName = daoConfig.properties[j].columnName;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (getColumns(db, tempTableName).contains(columnName)) &#123;</span><br><span class="line">                    properties.<span class="built_in">add</span>(columnName);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            StringBuilder insertTableStringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">"INSERT INTO "</span>).<span class="built_in">append</span>(tableName).<span class="built_in">append</span>(<span class="string">" ("</span>);</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, properties));</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">") SELECT "</span>);</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, properties));</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">" FROM "</span>).<span class="built_in">append</span>(tempTableName).<span class="built_in">append</span>(<span class="string">";"</span>);</span><br><span class="line"></span><br><span class="line">            StringBuilder dropTableStringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            dropTableStringBuilder.<span class="built_in">append</span>(<span class="string">"DROP TABLE "</span>).<span class="built_in">append</span>(tempTableName);</span><br><span class="line"></span><br><span class="line">            db.execSQL(insertTableStringBuilder.toString());</span><br><span class="line">            db.execSQL(dropTableStringBuilder.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> getTypeByClass(Class&lt;?&gt; type) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (type.equals(<span class="keyword">String</span>.class)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"TEXT"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (type.equals(Long.class) || type.equals(Integer.class) || type.equals(<span class="keyword">long</span>.class)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"INTEGER"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (type.equals(Boolean.class)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"BOOLEAN"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Exception exception =</span><br><span class="line">                <span class="keyword">new</span> Exception(CONVERSION_CLASS_NOT_FOUND_EXCEPTION.<span class="built_in">concat</span>(<span class="string">" - Class: "</span>).<span class="built_in">concat</span>(type.toString()));</span><br><span class="line">        <span class="keyword">throw</span> exception;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;<span class="keyword">String</span>&gt; getColumns(Database db, <span class="keyword">String</span> tableName) &#123;</span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; columns = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Cursor <span class="built_in">cursor</span> = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">cursor</span> = db.rawQuery(<span class="string">"SELECT * FROM "</span> + tableName + <span class="string">" limit 1"</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">cursor</span> != <span class="keyword">null</span>) &#123;</span><br><span class="line">                columns = <span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="built_in">cursor</span>.getColumnNames()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.v(tableName, e.getMessage(), e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">cursor</span> != <span class="keyword">null</span>) <span class="built_in">cursor</span>.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> columns;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>3.对比表差异，向原表中直接插入column</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对比差异，在原表中直接添加column,赞不做删除操作</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     * @param daoClasses</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> contrastDiff(Database db,ArrayList&lt;<span class="keyword">String</span>&gt;properties, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses)&#123;</span><br><span class="line">     <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;daoClasses.length;i++)&#123;</span><br><span class="line">         DaoConfig daoConfig = <span class="keyword">new</span> DaoConfig(db, daoClasses[i]);</span><br><span class="line">         <span class="keyword">String</span> tableName=daoConfig.tablename;</span><br><span class="line">         <span class="keyword">if</span>(properties!=<span class="keyword">null</span>&amp;&amp;properties.<span class="built_in">size</span>()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">             ArrayList&lt;<span class="keyword">String</span>&gt;tem=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">             StringBuilder sqlBuilder=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">             <span class="keyword">for</span>(<span class="built_in">int</span> j=<span class="number">0</span>;j&lt;properties.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">                 <span class="keyword">if</span>(getColumns(db,tableName).contains(properties.<span class="built_in">get</span>(j)))&#123;</span><br><span class="line">                     <span class="keyword">continue</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">                 tem.<span class="built_in">add</span>(properties.<span class="built_in">get</span>(j));</span><br><span class="line">             &#125;</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(<span class="string">"INSERT INTO "</span>).<span class="built_in">append</span>(tableName).<span class="built_in">append</span>(<span class="string">" ("</span>);</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, tem));</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(<span class="string">") SELECT "</span>);</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, tem));</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(<span class="string">" FROM "</span>).<span class="built_in">append</span>(tableName).<span class="built_in">append</span>(<span class="string">";"</span>);</span><br><span class="line">             db.execSQL(sqlBuilder.toString());</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>完整的数据库升级帮助类</p>
<figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * description: greenDao升级帮助</span></span><br><span class="line"><span class="comment"> * author: bear .</span></span><br><span class="line"><span class="comment"> * Created date:  2017/5/17.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> class MigrationHelper &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> CONVERSION_CLASS_NOT_FOUND_EXCEPTION =</span><br><span class="line">            <span class="string">"MIGRATION HELPER - CLASS DOESN'T MATCH WITH THE CURRENT PARAMETERS"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> MigrationHelper instance;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> MigrationHelper getInstance() &#123;</span><br><span class="line">        <span class="keyword">if</span> (instance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            instance = <span class="keyword">new</span> MigrationHelper();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> instance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 备份还原</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     * @param daoClasses</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> migrate(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        generateTempTables(db, daoClasses);</span><br><span class="line">        DaoMaster.dropAllTables(db, <span class="keyword">true</span>);</span><br><span class="line">        DaoMaster.createAllTables(db, <span class="keyword">false</span>);</span><br><span class="line">        restoreData(db, daoClasses);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 对比差异，在原表中直接添加column,赞不做删除操作</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     * @param daoClasses</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> contrastDiff(Database db,ArrayList&lt;<span class="keyword">String</span>&gt;properties, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses)&#123;</span><br><span class="line">     <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;daoClasses.length;i++)&#123;</span><br><span class="line">         DaoConfig daoConfig = <span class="keyword">new</span> DaoConfig(db, daoClasses[i]);</span><br><span class="line">         <span class="keyword">String</span> tableName=daoConfig.tablename;</span><br><span class="line">         <span class="keyword">if</span>(properties!=<span class="keyword">null</span>&amp;&amp;properties.<span class="built_in">size</span>()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">             ArrayList&lt;<span class="keyword">String</span>&gt;tem=<span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">             StringBuilder sqlBuilder=<span class="keyword">new</span> StringBuilder();</span><br><span class="line">             <span class="keyword">for</span>(<span class="built_in">int</span> j=<span class="number">0</span>;j&lt;properties.<span class="built_in">size</span>();j++)&#123;</span><br><span class="line">                 <span class="keyword">if</span>(getColumns(db,tableName).contains(properties.<span class="built_in">get</span>(j)))&#123;</span><br><span class="line">                     <span class="keyword">continue</span>;</span><br><span class="line">                 &#125;</span><br><span class="line">                 tem.<span class="built_in">add</span>(properties.<span class="built_in">get</span>(j));</span><br><span class="line">             &#125;</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(<span class="string">"INSERT INTO "</span>).<span class="built_in">append</span>(tableName).<span class="built_in">append</span>(<span class="string">" ("</span>);</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, tem));</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(<span class="string">") SELECT "</span>);</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, tem));</span><br><span class="line">             sqlBuilder.<span class="built_in">append</span>(<span class="string">" FROM "</span>).<span class="built_in">append</span>(tableName).<span class="built_in">append</span>(<span class="string">";"</span>);</span><br><span class="line">             db.execSQL(sqlBuilder.toString());</span><br><span class="line">         &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除原表重新再建立一个表</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> dropAndCreate(Database db)&#123;</span><br><span class="line">        DaoMaster.dropAllTables(db, <span class="keyword">true</span>);</span><br><span class="line">        DaoMaster.createAllTables(db, <span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据库备份</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     * @param daoClasses</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> generateTempTables(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; daoClasses.length; i++) &#123;</span><br><span class="line">            DaoConfig daoConfig = <span class="keyword">new</span> DaoConfig(db, daoClasses[i]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">String</span> divider = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">String</span> tableName = daoConfig.tablename;</span><br><span class="line">            <span class="keyword">String</span> tempTableName = daoConfig.tablename.<span class="built_in">concat</span>(<span class="string">"_TEMP"</span>);</span><br><span class="line">            ArrayList&lt;<span class="keyword">String</span>&gt; properties = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">            StringBuilder createTableStringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            createTableStringBuilder.<span class="built_in">append</span>(<span class="string">"CREATE TABLE "</span>).<span class="built_in">append</span>(tempTableName).<span class="built_in">append</span>(<span class="string">" ("</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; daoConfig.properties.length; j++) &#123;</span><br><span class="line">                <span class="keyword">String</span> columnName = daoConfig.properties[j].columnName;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (getColumns(db, tableName).contains(columnName)) &#123;</span><br><span class="line">                    properties.<span class="built_in">add</span>(columnName);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">String</span> type = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        type = getTypeByClass(daoConfig.properties[j].type);</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    createTableStringBuilder.<span class="built_in">append</span>(divider).<span class="built_in">append</span>(columnName).<span class="built_in">append</span>(<span class="string">" "</span>).<span class="built_in">append</span>(type);</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">if</span> (daoConfig.properties[j].primaryKey) &#123;</span><br><span class="line">                        createTableStringBuilder.<span class="built_in">append</span>(<span class="string">" PRIMARY KEY"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    divider = <span class="string">","</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            createTableStringBuilder.<span class="built_in">append</span>(<span class="string">");"</span>);</span><br><span class="line"></span><br><span class="line">            db.execSQL(createTableStringBuilder.toString());</span><br><span class="line"></span><br><span class="line">            StringBuilder insertTableStringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">"INSERT INTO "</span>).<span class="built_in">append</span>(tempTableName).<span class="built_in">append</span>(<span class="string">" ("</span>);</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, properties));</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">") SELECT "</span>);</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, properties));</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">" FROM "</span>).<span class="built_in">append</span>(tableName).<span class="built_in">append</span>(<span class="string">";"</span>);</span><br><span class="line"></span><br><span class="line">            db.execSQL(insertTableStringBuilder.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 数据库恢复</span></span><br><span class="line"><span class="comment">     * @param db</span></span><br><span class="line"><span class="comment">     * @param daoClasses</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">void</span> restoreData(Database db, Class&lt;? extends AbstractDao&lt;?, ?&gt;&gt;... daoClasses) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; daoClasses.length; i++) &#123;</span><br><span class="line">            DaoConfig daoConfig = <span class="keyword">new</span> DaoConfig(db, daoClasses[i]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">String</span> tableName = daoConfig.tablename;</span><br><span class="line">            <span class="keyword">String</span> tempTableName = daoConfig.tablename.<span class="built_in">concat</span>(<span class="string">"_TEMP"</span>);</span><br><span class="line">            ArrayList&lt;<span class="keyword">String</span>&gt; properties = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="built_in">int</span> j = <span class="number">0</span>; j &lt; daoConfig.properties.length; j++) &#123;</span><br><span class="line">                <span class="keyword">String</span> columnName = daoConfig.properties[j].columnName;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (getColumns(db, tempTableName).contains(columnName)) &#123;</span><br><span class="line">                    properties.<span class="built_in">add</span>(columnName);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            StringBuilder insertTableStringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">"INSERT INTO "</span>).<span class="built_in">append</span>(tableName).<span class="built_in">append</span>(<span class="string">" ("</span>);</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, properties));</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">") SELECT "</span>);</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(TextUtils.<span class="built_in">join</span>(<span class="string">","</span>, properties));</span><br><span class="line">            insertTableStringBuilder.<span class="built_in">append</span>(<span class="string">" FROM "</span>).<span class="built_in">append</span>(tempTableName).<span class="built_in">append</span>(<span class="string">";"</span>);</span><br><span class="line"></span><br><span class="line">            StringBuilder dropTableStringBuilder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"></span><br><span class="line">            dropTableStringBuilder.<span class="built_in">append</span>(<span class="string">"DROP TABLE "</span>).<span class="built_in">append</span>(tempTableName);</span><br><span class="line"></span><br><span class="line">            db.execSQL(insertTableStringBuilder.toString());</span><br><span class="line">            db.execSQL(dropTableStringBuilder.toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> getTypeByClass(Class&lt;?&gt; type) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (type.equals(<span class="keyword">String</span>.class)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"TEXT"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (type.equals(Long.class) || type.equals(Integer.class) || type.equals(<span class="keyword">long</span>.class)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"INTEGER"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (type.equals(Boolean.class)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"BOOLEAN"</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Exception exception =</span><br><span class="line">                <span class="keyword">new</span> Exception(CONVERSION_CLASS_NOT_FOUND_EXCEPTION.<span class="built_in">concat</span>(<span class="string">" - Class: "</span>).<span class="built_in">concat</span>(type.toString()));</span><br><span class="line">        <span class="keyword">throw</span> exception;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> List&lt;<span class="keyword">String</span>&gt; getColumns(Database db, <span class="keyword">String</span> tableName) &#123;</span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; columns = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        Cursor <span class="built_in">cursor</span> = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="built_in">cursor</span> = db.rawQuery(<span class="string">"SELECT * FROM "</span> + tableName + <span class="string">" limit 1"</span>, <span class="keyword">null</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">cursor</span> != <span class="keyword">null</span>) &#123;</span><br><span class="line">                columns = <span class="keyword">new</span> ArrayList&lt;&gt;(Arrays.asList(<span class="built_in">cursor</span>.getColumnNames()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            Log.v(tableName, e.getMessage(), e);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">cursor</span> != <span class="keyword">null</span>) <span class="built_in">cursor</span>.close();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> columns;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[仿京东三级地址选择器]]></title>
      <url>http://mzeht.com/2017/05/28/%E4%BB%BF%E4%BA%AC%E4%B8%9C%E4%B8%89%E7%BA%A7%E5%9C%B0%E5%9D%80%E9%80%89%E6%8B%A9%E5%99%A8/</url>
      <content type="html"><![CDATA[<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/96157233.jpg" alt></p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@<span class="keyword">BindView</span>(<span class="keyword">R</span>.<span class="keyword">id</span>.<span class="keyword">recive_address_txt</span>)</span><br><span class="line">    TextView mReciveAddressTxt;</span><br></pre></td></tr></table></figure>
<p>根据tab的深度和前一项选择的id，获取下一级菜单项<br>下一级的数据都是由上一级参数网络请求而来</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mReciveAddressTxt.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                Selector selector = <span class="keyword">new</span> Selector(getActivity(), <span class="number">3</span>);</span><br><span class="line"></span><br><span class="line">                selector.setDataProvider(<span class="keyword">new</span> DataProvider() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">provideData</span><span class="params">(<span class="keyword">int</span> currentDeep, <span class="keyword">int</span> preId, DataReceiver receiver)</span> </span>&#123;</span><br><span class="line">                        <span class="comment">//根据tab的深度和前一项选择的id，获取下一级菜单项</span></span><br><span class="line">                        Log.i(TAG, <span class="string">"provideData: currentDeep &gt;&gt;&gt; "</span> + currentDeep + <span class="string">" preId &gt;&gt;&gt; "</span> + preId);</span><br><span class="line"><span class="comment">//                        ApiManager.getBaimiApi().getCity()</span></span><br><span class="line"></span><br><span class="line">                        <span class="keyword">switch</span> (currentDeep) &#123;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">                                <span class="keyword">if</span> (proviceList.size() &gt; 0) &#123;</span><br><span class="line">                                    receiver.send(getDatas(proviceList));</span><br><span class="line">                                    <span class="keyword">return</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                                ApiManager.getBaimiApi().getProvince().subscribeOn(Schedulers.io())</span><br><span class="line">                                        .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                                        .subscribe(<span class="keyword">new</span> Subscriber&lt;ApiResult&lt;List&lt;String&gt;&gt;&gt;() &#123;</span><br><span class="line">                                            <span class="meta">@Override</span></span><br><span class="line">                                            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            <span class="meta">@Override</span></span><br><span class="line">                                            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            <span class="meta">@Override</span></span><br><span class="line">                                            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onNext</span><span class="params">(ApiResult&lt;List&lt;String&gt;&gt; listApiResult)</span> </span>&#123;</span><br><span class="line">                                                <span class="keyword">if</span> (listApiResult.getContent().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                                    proviceList = listApiResult.getContent();</span><br><span class="line">                                                    receiver.send(getDatas(proviceList));</span><br><span class="line">                                                &#125;</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">                                ApiManager.getBaimiApi().getCity(proviceList.<span class="keyword">get</span>(preId))</span><br><span class="line">                                        .subscribeOn(Schedulers.io())</span><br><span class="line">                                        .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                                        .subscribe(<span class="keyword">new</span> Subscriber&lt;ApiResult&lt;List&lt;String&gt;&gt;&gt;() &#123;</span><br><span class="line">                                            <span class="meta">@Override</span></span><br><span class="line">                                            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            <span class="meta">@Override</span></span><br><span class="line">                                            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            <span class="meta">@Override</span></span><br><span class="line">                                            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onNext</span><span class="params">(ApiResult&lt;List&lt;String&gt;&gt; listApiResult)</span> </span>&#123;</span><br><span class="line">                                                <span class="keyword">if</span> (listApiResult.getFlag().equals(<span class="string">"1"</span>) || listApiResult.getContent().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                                    cityList = listApiResult.getContent();</span><br><span class="line">                                                    receiver.send(getDatas(cityList));</span><br><span class="line">                                                &#125;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                            <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">                                ApiManager.getBaimiApi().getArea(cityList.<span class="keyword">get</span>(preId))</span><br><span class="line">                                        .subscribeOn(Schedulers.io())</span><br><span class="line">                                        .observeOn(AndroidSchedulers.mainThread())</span><br><span class="line">                                        .subscribe(<span class="keyword">new</span> Subscriber&lt;ApiResult&lt;List&lt;String&gt;&gt;&gt;() &#123;</span><br><span class="line">                                            <span class="meta">@Override</span></span><br><span class="line">                                            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            <span class="meta">@Override</span></span><br><span class="line">                                            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                                            &#125;</span><br><span class="line"></span><br><span class="line">                                            <span class="meta">@Override</span></span><br><span class="line">                                            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onNext</span><span class="params">(ApiResult&lt;List&lt;String&gt;&gt; listApiResult)</span> </span>&#123;</span><br><span class="line">                                                <span class="keyword">if</span> (listApiResult.getFlag().equals(<span class="string">"1"</span>) || listApiResult.getContent().size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                                                    areaList = listApiResult.getContent();</span><br><span class="line">                                                    receiver.send(getDatas(areaList));</span><br><span class="line">                                                &#125;</span><br><span class="line">                                            &#125;</span><br><span class="line">                                        &#125;);</span><br><span class="line">                                <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">private</span> ArrayList&lt;ISelectAble&gt; getDatas(List&lt;String&gt; list) &#123;</span><br><span class="line">                        <span class="keyword">int</span> count = list.size();</span><br><span class="line">                        ArrayList&lt;ISelectAble&gt; data = <span class="keyword">new</span> ArrayList&lt;&gt;(count);</span><br><span class="line">                        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; count; j++) &#123;</span><br><span class="line"></span><br><span class="line">                            <span class="keyword">int</span> finalJ = j;</span><br><span class="line">                            data.add(<span class="keyword">new</span> ISelectAble() &#123;</span><br><span class="line">                                <span class="meta">@Override</span></span><br><span class="line">                                <span class="keyword">public</span> <span class="function">String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                                    <span class="function"><span class="keyword">return</span> list.<span class="title">get</span><span class="params">(finalJ)</span></span>;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="meta">@Override</span></span><br><span class="line">                                <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                                    <span class="keyword">return</span> finalJ;</span><br><span class="line">                                &#125;</span><br><span class="line"></span><br><span class="line">                                <span class="meta">@Override</span></span><br><span class="line">                                <span class="keyword">public</span> <span class="function">Object <span class="title">getArg</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                                    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                            &#125;);</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="keyword">return</span> data;</span><br><span class="line">                    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                &#125;);</span><br><span class="line">                selector.setSelectedListener(<span class="keyword">new</span> SelectedListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onAddressSelected</span><span class="params">(ArrayList&lt;ISelectAble&gt; selectAbles)</span> </span>&#123;</span><br><span class="line">                        String result = <span class="string">""</span>;</span><br><span class="line">                        <span class="keyword">for</span> (ISelectAble selectAble : selectAbles) &#123;</span><br><span class="line">                            result += selectAble.getName() + <span class="string">" "</span>;</span><br><span class="line">                        &#125;</span><br><span class="line"><span class="comment">//                        Toast.makeText(getActivity(), result, Toast.LENGTH_SHORT).show();</span></span><br><span class="line">                        mReciveAddressTxt.setText(result);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">                BottomDialog dialog = <span class="keyword">new</span> BottomDialog(getActivity());</span><br><span class="line">                dialog.init(getActivity(), selector);</span><br><span class="line">                dialog.show();</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<h2 id="库地址"><a href="#库地址" class="headerlink" title="库地址"></a>库地址</h2><p><a href="https://github.com/dunwen/JDSelector" target="_blank" rel="noopener">https://github.com/dunwen/JDSelector</a></p>
<p><a href="https://github.com/chihane/JDAddressSelector" target="_blank" rel="noopener">https://github.com/chihane/JDAddressSelector</a></p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[popupwindow封装使用]]></title>
      <url>http://mzeht.com/2017/05/28/popupwindow%E5%B0%81%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<h2 id="一个封装封装类"><a href="#一个封装封装类" class="headerlink" title="一个封装封装类"></a>一个封装封装类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomPopWindow</span> <span class="keyword">implements</span> <span class="title">PopupWindow</span>.<span class="title">OnDismissListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">float</span> DEFAULT_ALPHA = <span class="number">0.7f</span>;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mHeight;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mIsFocusable = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mIsOutside = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mResLayoutId = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> View mContentView;</span><br><span class="line">    <span class="keyword">private</span> PopupWindow mPopupWindow;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mAnimationStyle = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mClippEnable = <span class="keyword">true</span>;<span class="comment">//default is true</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mIgnoreCheekPress = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mInputMode = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> PopupWindow.OnDismissListener mOnDismissListener;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mSoftInputMode = -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mTouchable = <span class="keyword">true</span>;<span class="comment">//default is ture</span></span><br><span class="line">    <span class="keyword">private</span> View.OnTouchListener mOnTouchListener;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Window mWindow;<span class="comment">//当前Activity 的窗口</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 弹出PopWindow 背景是否变暗，默认不会变暗。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> mIsBackgroundDark = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mBackgroundDrakValue = <span class="number">0</span>;<span class="comment">// 背景变暗的值，0 - 1</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">CustomPopWindow</span><span class="params">(Context context)</span></span>&#123;</span><br><span class="line">        mContext = context;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getWidth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mWidth;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mHeight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> anchor</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> xOff</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> yOff</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomPopWindow <span class="title">showAsDropDown</span><span class="params">(View anchor, <span class="keyword">int</span> xOff, <span class="keyword">int</span> yOff)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(mPopupWindow!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            mPopupWindow.showAsDropDown(anchor,xOff,yOff);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomPopWindow <span class="title">showAsDropDown</span><span class="params">(View anchor)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(mPopupWindow!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            mPopupWindow.showAsDropDown(anchor);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequiresApi</span>(api = Build.VERSION_CODES.KITKAT)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomPopWindow <span class="title">showAsDropDown</span><span class="params">(View anchor, <span class="keyword">int</span> xOff, <span class="keyword">int</span> yOff, <span class="keyword">int</span> gravity)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(mPopupWindow!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            mPopupWindow.showAsDropDown(anchor,xOff,yOff,gravity);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 相对于父控件的位置（通过设置Gravity.CENTER，下方Gravity.BOTTOM等 ），可以设置具体位置坐标</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parent 父控件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> gravity</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> x the popup's x location offset</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> y the popup's y location offset</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CustomPopWindow <span class="title">showAtLocation</span><span class="params">(View parent, <span class="keyword">int</span> gravity, <span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(mPopupWindow!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            mPopupWindow.showAtLocation(parent,gravity,x,y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加一些属性设置</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> popupWindow</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">apply</span><span class="params">(PopupWindow popupWindow)</span></span>&#123;</span><br><span class="line">        popupWindow.setClippingEnabled(mClippEnable);</span><br><span class="line">        <span class="keyword">if</span>(mIgnoreCheekPress)&#123;</span><br><span class="line">            popupWindow.setIgnoreCheekPress();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mInputMode!=-<span class="number">1</span>)&#123;</span><br><span class="line">            popupWindow.setInputMethodMode(mInputMode);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mSoftInputMode!=-<span class="number">1</span>)&#123;</span><br><span class="line">            popupWindow.setSoftInputMode(mSoftInputMode);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mOnDismissListener!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            popupWindow.setOnDismissListener(mOnDismissListener);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mOnTouchListener!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            popupWindow.setTouchInterceptor(mOnTouchListener);</span><br><span class="line">        &#125;</span><br><span class="line">        popupWindow.setTouchable(mTouchable);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> PopupWindow <span class="title">build</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mContentView == <span class="keyword">null</span>)&#123;</span><br><span class="line">            mContentView = LayoutInflater.from(mContext).inflate(mResLayoutId,<span class="keyword">null</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2017.3.17 add</span></span><br><span class="line">        <span class="comment">// 获取当前Activity的window</span></span><br><span class="line">        Activity activity = (Activity) mContentView.getContext();</span><br><span class="line">        <span class="keyword">if</span>(activity!=<span class="keyword">null</span> &amp;&amp; mIsBackgroundDark)&#123;</span><br><span class="line">            <span class="comment">//如果设置的值在0 - 1的范围内，则用设置的值，否则用默认值</span></span><br><span class="line">            <span class="keyword">final</span>  <span class="keyword">float</span> alpha = (mBackgroundDrakValue &gt; <span class="number">0</span> &amp;&amp; mBackgroundDrakValue &lt; <span class="number">1</span>) ? mBackgroundDrakValue : DEFAULT_ALPHA;</span><br><span class="line">            mWindow = activity.getWindow();</span><br><span class="line">            WindowManager.LayoutParams params = mWindow.getAttributes();</span><br><span class="line">            params.alpha = alpha;</span><br><span class="line">            mWindow.setAttributes(params);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mWidth != <span class="number">0</span> &amp;&amp; mHeight!=<span class="number">0</span> )&#123;</span><br><span class="line">            mPopupWindow = <span class="keyword">new</span> PopupWindow(mContentView,mWidth,mHeight);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            mPopupWindow = <span class="keyword">new</span> PopupWindow(mContentView, ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mAnimationStyle!=-<span class="number">1</span>)&#123;</span><br><span class="line">            mPopupWindow.setAnimationStyle(mAnimationStyle);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        apply(mPopupWindow);<span class="comment">//设置一些属性</span></span><br><span class="line"></span><br><span class="line">        mPopupWindow.setFocusable(mIsFocusable);</span><br><span class="line">        mPopupWindow.setBackgroundDrawable(<span class="keyword">new</span> ColorDrawable(Color.TRANSPARENT));</span><br><span class="line">        mPopupWindow.setOutsideTouchable(mIsOutside);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mWidth == <span class="number">0</span> || mHeight == <span class="number">0</span>)&#123;</span><br><span class="line">            mPopupWindow.getContentView().measure(View.MeasureSpec.UNSPECIFIED, View.MeasureSpec.UNSPECIFIED);</span><br><span class="line">            <span class="comment">//如果外面没有设置宽高的情况下，计算宽高并赋值</span></span><br><span class="line">            mWidth = mPopupWindow.getContentView().getMeasuredWidth();</span><br><span class="line">            mHeight = mPopupWindow.getContentView().getMeasuredHeight();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加dissmiss 监听</span></span><br><span class="line">        mPopupWindow.setOnDismissListener(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        mPopupWindow.update();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mPopupWindow;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDismiss</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dissmiss();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 关闭popWindow</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">dissmiss</span><span class="params">()</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(mOnDismissListener!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            mOnDismissListener.onDismiss();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//如果设置了背景变暗，那么在dissmiss的时候需要还原</span></span><br><span class="line">        <span class="keyword">if</span>(mWindow!=<span class="keyword">null</span>)&#123;</span><br><span class="line">            WindowManager.LayoutParams params = mWindow.getAttributes();</span><br><span class="line">            params.alpha = <span class="number">1.0f</span>;</span><br><span class="line">            mWindow.setAttributes(params);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(mPopupWindow!=<span class="keyword">null</span> &amp;&amp; mPopupWindow.isShowing())&#123;</span><br><span class="line">            mPopupWindow.dismiss();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">PopupWindowBuilder</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> CustomPopWindow mCustomPopWindow;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">PopupWindowBuilder</span><span class="params">(Context context)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow = <span class="keyword">new</span> CustomPopWindow(context);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">size</span><span class="params">(<span class="keyword">int</span> width,<span class="keyword">int</span> height)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mWidth = width;</span><br><span class="line">            mCustomPopWindow.mHeight = height;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setFocusable</span><span class="params">(<span class="keyword">boolean</span> focusable)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mIsFocusable = focusable;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setView</span><span class="params">(<span class="keyword">int</span> resLayoutId)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mResLayoutId = resLayoutId;</span><br><span class="line">            mCustomPopWindow.mContentView = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setView</span><span class="params">(View view)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mContentView = view;</span><br><span class="line">            mCustomPopWindow.mResLayoutId = -<span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setOutsideTouchable</span><span class="params">(<span class="keyword">boolean</span> outsideTouchable)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mIsOutside = outsideTouchable;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置弹窗动画</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> animationStyle</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setAnimationStyle</span><span class="params">(<span class="keyword">int</span> animationStyle)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mAnimationStyle = animationStyle;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setClippingEnable</span><span class="params">(<span class="keyword">boolean</span> enable)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mClippEnable =enable;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setIgnoreCheekPress</span><span class="params">(<span class="keyword">boolean</span> ignoreCheekPress)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mIgnoreCheekPress = ignoreCheekPress;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setInputMethodMode</span><span class="params">(<span class="keyword">int</span> mode)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mInputMode = mode;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setOnDissmissListener</span><span class="params">(PopupWindow.OnDismissListener onDissmissListener)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mOnDismissListener = onDissmissListener;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setSoftInputMode</span><span class="params">(<span class="keyword">int</span> softInputMode)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mSoftInputMode = softInputMode;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setTouchable</span><span class="params">(<span class="keyword">boolean</span> touchable)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mTouchable = touchable;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setTouchIntercepter</span><span class="params">(View.OnTouchListener touchIntercepter)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mOnTouchListener = touchIntercepter;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置背景变暗是否可用</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> isDark</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">enableBackgroundDark</span><span class="params">(<span class="keyword">boolean</span> isDark)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mIsBackgroundDark = isDark;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 设置北京变暗的值</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@param</span> darkValue</span></span><br><span class="line"><span class="comment">         * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> PopupWindowBuilder <span class="title">setBgDarkAlpha</span><span class="params">(<span class="keyword">float</span> darkValue)</span></span>&#123;</span><br><span class="line">            mCustomPopWindow.mBackgroundDrakValue = darkValue;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> CustomPopWindow <span class="title">create</span><span class="params">()</span></span>&#123;</span><br><span class="line">            <span class="comment">//构建PopWindow</span></span><br><span class="line">            mCustomPopWindow.build();</span><br><span class="line">            <span class="keyword">return</span> mCustomPopWindow;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="实际使用"><a href="#实际使用" class="headerlink" title="实际使用"></a>实际使用</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ReadMineActivity</span> <span class="keyword">extends</span> <span class="title">BaseActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    CustomPopWindow mCustomPopWindow;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Dialog dateDialog, timeDialog;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> popupwindow p = <span class="keyword">new</span> popupwindow();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">popupwindow</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.is_switch)</span><br><span class="line">        SwitchCompat is_switch;<span class="comment">//是否重复</span></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.set_dataandtime)</span><br><span class="line">        LinearLayout setDateAndTimeLL;<span class="comment">//选择日期时间菜单</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.set_dataandtime_detail)</span><br><span class="line">        LinearLayout setDateAndTimeDetailLL;<span class="comment">//选择日期时间</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.set_time)</span><br><span class="line">        LinearLayout setTimeLL;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.set_time_detail)</span><br><span class="line">        LinearLayout setTimeDetailLL;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.data_text)</span><br><span class="line">        TextView dateText;<span class="comment">//日期</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.time1)</span><br><span class="line">        TextView time1;<span class="comment">//time</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.time2)</span><br><span class="line">        TextView time2;<span class="comment">//time</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.day1)</span><br><span class="line">        CheckBox day1;</span><br><span class="line">        <span class="meta">@BindView</span>(R.id.day2)</span><br><span class="line">        CheckBox day2;</span><br><span class="line">        <span class="meta">@BindView</span>(R.id.day3)</span><br><span class="line">        CheckBox day3;</span><br><span class="line">        <span class="meta">@BindView</span>(R.id.day4)</span><br><span class="line">        CheckBox day4;</span><br><span class="line">        <span class="meta">@BindView</span>(R.id.day5)</span><br><span class="line">        CheckBox day5;</span><br><span class="line">        <span class="meta">@BindView</span>(R.id.day6)</span><br><span class="line">        CheckBox day6;</span><br><span class="line">        <span class="meta">@BindView</span>(R.id.day7)</span><br><span class="line">        CheckBox day7;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.add_readmine_submit)</span><br><span class="line">        TextView submit;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@BindView</span>(R.id.readmine_message_edit)</span><br><span class="line">        EditText message;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@BindView</span>(R.id.bind_newreadmie_ll)</span><br><span class="line">    LinearLayout bindNewReadMineLL;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@BindView</span>(R.id.recyclerView)</span><br><span class="line">    RecyclerView mRecyclerView;</span><br><span class="line"></span><br><span class="line">    MultiTypeAdapter mAdapter;</span><br><span class="line">    Items items = <span class="keyword">new</span> Items();</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_read_mine);</span><br><span class="line">        ButterKnife.bind(<span class="keyword">this</span>);</span><br><span class="line">        initView();</span><br><span class="line">        setListener();</span><br><span class="line">        initData();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;<span class="number">25</span> ; i++) &#123;</span><br><span class="line">            ReadmineItem item = <span class="keyword">new</span> ReadmineItem();</span><br><span class="line">            items.add(item);</span><br><span class="line">        &#125;</span><br><span class="line">        mAdapter.notifyDataSetChanged();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setListener</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        bindNewReadMineLL.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                mCustomPopWindow.showAsDropDown(bindNewReadMineLL, <span class="number">0</span>, <span class="number">20</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//=======================================mCustomPopWindow============================================//</span></span><br><span class="line">        View contentView = LayoutInflater.from(getActivity()).inflate(R.layout.popwindow_add_readmine, <span class="keyword">null</span>);</span><br><span class="line">        <span class="comment">//处理popWindow 显示内容</span></span><br><span class="line">        handleLogic(contentView);</span><br><span class="line">        <span class="comment">//创建并显示popWindow</span></span><br><span class="line">        mCustomPopWindow = <span class="keyword">new</span> CustomPopWindow.PopupWindowBuilder(getActivity())</span><br><span class="line">                .setView(contentView)</span><br><span class="line">                .size(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT)</span><br><span class="line">                .enableBackgroundDark(<span class="keyword">false</span>) <span class="comment">//弹出popWindow时，背景是否变暗</span></span><br><span class="line">                .setBgDarkAlpha(<span class="number">0.7f</span>) <span class="comment">// 控制亮度</span></span><br><span class="line">                .setOnDissmissListener(<span class="keyword">new</span> PopupWindow.OnDismissListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDismiss</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                        Log.e(<span class="string">"TAG"</span>, <span class="string">"onDismiss"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .create();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//=======================================recyclerView============================================//</span></span><br><span class="line">        mRecyclerView.setLayoutManager(<span class="keyword">new</span> WrapContentLinearLayoutManager(getActivity()));</span><br><span class="line">        mAdapter = <span class="keyword">new</span> MultiTypeAdapter();</span><br><span class="line">        mAdapter.register(ReadmineItem.class, <span class="keyword">new</span> ReadmineItemViewBinder());</span><br><span class="line">        mAdapter.setItems(items);</span><br><span class="line">        mRecyclerView.setAdapter(mAdapter);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">handleLogic</span><span class="params">(View contentView)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        ButterKnife.bind(p, contentView);</span><br><span class="line"></span><br><span class="line">        p.dateText.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                showDateDialog(DateUtil.getDateForString(p.dateText.getText().toString()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        p.time1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                showTimeDialog();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        p.time2.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                showTimeDialog();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        p.setTimeLL.setVisibility(View.GONE);</span><br><span class="line">        p.setTimeDetailLL.setVisibility(View.GONE);</span><br><span class="line">        p.is_switch.setOnCheckedChangeListener(<span class="keyword">new</span> CompoundButton.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton buttonView, <span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (isChecked) &#123;</span><br><span class="line">                    p.setDateAndTimeLL.setVisibility(View.GONE);</span><br><span class="line">                    p.setDateAndTimeDetailLL.setVisibility(View.GONE);</span><br><span class="line">                    p.setTimeLL.setVisibility(View.VISIBLE);</span><br><span class="line">                    p.setTimeDetailLL.setVisibility(View.VISIBLE);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    p.setDateAndTimeLL.setVisibility(View.VISIBLE);</span><br><span class="line">                    p.setDateAndTimeDetailLL.setVisibility(View.VISIBLE);</span><br><span class="line">                    p.setTimeLL.setVisibility(View.GONE);</span><br><span class="line">                    p.setTimeDetailLL.setVisibility(View.GONE);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        p.submit.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                T.showShort(getActivity(),p.dateText.getText().toString()+p.time1.getText().toString()+p.day1.isChecked()+p.message.getText().toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showTimeDialog</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (timeDialog == <span class="keyword">null</span>) &#123;</span><br><span class="line"></span><br><span class="line">            TimePickerDialog.Builder builder = <span class="keyword">new</span> TimePickerDialog.Builder(<span class="keyword">this</span>);</span><br><span class="line">            timeDialog = builder.setOnTimeSelectedListener(<span class="keyword">new</span> TimePickerDialog.OnTimeSelectedListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTimeSelected</span><span class="params">(<span class="keyword">int</span>[] times)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                    p.time1.setText(times[<span class="number">0</span>] + <span class="string">":"</span> + times[<span class="number">1</span>]);</span><br><span class="line">                    p.time2.setText(times[<span class="number">0</span>] + <span class="string">":"</span> + times[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).create();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        timeDialog.show();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showDateDialog</span><span class="params">(List&lt;Integer&gt; date)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//==============================DatePickerDialog===================================//</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (dateDialog==<span class="keyword">null</span>)&#123;</span><br><span class="line">            DatePickerDialog.Builder Datebuilder = <span class="keyword">new</span> DatePickerDialog.Builder(<span class="keyword">this</span>);</span><br><span class="line">            dateDialog=Datebuilder.setOnDateSelectedListener(<span class="keyword">new</span> DatePickerDialog.OnDateSelectedListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDateSelected</span><span class="params">(<span class="keyword">int</span>[] dates)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                    p.dateText.setText(dates[<span class="number">0</span>] + <span class="string">"-"</span> + (dates[<span class="number">1</span>] &gt; <span class="number">9</span> ? dates[<span class="number">1</span>] : (<span class="string">"0"</span> + dates[<span class="number">1</span>])) + <span class="string">"-"</span></span><br><span class="line">                            + (dates[<span class="number">2</span>] &gt; <span class="number">9</span> ? dates[<span class="number">2</span>] : (<span class="string">"0"</span> + dates[<span class="number">2</span>])));</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCancel</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;).setSelectYear(date.get(<span class="number">0</span>) - <span class="number">1</span>)</span><br><span class="line">                    .setSelectMonth(date.get(<span class="number">1</span>) - <span class="number">1</span>)</span><br><span class="line">                    .setSelectDay(date.get(<span class="number">2</span>) - <span class="number">1</span>)</span><br><span class="line">                    .setMaxYear(DateUtil.getYear())</span><br><span class="line">                    .setMaxMonth(DateUtil.getDateForString(DateUtil.getToday()).get(<span class="number">1</span>))</span><br><span class="line">                    .setMaxDay(DateUtil.getDateForString(DateUtil.getToday()).get(<span class="number">2</span>)).create();</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        dateDialog.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h2><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-28/39434013.jpg" alt></p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[Recycleview Mutitype的使用]]></title>
      <url>http://mzeht.com/2017/05/04/2017-05-05-2/</url>
      <content type="html"><![CDATA[<p>安利一波<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">compile</span>(<span class="string">'me.drakeet.multitype:multitype:2.5.0'</span>, &#123;</span><br><span class="line">       <span class="keyword">exclude</span> <span class="keyword">group</span>: <span class="string">'com.android.support'</span></span><br><span class="line">   &#125;)</span><br></pre></td></tr></table></figure></p>
<p>基本文档github主页写的较好</p>
<p>基本使用<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">EmptyDataViewProvider</span> <span class="keyword">extends</span> <span class="title">ItemViewBinder&lt;EmptyData</span>,<span class="title">EmptyDataViewProvider</span>.<span class="title">ViewHolder&gt;</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">ViewHolder</span> onCreateViewHolder(<span class="meta">@NonNull</span> <span class="type">LayoutInflater</span> inflater, <span class="meta">@NonNull</span> <span class="type">ViewGroup</span> parent) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">ViewHolder</span>(inflater.inflate(<span class="type">R</span>.layout.bm_list_empty_view,parent,<span class="literal">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onBindViewHolder(<span class="meta">@NonNull</span> <span class="type">ViewHolder</span> holder, <span class="meta">@NonNull</span> <span class="type">EmptyData</span> item) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="type">TextUtils</span>.isEmpty(item.getMessage()))&#123;</span><br><span class="line">        holder.messageTextView.setText(<span class="string">"你来到一片荒芜之地, 空空如也, 什么都没有\\n实在是太冷清了╮(╯_╰)╭"</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            holder.messageTextView.setText(item.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    static <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">TextView</span> messageTextView;</span><br><span class="line"></span><br><span class="line">        public <span class="type">ViewHolder</span>(<span class="type">View</span> itemView) &#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            <span class="keyword">this</span>.messageTextView = (<span class="type">TextView</span>) itemView.findViewById(<span class="type">R</span>.id.bm_empty_text);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">mRecyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(getActivity()));</span><br><span class="line">       mAdapter = <span class="keyword">new</span> MultiTypeAdapter();</span><br><span class="line">       mAdapter.register(EmptyData.class,<span class="keyword">new</span> EmptyDataViewProvider());</span><br><span class="line">       mAdapter.register(SendExpressOrder.class,<span class="keyword">new</span> OrderViewProvider(<span class="keyword">new</span> OrderViewProvider.OnItemClickListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(View view, <span class="keyword">int</span> position, SendExpressOrder order)</span> </span>&#123;</span><br><span class="line">               Intent intent=<span class="keyword">new</span> Intent();</span><br><span class="line">               intent.setClass(getActivity(), JijianSearchDetailActivity.class);</span><br><span class="line">               intent.putExtra(<span class="string">"order"</span>, order);</span><br><span class="line">               startActivity(intent);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;));</span><br><span class="line">       mRecyclerView.setAdapter(mAdapter);</span><br><span class="line">       mSwipeRefreshLayout.setOnRefreshListener(<span class="keyword">new</span> SwipeRefreshLayout.OnRefreshListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onRefresh</span><span class="params">()</span> </span>&#123;</span><br><span class="line">               <span class="keyword">new</span> Handler().postDelayed(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                       searchData();</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;, <span class="number">1000</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>
<h3 id="下拉刷新"><a href="#下拉刷新" class="headerlink" title="下拉刷新"></a>下拉刷新</h3><p>针对LinearLayoutManager</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">OnLoadMoreListener</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">OnScrollListener</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> LinearLayoutManager layoutManager;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> itemCount, lastPosition, lastItemCount;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">onLoadMore</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScrolled</span><span class="params">(RecyclerView recyclerView, <span class="keyword">int</span> dx, <span class="keyword">int</span> dy)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (recyclerView.getLayoutManager() <span class="keyword">instanceof</span> LinearLayoutManager) &#123;</span><br><span class="line">            layoutManager = (LinearLayoutManager) recyclerView.getLayoutManager();</span><br><span class="line"></span><br><span class="line">            itemCount = layoutManager.getItemCount();</span><br><span class="line">            lastPosition = layoutManager.findLastCompletelyVisibleItemPosition();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            L.e(<span class="string">"OnLoadMoreListener"</span>, <span class="string">"The OnLoadMoreListener only support LinearLayoutManager"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ( lastPosition == itemCount - <span class="number">1</span>) &#123;</span><br><span class="line">            lastItemCount = itemCount;</span><br><span class="line">            <span class="keyword">this</span>.onLoadMore();</span><br><span class="line">        &#125;</span><br><span class="line">        L.d(<span class="string">"itemCount"</span>,itemCount+<span class="string">""</span>);</span><br><span class="line">        L.d(<span class="string">"lastPosition"</span>,lastPosition+<span class="string">""</span>);</span><br><span class="line">        L.d(<span class="string">"lastItemCount"</span>,lastItemCount+<span class="string">""</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>暴露子视图接口</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">PayMentTempLateProvider</span> <span class="keyword">extends</span> <span class="title">ItemViewBinder&lt;PayMentTempLatePO</span>,<span class="title">PayMentTempLateProvider</span>.<span class="title">ViewHolder&gt;</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    public <span class="type">PayMentTempLateProvider</span>(<span class="type">OnItemClickListener</span> onItemClickListener) &#123;</span><br><span class="line">        <span class="keyword">this</span>.mOnItemClickListener=onItemClickListener;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public interface <span class="type">OnItemClickListener</span>&#123;</span><br><span class="line">        void onItemClick(<span class="type">View</span> view,int position,<span class="type">PayMentTempLatePO</span> payMentTempLatePO);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">OnItemClickListener</span> mOnItemClickListener;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@NonNull</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">ViewHolder</span> onCreateViewHolder(<span class="meta">@NonNull</span> <span class="type">LayoutInflater</span> inflater, <span class="meta">@NonNull</span> <span class="type">ViewGroup</span> parent) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="type">ViewHolder</span>(inflater.inflate(<span class="type">R</span>.layout.item_express_template,parent,<span class="literal">false</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onBindViewHolder(<span class="meta">@NonNull</span> <span class="type">ViewHolder</span> holder, <span class="meta">@NonNull</span> <span class="type">PayMentTempLatePO</span> item) &#123;</span><br><span class="line">        holder.templateName_tv.setText(item.getTemplateName());</span><br><span class="line">        holder.templatCode.setText(item.getTemplateCode());</span><br><span class="line">        holder.itemView.setOnClickListener(<span class="keyword">new</span> <span class="type">View</span>.<span class="type">OnClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onClick(<span class="type">View</span> v) &#123;</span><br><span class="line">                mOnItemClickListener.onItemClick(holder.itemView,holder.getLayoutPosition(),item);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">TextView</span> templateName_tv;</span><br><span class="line">        <span class="keyword">private</span> <span class="type">TextView</span> templatCode;</span><br><span class="line">        public <span class="type">ViewHolder</span>(<span class="type">View</span> itemView) &#123;</span><br><span class="line">            <span class="keyword">super</span>(itemView);</span><br><span class="line">            templateName_tv = (<span class="type">TextView</span>) itemView.findViewById(<span class="type">R</span>.id.templateName);</span><br><span class="line">            templatCode = (<span class="type">TextView</span>) itemView.findViewById(<span class="type">R</span>.id.templateCode);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更新ui</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">()</span> </span>&#123;</span><br><span class="line">                       QujianFragment.getInstance().setWeiquItemText(count);</span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line">                       L.e(e.getMessage());</span><br><span class="line">                       <span class="keyword">if</span> (mSwipeRefreshLayout.isRefreshing()) &#123;</span><br><span class="line">                           mSwipeRefreshLayout.setRefreshing(<span class="keyword">false</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                       Items items = <span class="keyword">new</span> Items();</span><br><span class="line">                       items.add(<span class="keyword">new</span> EmptyData(<span class="string">"请求失败"</span>));</span><br><span class="line">                       adapter.setItems(items);</span><br><span class="line">                       adapter.notifyDataSetChanged();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                   &#125;</span><br><span class="line"></span><br><span class="line">                   <span class="meta">@Override</span></span><br><span class="line">                   <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onNext</span><span class="params">(ApiPagesResult&lt;SendExpressOrder&gt; listApiResult)</span> </span>&#123;</span><br><span class="line">                       <span class="keyword">if</span> (mSwipeRefreshLayout.isRefreshing()) &#123;</span><br><span class="line">                           mSwipeRefreshLayout.setRefreshing(<span class="keyword">false</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                       mRecyclerView.scrollToPosition(<span class="number">0</span>);</span><br><span class="line">                       <span class="keyword">if</span> (listApiResult.getFlag().equals(<span class="string">"1"</span>)) &#123;</span><br><span class="line">                           Items items = <span class="keyword">new</span> Items();</span><br><span class="line">                           <span class="keyword">if</span> (listApiResult.getContent().getCount() == <span class="number">0</span>) &#123;</span><br><span class="line">                               items.add(<span class="keyword">new</span> EmptyData());</span><br><span class="line">                           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                               items.addAll(listApiResult.getContent().getContent());</span><br><span class="line">                               count = listApiResult.getContent().getCount();</span><br><span class="line"></span><br><span class="line">                           &#125;</span><br><span class="line"></span><br><span class="line">                           adapter.setItems(items);</span><br><span class="line">                           adapter.notifyDataSetChanged();</span><br><span class="line"></span><br><span class="line">                       &#125;</span><br><span class="line"></span><br><span class="line">                   &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> multitype </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[重构到springboot注意事项]]></title>
      <url>http://mzeht.com/2017/05/03/2017-05-05-1/</url>
      <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>旧web项目没有采用maven管理依赖包，jsp页面，xml配置环境，mybatis数据库交互，现在改造为springboot项目，最终打包为war包，java命令直接启动，不依赖tomcat容器</p>
<p>开发环境 idea</p>
<p>###idea新建springboot项目<br>选择web支持</p>
<p>生成的项目src／main下有java，resource两个文件夹</p>
<p>新建第三个文件夹webapp，和之上两个同级，最终<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-5-5/36622722-file_1493976502014_16cc0.png" alt></p>
<h3 id="jsp依赖配置（同时适配本地运行和打包）"><a href="#jsp依赖配置（同时适配本地运行和打包）" class="headerlink" title="jsp依赖配置（同时适配本地运行和打包）"></a>jsp依赖配置（同时适配本地运行和打包）</h3><p>注意有些依赖改为<code>&lt;scope&gt;compile&lt;/scope&gt;</code>， 参考maven的scope解释(test,runtime,provide,complie)<br>这样通过idea的application或者打包都不会有问题</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-tomcat<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		</span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--用于编译jsp--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.tomcat.embed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>tomcat-embed-jasper<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>compile<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>jsp映射路径</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">spring:</span></span><br><span class="line"><span class="symbol">  profiles:</span> dev</span><br><span class="line"><span class="symbol">  mvc:</span></span><br><span class="line"><span class="symbol">    view:</span></span><br><span class="line"><span class="symbol">      prefix:</span> /WEB-INF<span class="meta-keyword">/jsp/</span></span><br><span class="line"><span class="symbol">      suffix:</span> .jsp</span><br></pre></td></tr></table></figure>
<h3 id="serverlet支持"><a href="#serverlet支持" class="headerlink" title="serverlet支持"></a>serverlet支持</h3><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">BootlabbookmanagerApplication</span>  <span class="keyword">extends</span> <span class="title">SpringBootServletInitializer</span></span>&#123;</span><br><span class="line">	 <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="type">SpringApplicationBuilder</span> configure(<span class="type">SpringApplicationBuilder</span> application) &#123;</span><br><span class="line">        <span class="keyword">return</span> application.sources(<span class="type">BootlabbookmanagerApplication</span>.<span class="keyword">class</span>);</span><br><span class="line">    &#125;</span><br><span class="line">.......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>###拦截器，资源映射，</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Configuration</span></span><br><span class="line"><span class="variable">@Component</span></span><br><span class="line">public class WebMVCConfig extends WebMvcConfigurerAdapter</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">@Bean</span></span><br><span class="line">    public HandlerInterceptor getLoginInterceptor()&#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">LoginInterceptor</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *  * &lt;mvc:mapping path="/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:exclude-mapping path="/assets/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:exclude-mapping path="/images/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:exclude-mapping path="/upload/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:exclude-mapping path="/login/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:exclude-mapping path="/register/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:exclude-mapping path="/forgetPassword/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:exclude-mapping path="/check/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:exclude-mapping path="/exists/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:exclude-mapping path="/code/**" /&gt;</span></span><br><span class="line"><span class="comment">     * @param registry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="selector-tag">Override</span></span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">void</span> <span class="selector-tag">addInterceptors</span>(InterceptorRegistry registry) &#123;</span><br><span class="line">        <span class="selector-tag">registry</span><span class="selector-class">.addInterceptor</span>(getLoginInterceptor())<span class="selector-class">.addPathPatterns</span>(<span class="string">"/**"</span>);</span><br><span class="line">        <span class="selector-tag">registry</span><span class="selector-class">.addInterceptor</span>(getLoginInterceptor())<span class="selector-class">.excludePathPatterns</span>(<span class="string">"/assets/**"</span>,<span class="string">"/images/**"</span>,<span class="string">"/upload/**"</span>,<span class="string">"/login/**"</span>,<span class="string">"/register/**"</span>,<span class="string">"/forgetPassword/**"</span>,<span class="string">"/check/**"</span>,<span class="string">"/exists/**"</span>,<span class="string">"/code/**"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * &lt;mvc:resources location="/WEB-INF/assets/" mapping="/assets/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:resources location="/WEB-INF/images/" mapping="/images/**" /&gt;</span></span><br><span class="line"><span class="comment">     &lt;mvc:resources location="/upload/" mapping="/upload/**" /&gt;</span></span><br><span class="line"><span class="comment">     * @param registry</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    @<span class="selector-tag">Override</span></span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">void</span> <span class="selector-tag">addResourceHandlers</span>(ResourceHandlerRegistry registry) &#123;</span><br><span class="line">        <span class="selector-tag">registry</span><span class="selector-class">.addResourceHandler</span>(<span class="string">"/assets/**"</span>)<span class="selector-class">.addResourceLocations</span>(<span class="string">"classpath:/WEB-INF/assets/"</span>);</span><br><span class="line">        <span class="selector-tag">registry</span><span class="selector-class">.addResourceHandler</span>(<span class="string">"/images/**"</span>)<span class="selector-class">.addResourceLocations</span>(<span class="string">"classpath:/WEB-INF/images/"</span>);</span><br><span class="line">        <span class="selector-tag">registry</span><span class="selector-class">.addResourceHandler</span>(<span class="string">"/upload/**"</span>)<span class="selector-class">.addResourceLocations</span>(<span class="string">"classpath:/upload"</span>);</span><br><span class="line">        <span class="selector-tag">super</span><span class="selector-class">.addResourceHandlers</span>(registry);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>注释对象旧web项目中的设置，注意拦截器之中引用service或其他需要注入的变量时</p>
<p>配置拦截器不能写成以下形式</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">addInterceptors</span><span class="params">(InterceptorRegistry registry)</span> </span>&#123;</span><br><span class="line">        registry.addInterceptor(<span class="keyword">new</span> LoginInterceptor().addPathPatterns(<span class="string">"/**"</span>);</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>必须要提前注入，否则LoginInterceptor中变量注入失败</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Bean</span></span><br><span class="line">   <span class="keyword">public</span> <span class="function">HandlerInterceptor <span class="title">getLoginInterceptor</span><span class="params">()</span></span>&#123;</span><br><span class="line">       <span class="keyword">return</span> <span class="keyword">new</span> LoginInterceptor();</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<h3 id="默认error页面"><a href="#默认error页面" class="headerlink" title="默认error页面"></a>默认error页面</h3><p>Application中</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">EmbeddedServletContainerCustomizer <span class="title">containerCustomizer</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> EmbeddedServletContainerCustomizer() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">customize</span><span class="params">(ConfigurableEmbeddedServletContainer container)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//                ErrorPage error401Page = new ErrorPage(HttpStatus.UNAUTHORIZED, "/401.html");</span></span><br><span class="line">                ErrorPage error404Page = <span class="keyword">new</span> ErrorPage(HttpStatus.NOT_FOUND, <span class="string">"/error"</span>);</span><br><span class="line"><span class="comment">//                ErrorPage error500Page = new ErrorPage(HttpStatus.INTERNAL_SERVER_ERROR, "/500.html");</span></span><br><span class="line"></span><br><span class="line">                container.addErrorPages( error404Page);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="全局错误处理"><a href="#全局错误处理" class="headerlink" title="全局错误处理"></a>全局错误处理</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ControllerAdvice</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">GlobalExceptionHandler</span> &#123;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_ERROR_VIEW = <span class="string">"error"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_NOT_LOG = <span class="string">"login"</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFAULT_INDEX = <span class="string">"index"</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@ExceptionHandler</span>(value = UserNotLoginException.<span class="keyword">class</span>)</span><br><span class="line">    <span class="keyword">public</span> ModelAndView defaultErrorHandler(HttpServletRequest req, Exception e) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        ModelAndView mav = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        mav.setViewName(DEFAULT_NOT_LOG);</span><br><span class="line">        <span class="keyword">return</span> mav;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>数据库源，mybatis，redis之类的就很常规了</p>
]]></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[老式web项目重构springboot帮助文档]]></title>
      <url>http://mzeht.com/2017/05/03/2017-05-05/</url>
      <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ol>
<li>采用springboot 1.5.3 重构现有项目</li>
<li>配置文件精简，提高开发效率</li>
<li>maven管理依赖包</li>
<li>注解代替xml</li>
</ol>
<h2 id="如何启动"><a href="#如何启动" class="headerlink" title="如何启动"></a>如何启动</h2><p>开发时idea<br><code>BootlabbookmanagerApplication</code>文件右侧绿色三角形，启动即可</p>
<h2 id="如何打包发布"><a href="#如何打包发布" class="headerlink" title="如何打包发布"></a>如何打包发布</h2><h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>本地需要安装maven，添加环境变量<br>项目根目录下</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>clean &amp;&amp; <span class="keyword">mvn </span>package -Dmaven.test<span class="meta">.skip</span></span><br></pre></td></tr></table></figure>
<p>在target目录下生成<br><code>bootlabbookmanager-0.0.1-SNAPSHOT.war</code></p>
<h3 id="前台运行"><a href="#前台运行" class="headerlink" title="前台运行"></a>前台运行</h3><p>前台启动（命令行启动，退出命令行，进程跟着退出）</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">java</span> <span class="selector-tag">-jar</span> <span class="selector-tag">bootlabbookmanager-0</span><span class="selector-class">.0</span><span class="selector-class">.1-SNAPSHOT</span><span class="selector-class">.war</span></span><br></pre></td></tr></table></figure>
<h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><p>后台运行（命令行关闭后进程仍在，发布到服务器上用）</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">nohup</span> <span class="selector-tag">java</span> <span class="selector-tag">-jar</span>  <span class="selector-tag">bootlabbookmanager-0</span><span class="selector-class">.0</span><span class="selector-class">.1-SNAPSHOT</span><span class="selector-class">.war</span> &amp;</span><br></pre></td></tr></table></figure>
<h3 id="重新发布"><a href="#重新发布" class="headerlink" title="重新发布"></a>重新发布</h3><p>查找旧进程并kill</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  target git:(master) ✗ ps -ef|grep bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">  501  3524  2794   0 12:25上午 ttys000    0:32.90 /usr/bin/java -jar bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">  501  3536  2794   0 12:25上午 ttys000    0:00.00 grep <span class="attribute">--color</span>=auto <span class="attribute">--exclude-dir</span>=.bzr <span class="attribute">--exclude-dir</span>=CVS <span class="attribute">--exclude-dir</span>=.git <span class="attribute">--exclude-dir</span>=.hg <span class="attribute">--exclude-dir</span>=.svn bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">➜  target git:(master) ✗ kill 3524</span><br><span class="line">➜  target git:(master) ✗ </span><br><span class="line">[1]  + 3524 exit 143   nohup java -jar bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">➜  target git:(master) ✗ ps -ef|grep bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">  501  3580  2794   0 12:27上午 ttys000    0:00.00 grep <span class="attribute">--color</span>=auto <span class="attribute">--exclude-dir</span>=.bzr <span class="attribute">--exclude-dir</span>=CVS <span class="attribute">--exclude-dir</span>=.git <span class="attribute">--exclude-dir</span>=.hg <span class="attribute">--exclude-dir</span>=.svn bootlabbookmanager-0.0.1-SNAPSHOT.war</span><br><span class="line">➜  target git:(master) ✗</span><br></pre></td></tr></table></figure>
<p>然后替换war包 后台启动新war包</p>
<h2 id="改造概述"><a href="#改造概述" class="headerlink" title="改造概述"></a>改造概述</h2><p>推荐两本书，电子版／实体<br><code>springboot实战</code><br><code>spring实战第四版</code></p>
<p>点到即止，零碎知识点可以以下方式查阅资料<br>推荐</p>
<ol>
<li><code>简书</code> 很多很好的spring文章和系列博客</li>
<li><code>stackoverflow</code> </li>
<li>springboot的官方<code>github</code> 本身就有很多示例了</li>
</ol>
<h3 id="添加jsp支持"><a href="#添加jsp支持" class="headerlink" title="添加jsp支持"></a>添加jsp支持</h3><ol>
<li>Application继承<code>SpringBootServletInitializer</code></li>
<li>pom文件添加jsp支持，servlet，标签，tomcat等等</li>
<li>view解析规则配置</li>
</ol>
<h3 id="登录拦截器"><a href="#登录拦截器" class="headerlink" title="登录拦截器"></a>登录拦截器</h3><p>见<code>WebMvcConfigurerAdapter</code>–》<code>addInterceptors</code></p>
<h3 id="资源映射"><a href="#资源映射" class="headerlink" title="资源映射"></a>资源映射</h3><p>见<code>WebMvcConfigurerAdapter</code>–》<code>addResourceHandlers</code></p>
<h3 id="UserNotLoginException-处理"><a href="#UserNotLoginException-处理" class="headerlink" title="UserNotLoginException 处理"></a>UserNotLoginException 处理</h3><p>见<code>GlobalExceptionHandler</code>–》<code>defaultErrorHandler</code></p>
<h3 id="全局错误页面处理"><a href="#全局错误页面处理" class="headerlink" title="全局错误页面处理"></a>全局错误页面处理</h3><p>见<code>BootlabbookmanagerApplication</code>–》<br><code>EmbeddedServletContainerCustomizer</code></p>
<h3 id="Mybatis"><a href="#Mybatis" class="headerlink" title="Mybatis"></a>Mybatis</h3><p>阿里开源druid数据库连接池<br>见<code>LabBookDBConfig</code>，时间问题，未启用数据库连接加密，但加入了监控页面<br>访问<code>http://localhost:8080/druid</code><br>yml文件中找到用户名，密码 登录<br>可查看sql监控，访问，servlet监控</p>
<p>注意：<code>ApplyPurchaseMapper</code>之类文件要添加注解</p>
<h3 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h3><p>见<code>log4j.xml</code></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><ol>
<li>Service 相关类都要<code>@Service</code>注解</li>
<li><code>@Autowired</code>一般直接标注在变量上，不用set</li>
<li><code>application.yml</code>可以定义常量</li>
<li>有兴趣可以用jenkins配置自动发布</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[android项目利用cmake方式实现ndk开发]]></title>
      <url>http://mzeht.com/2017/04/28/2017-04-28-1/</url>
      <content type="html"><![CDATA[<h2 id="添加ndk支持"><a href="#添加ndk支持" class="headerlink" title="添加ndk支持"></a>添加ndk支持</h2><p><code>gradle.properties</code>(project properties)</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">org.gradle.daemon</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">org.gradle.jvmargs</span>=-Xmx2048m -XX:MaxPermSize=<span class="number">512</span>m -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-<span class="number">8</span></span><br><span class="line"><span class="attr">org.gradle.parallel</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">org.gradle.configureondemand</span>=<span class="literal">true</span></span><br><span class="line"><span class="attr">android.useDeprecatedNdk</span>=<span class="literal">true</span></span><br></pre></td></tr></table></figure>
<h2 id="在需要ndk的模块新建JNI-Folder"><a href="#在需要ndk的模块新建JNI-Folder" class="headerlink" title="在需要ndk的模块新建JNI Folder"></a>在需要ndk的模块新建JNI Folder</h2><p>当前模块下生成了/src/main/jni</p>
<p>这个文件夹下放置<code>CMakeLists.txt</code>，和c文件<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-4-28/13776882-file_1493364079424_4904.png" alt></p>
<h2 id="创建CMakeLists-txt"><a href="#创建CMakeLists-txt" class="headerlink" title="创建CMakeLists.txt"></a>创建CMakeLists.txt</h2><p><code>stringutils</code> cmake生成so包命名相关<br>反编译apk，可以发现so包名称为<code>libstringutils.so</code></p>
<p><code>SHARED</code>之后</p>
<p>打包进入so包的文件目录，可以多个</p>
<p><code>cmake_minimum_required(VERSION 3.4.1)</code>默认版本</p>
<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">cmake_minimum_required(<span class="name">VERSION</span> <span class="number">3.4</span>.<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">add_library(<span class="name">stringutils</span> SHARED</span><br><span class="line">            stringutils.c)</span><br><span class="line"></span><br><span class="line"># Include libraries needed for stringutils lib</span><br><span class="line">target_link_libraries(<span class="name">stringutils</span> log android)</span><br></pre></td></tr></table></figure>
<p>##在java文件中创建native方法</p>
<p>如<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StringUtils</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> native String <span class="title">makeSkey</span><span class="params">(String[] <span class="built_in">array</span>, Context context)</span></span>;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.loadLibrary(<span class="string">"stringutils"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h2 id="创建c文件"><a href="#创建c文件" class="headerlink" title="创建c文件"></a>创建c文件</h2><p>在java报红的方法名处查看智能提示，生成c文件</p>
<p>如</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;jni.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line">Java_com_mzeht_wp_skbyjni_StringUtils_makeSkey(JNIEnv *env, jclass type, jobjectArray <span class="built_in">array</span>,</span><br><span class="line">                                               jobject context) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// TODO</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (*env)-&gt;NewStringUTF(env, <span class="string">"hehe"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>返回一个“hehe”，运行android项目即可</p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ndk </tag>
            
            <tag> cmake </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[android ndk开发检查包名，签名]]></title>
      <url>http://mzeht.com/2017/04/28/2017-04-28-2/</url>
      <content type="html"><![CDATA[<p>java层传入app的Context，ndk内检查包名和签名特征</p>
<h2 id="java-native-方法"><a href="#java-native-方法" class="headerlink" title="java native 方法"></a>java native 方法</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">native</span> <span class="function">String <span class="title">getSignIfo</span><span class="params">(Context context)</span></span>;</span><br></pre></td></tr></table></figure>
<h2 id="c语言调用"><a href="#c语言调用" class="headerlink" title="c语言调用"></a>c语言调用</h2><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">JNIEXPORT jstring JNICALL</span><br><span class="line">Java_com_example_hehe_utils_StringUtils_getSignIfo(JNIEnv *env, jclass <span class="built_in">type</span>, jobject obj) &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    // 获得Context类</span><br><span class="line">    jclass cls = <span class="function"><span class="params">(*env)</span>-&gt;</span>GetObjectClass(env, obj);</span><br><span class="line">    // 得到getPackageManager方法的ID</span><br><span class="line">    jmethodID mid = <span class="function"><span class="params">(*env)</span>-&gt;</span>GetMethodID(env, cls, <span class="string">"getPackageManager"</span>, <span class="string">"()Landroid/content/pm/PackageManager;"</span>);</span><br><span class="line"></span><br><span class="line">    // 获得应用包的管理器</span><br><span class="line">    jobject pm = <span class="function"><span class="params">(*env)</span>-&gt;</span>CallObjectMethod(env, obj, mid);</span><br><span class="line"></span><br><span class="line">    // 得到getPackageName方法的ID</span><br><span class="line"><span class="function">    <span class="title">mid</span> = <span class="params">(*env)</span>-&gt;</span>GetMethodID(env, cls, <span class="string">"getPackageName"</span>, <span class="string">"()Ljava/lang/String;"</span>);</span><br><span class="line">    // 获得当前应用包名</span><br><span class="line">    jstring packageName = <span class="function"><span class="params">(jstring)(*env)</span>-&gt;</span>CallObjectMethod(env, obj, mid);</span><br><span class="line"></span><br><span class="line">//    printf(<span class="string">"%s"</span>,packageName);</span><br><span class="line">//    const jbyte *str = <span class="function"><span class="params">(*env)</span>-&gt;</span>GetStringUTFChars(env, packageName, NULL);</span><br><span class="line">//    __android_log_print(ANDROID_LOG_INFO, <span class="string">"JNITag"</span>,<span class="string">"string From Java To C : %s"</span>, str);</span><br><span class="line"></span><br><span class="line">    // 获得PackageManager类</span><br><span class="line"><span class="function">    <span class="title">cls</span> = <span class="params">(*env)</span>-&gt;</span>GetObjectClass(env, pm);</span><br><span class="line">    // 得到getPackageInfo方法的ID</span><br><span class="line"><span class="function">    <span class="title">mid</span>  = <span class="params">(*env)</span>-&gt;</span>GetMethodID(env, cls, <span class="string">"getPackageInfo"</span>, <span class="string">"(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;"</span>);</span><br><span class="line">    // 获得应用包的信息</span><br><span class="line">    jobject packageInfo = <span class="function"><span class="params">(*env)</span>-&gt;</span>CallObjectMethod(env, pm, mid, packageName, <span class="number">0x40</span>); //GET_SIGNATURES = <span class="number">64</span>;</span><br><span class="line">    // 获得PackageInfo 类</span><br><span class="line"><span class="function">    <span class="title">cls</span> = <span class="params">(*env)</span>-&gt;</span>GetObjectClass(env, packageInfo);</span><br><span class="line">    // 获得签名数组属性的ID</span><br><span class="line">    jfieldID fid = <span class="function"><span class="params">(*env)</span>-&gt;</span>GetFieldID(env, cls, <span class="string">"signatures"</span>, <span class="string">"[Landroid/content/pm/Signature;"</span>);</span><br><span class="line">    // 得到签名数组</span><br><span class="line">    jobjectArray signatures = <span class="function"><span class="params">(jobjectArray)(*env)</span>-&gt;</span>GetObjectField(env, packageInfo, fid);</span><br><span class="line">    // 得到签名</span><br><span class="line">    jobject sign = <span class="function"><span class="params">(*env)</span>-&gt;</span>GetObjectArrayElement(env, signatures, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    // 获得Signature类</span><br><span class="line"><span class="function">    <span class="title">cls</span> = <span class="params">(*env)</span>-&gt;</span>GetObjectClass(env, sign);</span><br><span class="line">    // 得到toCharsString方法的ID</span><br><span class="line"><span class="function">    <span class="title">mid</span> = <span class="params">(*env)</span>-&gt;</span>GetMethodID(env, cls, <span class="string">"toCharsString"</span>, <span class="string">"()Ljava/lang/String;"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    jstring signString=<span class="function"><span class="params">(jstring)(*env)</span>-&gt;</span>CallObjectMethod(env, sign, mid);</span><br><span class="line">//    const jbyte *singn = <span class="function"><span class="params">(*env)</span>-&gt;</span>GetStringUTFChars(env, signString, NULL);</span><br><span class="line">//    __android_log_print(ANDROID_LOG_INFO, <span class="string">"JNITag"</span>,<span class="string">"string From Java To C : %s"</span>, singn);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> packageName;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="http://blog.csdn.net/grafx/article/details/40403577" target="_blank" rel="noopener">参考链接</a></p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ndk </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[jenkins 发布war包到远程tomcat(含脚本)]]></title>
      <url>http://mzeht.com/2017/04/28/2017-04-28/</url>
      <content type="html"><![CDATA[<h2 id="总体步骤"><a href="#总体步骤" class="headerlink" title="总体步骤"></a>总体步骤</h2><ol>
<li>配置源码</li>
<li>编译打包</li>
<li>ssh传输到远处服务器</li>
<li>启动远程服务器脚本</li>
</ol>
<h3 id="配置代码源"><a href="#配置代码源" class="headerlink" title="配置代码源"></a>配置代码源</h3><p>jenkis上的git插件</p>
<h3 id="编译打包"><a href="#编译打包" class="headerlink" title="编译打包"></a>编译打包</h3><p>jenkins机器上安装需要的命令工具<br>一般是maven</p>
<p>构建选项卡中，配置和项目相对应的打包脚本</p>
<p>如：</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>clean &amp;&amp; <span class="keyword">mvn </span>package -Dmaven.test<span class="meta">.skip</span></span><br></pre></td></tr></table></figure>
<h3 id="传输到远程服务器"><a href="#传输到远程服务器" class="headerlink" title="传输到远程服务器"></a>传输到远程服务器</h3><p>jenkins插件<code>ssh publish</code></p>
<p>系统设置中配置远程服务器信息（密钥或用户名密码）</p>
<p><code>构建后操作</code>选项卡中<br>如：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-4-28/37403645-file_1493355931851_4fe5.png" alt></p>
<h2 id="启动远程服务器脚本"><a href="#启动远程服务器脚本" class="headerlink" title="启动远程服务器脚本"></a>启动远程服务器脚本</h2><p><code>project_name</code> 生成的war包名称，没有’.war’<br><code>jenkins_dir</code> 本机上jenkins传输来的war包的存储位置<br><code>tomcat_dir</code> 该war包需要放置的tomcat的位置<br><code>shell_name</code> 脚本自身的名称</p>
<p>test-deploy.sh</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !bin/sh</span></span><br><span class="line"><span class="comment"># tomcat路径</span></span><br><span class="line">jenkins_dir=<span class="string">"/root/jenkinsproject"</span></span><br><span class="line">project_name=<span class="string">"delopytest"</span></span><br><span class="line">tomcat_dir=<span class="string">"/usr/apache-tomcat-7.0.70"</span></span><br><span class="line"><span class="comment"># 当前脚本名称</span></span><br><span class="line">shell_name=<span class="string">"test-deploy.sh"</span></span><br><span class="line">pid=`ps -ef | grep <span class="variable">$tomcat_dir</span> | grep -v <span class="variable">$shell_name</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line">echo <span class="string">"old pid:"</span>.<span class="variable">$pid</span></span><br><span class="line"><span class="keyword">if</span> test <span class="string">"$pid"</span></span><br><span class="line">then </span><br><span class="line">  echo <span class="string">"kill old pid: $pid ing"</span></span><br><span class="line">  kill -<span class="number">9</span> <span class="variable">$pid</span></span><br><span class="line">  <span class="comment"># 睡眠10s</span></span><br><span class="line">  sleep <span class="number">10</span>s</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	echo <span class="string">"not find old pid"</span></span><br><span class="line">fi</span><br><span class="line"><span class="comment"># 删除旧的war包及解压文件夹，拷贝新的war包</span></span><br><span class="line">rm -rf <span class="variable">$tomcat_dir</span><span class="regexp">/webapps/</span><span class="variable">$project_name</span>*</span><br><span class="line">cp <span class="variable">$jenkins_dir</span><span class="regexp">/$project_name.war  $tomcat_dir/</span>webapps</span><br><span class="line">sh <span class="variable">$tomcat_dir</span><span class="regexp">/bin/</span>startup.sh</span><br><span class="line">sleep <span class="number">10</span>s</span><br><span class="line"><span class="comment"># 检查启动</span></span><br><span class="line">newpid=`ps -ef | grep <span class="variable">$tomcat_dir</span> | grep -v <span class="variable">$shell_name</span> | grep -v grep | awk <span class="string">'&#123;print $2&#125;'</span>`</span><br><span class="line"><span class="keyword">if</span> test <span class="string">"$newpid"</span></span><br><span class="line">then</span><br><span class="line">	echo <span class="string">"new pid:"</span>.<span class="variable">$newpid</span></span><br><span class="line">	<span class="keyword">exit</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	echo <span class="string">"not find new pid"</span></span><br><span class="line">	<span class="keyword">exit</span> <span class="number">1</span></span><br><span class="line">fi</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> jenkins </tag>
            
            <tag> shell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mybatis-plugin收费插件破解]]></title>
      <url>http://mzeht.com/2017/02/10/Mybatis-plugin%E6%94%B6%E8%B4%B9%E6%8F%92%E4%BB%B6%E7%A0%B4%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p>IDEA版本</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">IntelliJ IDEA 2016.3.4</span><br><span class="line">Build #IU-163.12024.16, built on January 31, 2017</span><br><span class="line">Licensed <span class="keyword">to</span><span class="built_in"> lan </span>yu</span><br><span class="line">Subscription is active until February 25, 2017</span><br><span class="line">JRE: 1.8.0_112-release-408-b6 x86_64</span><br><span class="line">JVM: OpenJDK 64-Bit<span class="built_in"> Server </span>VM by JetBrains s.r.o</span><br></pre></td></tr></table></figure>
<p>Mybatis-plugin版本</p>
<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">Version:</span> <span class="number">2.9</span></span><br></pre></td></tr></table></figure>
<p>插件功能介绍地址</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="regexp">//</span>www.oschina.net<span class="regexp">/p/i</span>ntellij-mybatis-plugin</span><br></pre></td></tr></table></figure>
<p>破解方法来院地址</p>
<figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://myoss.github.io/<span class="number">2016</span>/MyBatis-Plugin-<span class="symbol">%E5</span><span class="symbol">%AD</span><span class="symbol">%A6</span><span class="symbol">%E4</span><span class="symbol">%B9</span><span class="symbol">%A0</span><span class="symbol">%E4</span><span class="symbol">%BD</span><span class="symbol">%BF</span><span class="symbol">%E7</span><span class="symbol">%94</span><span class="symbol">%A8</span>/</span><br></pre></td></tr></table></figure>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">➜  IntelliJIdea2016.<span class="number">3</span> git clone <span class="symbol">https:</span>/<span class="regexp">/github.com/myoss</span><span class="regexp">/profile.git</span></span><br><span class="line"><span class="regexp">Cloning into 'profile'...</span></span><br><span class="line"><span class="regexp">remote: Counting objects: 297, done.</span></span><br><span class="line"><span class="regexp">remote: Total 297 (delta 0), reused 0 (delta 0), pack-reused 297</span></span><br><span class="line"><span class="regexp">Receiving objects: 100% (297/</span><span class="number">297</span>), <span class="number">87.32</span> KiB | <span class="number">143.00</span> KiB/s, done.</span><br><span class="line">Resolving <span class="symbol">deltas:</span> <span class="number">100</span>% (<span class="number">90</span>/<span class="number">90</span>), done.</span><br><span class="line">➜  IntelliJIdea2016.<span class="number">3</span> ls</span><br><span class="line">ECTranslation1.<span class="number">3</span>.jar     GsonFormat.jar           Sexy_Editor.jar          availables.xml           idea-gitignore           jvm-memory-view          mybatis_plus</span><br><span class="line">GenerateSerialVersionUID MavenRunHelper           TranslationPlugin        codehelper.generator     jr-ide-idea              lombok-plugin            profile</span><br><span class="line">➜  IntelliJIdea2016.<span class="number">3</span> cd mybatis_plus</span><br><span class="line">➜  mybatis_plus ls</span><br><span class="line"><span class="class"><span class="keyword">lib</span></span></span><br><span class="line">➜  mybatis_plus cd <span class="class"><span class="keyword">lib</span></span></span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">ls</span></span></span><br><span class="line">mybatis-generator-core-<span class="number">1.3</span>.<span class="number">2</span>.jar mybatis_plus.jar                 ref.idea.common-<span class="number">1.0</span>.jar</span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">cp</span> -<span class="title">R</span> ~/<span class="title">Library</span>/<span class="title">Application</span>\ <span class="title">Support</span>/<span class="title">IntelliJIdea2016</span>.3/<span class="title">profile</span>/<span class="title">idea</span>/<span class="title">plugin</span></span></span><br><span class="line"><span class="symbol">usage:</span> cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file target_file</span><br><span class="line">       cp [-R [-H | -L | -P]] [-fi | -n] [-apvX] source_file ... target_directory</span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">cp</span> -<span class="title">R</span> ~/<span class="title">Library</span>/<span class="title">Application</span>\ <span class="title">Support</span>/<span class="title">IntelliJIdea2016</span>.3/<span class="title">profile</span>/<span class="title">idea</span>/<span class="title">plugin</span>/<span class="title">MybatisPlugin</span>/<span class="title">v2</span>.7\~<span class="title">v2</span>.87 .</span></span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">ls</span></span></span><br><span class="line">mybatis-generator-core-<span class="number">1.3</span>.<span class="number">2</span>.jar mybatis_plus.jar                 ref.idea.common-<span class="number">1.0</span>.jar          v2.<span class="number">7</span>~v2.<span class="number">87</span></span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">cp</span> -<span class="title">R</span> ~/<span class="title">Library</span>/<span class="title">Application</span>\ <span class="title">Support</span>/<span class="title">IntelliJIdea2016</span>.3/<span class="title">profile</span>/<span class="title">idea</span>/<span class="title">plugin</span>/<span class="title">MybatisPlugin</span>/<span class="title">v2</span>.7\~<span class="title">v2</span>.87 .</span></span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">ls</span></span></span><br><span class="line">mybatis-generator-core-<span class="number">1.3</span>.<span class="number">2</span>.jar mybatis_plus.jar                 ref.idea.common-<span class="number">1.0</span>.jar          v2.<span class="number">7</span>~v2.<span class="number">87</span></span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">cp</span> -<span class="title">R</span> ~/<span class="title">Library</span>/<span class="title">Application</span>\ <span class="title">Support</span>/<span class="title">IntelliJIdea2016</span>.3/<span class="title">profile</span>/<span class="title">idea</span>/<span class="title">plugin</span>/<span class="title">MybatisPlugin</span>/<span class="title">v2</span>.7\~<span class="title">v2</span>.87/<span class="title">com</span> .</span></span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">ls</span></span></span><br><span class="line">com                              mybatis-generator-core-<span class="number">1.3</span>.<span class="number">2</span>.jar mybatis_plus.jar                 ref.idea.common-<span class="number">1.0</span>.jar          v2.<span class="number">7</span>~v2.<span class="number">87</span></span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">jar</span> <span class="title">uvf</span> <span class="title">mybatis_plus</span>.<span class="title">jar</span> <span class="title">com</span></span></span><br><span class="line"></span><br><span class="line">正在添加: com/(输入 = <span class="number">0</span>) (输出 = <span class="number">0</span>)(存储了 <span class="number">0</span>%)</span><br><span class="line">正在添加: com/seventh7/(输入 = <span class="number">0</span>) (输出 = <span class="number">0</span>)(存储了 <span class="number">0</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/(输入 = <span class="number">0</span>) (输出 = <span class="number">0</span>)(存储了 <span class="number">0</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/dom/(输入 = <span class="number">0</span>) (输出 = <span class="number">0</span>)(存储了 <span class="number">0</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/dom/model/(输入 = <span class="number">0</span>) (输出 = <span class="number">0</span>)(存储了 <span class="number">0</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/(输入 = <span class="number">0</span>) (输出 = <span class="number">0</span>)(存储了 <span class="number">0</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/license/(输入 = <span class="number">0</span>) (输出 = <span class="number">0</span>)(存储了 <span class="number">0</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/license/ActivationDriver$<span class="number">1</span>.<span class="keyword">class</span>(输入 = <span class="number">1926</span>) (输出 = <span class="number">797</span>)(压缩了 <span class="number">58</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/license/ActivationDriver.<span class="keyword">class</span>(输入 = <span class="number">1398</span>) (输出 = <span class="number">656</span>)(压缩了 <span class="number">53</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/RefProject$<span class="number">1</span>.<span class="keyword">class</span>(输入 = <span class="number">2224</span>) (输出 = <span class="number">1092</span>)(压缩了 <span class="number">50</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/ref/RefProject.<span class="keyword">class</span>(输入 = <span class="number">1982</span>) (输出 = <span class="number">919</span>)(压缩了 <span class="number">53</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/service/(输入 = <span class="number">0</span>) (输出 = <span class="number">0</span>)(存储了 <span class="number">0</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/service/JavaService$<span class="number">1</span>.<span class="keyword">class</span>(输入 = <span class="number">1408</span>) (输出 = <span class="number">613</span>)(压缩了 <span class="number">56</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/service/JavaService$<span class="number">2</span>.<span class="keyword">class</span>(输入 = <span class="number">1312</span>) (输出 = <span class="number">575</span>)(压缩了 <span class="number">56</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/service/JavaService.<span class="keyword">class</span>(输入 = <span class="number">10921</span>) (输出 = <span class="number">4166</span>)(压缩了 <span class="number">61</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/util/(输入 = <span class="number">0</span>) (输出 = <span class="number">0</span>)(存储了 <span class="number">0</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/util/JavaUtils$SystemData.<span class="keyword">class</span>(输入 = <span class="number">3412</span>) (输出 = <span class="number">1602</span>)(压缩了 <span class="number">53</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/util/JavaUtils.<span class="keyword">class</span>(输入 = <span class="number">13339</span>) (输出 = <span class="number">4773</span>)(压缩了 <span class="number">64</span>%)</span><br><span class="line">正在添加: com/seventh7/mybatis/dom/model/Completion.<span class="keyword">class</span>(输入 = <span class="number">1663</span>) (输出 = <span class="number">923</span>)(压缩了 <span class="number">44</span>%)</span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">ls</span></span></span><br><span class="line">com                              mybatis-generator-core-<span class="number">1.3</span>.<span class="number">2</span>.jar mybatis_plus.jar                 ref.idea.common-<span class="number">1.0</span>.jar          v2.<span class="number">7</span>~v2.<span class="number">87</span></span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">rm</span> -<span class="title">rf</span> <span class="title">v2</span>.7\~<span class="title">v2</span>.87</span></span><br><span class="line">➜  <span class="class"><span class="keyword">lib</span> <span class="title">ls</span></span></span><br><span class="line">com                              mybatis-generator-core-<span class="number">1.3</span>.<span class="number">2</span>.jar mybatis_plus.jar                 ref.idea.common-<span class="number">1.0</span>.jar</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
            <category> 破解 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mybatis </tag>
            
            <tag> IDEA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos下docker导致的升级内核]]></title>
      <url>http://mzeht.com/2017/02/01/Centos%E4%B8%8Bdocker%E5%AF%BC%E8%87%B4%E7%9A%84%E5%8D%87%E7%BA%A7%E5%86%85%E6%A0%B8/</url>
      <content type="html"><![CDATA[<p>接着上一篇文章</p>
<p>形如下面的错误出现了</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --rm -ti <span class="symbol">ubuntu:</span><span class="number">14.04</span> bin/bash                                       </span><br><span class="line">FATA[<span class="number">0</span>000] Error response from <span class="symbol">daemon:</span> mkdir /var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span>/<span class="title">overlay</span>/<span class="title">c4a8f5e516d401534f2d994f5546f7e08639ffd675eb3573267f76d79394f172</span>-<span class="title">init</span>/<span class="title">merged</span>/<span class="title">dev</span>/<span class="title">shm</span>: <span class="title">invalid</span> <span class="title">argument</span></span></span><br></pre></td></tr></table></figure>
<p>Centos下安装docker正常，拉取镜像正常，就在启动容器的时候报错<br><a id="more"></a></p>
<p>一番谷歌，github</p>
<p><a href="https://github.com/docker/docker/issues/10294" target="_blank" rel="noopener">https://github.com/docker/docker/issues/10294</a></p>
<h1 id="首先检查docker-info"><a href="#首先检查docker-info" class="headerlink" title="首先检查docker info"></a>首先检查docker info</h1><p>如果有</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">WARNING: </span>bridge-nf-call-iptables is disabled</span><br><span class="line"><span class="symbol">WARNING: </span>bridge-nf-call-ip6tables is disabled</span><br></pre></td></tr></table></figure>
<p>就需要添加内核参数，具体看上一篇</p>
<p>之后看到</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Fixed...</span><br><span class="line"></span><br><span class="line">from docker official site.</span><br><span class="line"></span><br><span class="line">To configure Docker to <span class="keyword">use</span> the overlay <span class="keyword">storage</span> driver your Docker host must be running <span class="keyword">version</span> <span class="number">3.18</span> <span class="keyword">of</span> the Linux kernel (preferably newer) <span class="keyword">with</span> the overlay kernel <span class="keyword">module</span> loaded. OverlayFS can operate <span class="keyword">on</span> top <span class="keyword">of</span> most supported Linux filesystems. However, ext4 <span class="keyword">is</span> currently recommended <span class="keyword">for</span> <span class="keyword">use</span> <span class="keyword">in</span> production environments.</span><br><span class="line">so, <span class="keyword">update</span> kernel <span class="keyword">from</span> <span class="number">3.10</span><span class="number">.0</span> <span class="keyword">to</span> <span class="number">3.18</span><span class="number">.0</span> + <span class="keyword">fixed</span> the issue.</span><br></pre></td></tr></table></figure>
<p>提示我们要升级Centos内核3.10.0 to 3.18.0 + </p>
<h1 id="升级内核"><a href="#升级内核" class="headerlink" title="升级内核"></a>升级内核</h1><h2 id="查看机器内核版本"><a href="#查看机器内核版本" class="headerlink" title="查看机器内核版本"></a>查看机器内核版本</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">uname</span> <span class="selector-tag">-r</span></span><br><span class="line">4<span class="selector-class">.9</span><span class="selector-class">.6-1</span><span class="selector-class">.el7</span><span class="selector-class">.elrepo</span><span class="selector-class">.x86_64</span></span><br></pre></td></tr></table></figure>
<p>这里我是升级后在写的文章，升级之前是3.10</p>
<h2 id="查看Linux各版本内核"><a href="#查看Linux各版本内核" class="headerlink" title="查看Linux各版本内核"></a>查看Linux各版本内核</h2><p><a href="https://www.kernel.org/" target="_blank" rel="noopener">网站地址</a></p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/55278371-file_1485959943374_7bc7.png" alt></p>
<p>稳定版 4.9.7</p>
<h2 id="导入key"><a href="#导入key" class="headerlink" title="导入key"></a>导入key</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --<span class="keyword">import</span> <span class="string">https:</span><span class="comment">//www.elrepo.org/RPM-GPG-KEY-elrepo.org</span></span><br></pre></td></tr></table></figure>
<h2 id="安装elrepo的yum源"><a href="#安装elrepo的yum源" class="headerlink" title="安装elrepo的yum源"></a>安装elrepo的yum源</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh <span class="string">http:</span><span class="comment">//www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span></span><br></pre></td></tr></table></figure>
<h2 id="安装内核"><a href="#安装内核" class="headerlink" title="安装内核"></a>安装内核</h2><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum --enablerepo=elrepo-kernel install  kernel-<span class="keyword">ml</span>-devel kernel-<span class="keyword">ml</span> -<span class="built_in">y</span></span><br></pre></td></tr></table></figure>
<h2 id="查看默认启动顺序"><a href="#查看默认启动顺序" class="headerlink" title="查看默认启动顺序"></a>查看默认启动顺序</h2><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">awk -F\' '$<span class="number">1</span>==<span class="string">"menuentry "</span> &#123;print $<span class="number">2</span>&#125;' /etc/grub2.cfg</span><br><span class="line">CentOS Linux (<span class="number">4.9</span><span class="number">.6</span><span class="number">-1.</span>el7.elrepo.x86_64) <span class="number">7</span> (Core)</span><br><span class="line">CentOS Linux (<span class="number">3.10</span><span class="number">.0</span><span class="number">-514.2</span><span class="number">.2</span>.el7.x86_64) <span class="number">7</span> (Core)</span><br><span class="line">CentOS Linux (<span class="number">3.10</span><span class="number">.0</span><span class="number">-327.22</span><span class="number">.2</span>.el7.x86_64) <span class="number">7</span> (Core)</span><br><span class="line">CentOS Linux (<span class="number">3.10</span><span class="number">.0</span><span class="number">-327.</span>el7.x86_64) <span class="number">7</span> (Core)</span><br><span class="line">CentOS Linux (<span class="number">0</span>-rescue<span class="number">-7</span>d26c16f128042a684ea474c9e2c240f) <span class="number">7</span> (Core)</span><br></pre></td></tr></table></figure>
<h2 id="调整启动顺序"><a href="#调整启动顺序" class="headerlink" title="调整启动顺序"></a>调整启动顺序</h2><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grub2-<span class="keyword">set</span>-<span class="keyword">default</span> <span class="number">0</span></span><br></pre></td></tr></table></figure>
<h2 id="重新启动"><a href="#重新启动" class="headerlink" title="重新启动"></a>重新启动</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">reboot</span></span><br></pre></td></tr></table></figure>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> <span class="selector-tag">uname</span> <span class="selector-tag">-r</span></span><br><span class="line">4<span class="selector-class">.9</span><span class="selector-class">.6-1</span><span class="selector-class">.el7</span><span class="selector-class">.elrepo</span><span class="selector-class">.x86_64</span></span><br></pre></td></tr></table></figure>
<p>成功</p>
]]></content>
      
        <categories>
            
            <category> 运维 </category>
            
            <category> docker </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos下docker部署rap]]></title>
      <url>http://mzeht.com/2017/02/01/Centos%E4%B8%8Bdocker%E9%83%A8%E7%BD%B2rap/</url>
      <content type="html"><![CDATA[<p><a href="http://rap.taobao.org/org/index.do" target="_blank" rel="noopener">rap官网</a><br><a href="https://github.com/thx/RAP/wiki/home_cn" target="_blank" rel="noopener">rapgithub地址</a></p>
<p>RAP是一个GUI的WEB接口管理工具。在RAP中，您可定义接口的URL、请求&amp;响应细节格式等等。通过分析这些数据，RAP提供MOCK服务、测试服务等自动化工具。RAP同时提供大量企业级功能，帮助企业和团队高效的工作。</p>
<p>在前后端分离的开发模式下，我们通常需要定义一份接口文档来规范接口的具体信息。如一个请求的地址、有几个参数、参数名称及类型含义等等。RAP 首先方便团队录入、查看和管理这些接口文档，并通过分析结构化的文档数据，重复利用并生成自测数据、提供自测控制台等等… 大幅度提升开发效率</p>
<a id="more"></a>
<p>1.<code>强大的GUI工具</code> 给力的用户体验，你将会爱上使用RAP来管理您的API文档。<br>2.<code>完善的MOCK服务</code> 文档定义好的瞬间，所有接口已经准备就绪。有了MockJS，无论您的业务模型有多复杂，它都能很好的满足。</p>
<h1 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h1><p>由于我是在阿里云上的服务器</p>
<h2 id="采用阿里云的脚本进行安装"><a href="#采用阿里云的脚本进行安装" class="headerlink" title="采用阿里云的脚本进行安装"></a>采用阿里云的脚本进行安装</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL http://acs-public-mirror.oss-<span class="keyword">cn</span>-hangzhou.aliyuncs.<span class="keyword">com</span>/docker-engine/internet | <span class="keyword">sh</span> -</span><br></pre></td></tr></table></figure>
<h2 id="添加内核参数"><a href="#添加内核参数" class="headerlink" title="添加内核参数"></a>添加内核参数</h2><p>默认配置下，在 CentOS 使用 Docker 可能会碰到下面的这些警告信息：</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">WARNING: </span>bridge-nf-call-iptables is disabled</span><br><span class="line"><span class="symbol">WARNING: </span>bridge-nf-call-ip6tables is disabled</span><br></pre></td></tr></table></figure>
<p>很不巧我就遇到了</p>
<p>添加内核配置参数以启用这些功能。</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ sudo tee -<span class="selector-tag">a</span> /etc/sysctl<span class="selector-class">.conf</span> &lt;&lt;-EOF</span><br><span class="line">net<span class="selector-class">.bridge</span><span class="selector-class">.bridge-nf-call-ip6tables</span> = <span class="number">1</span></span><br><span class="line">net<span class="selector-class">.bridge</span><span class="selector-class">.bridge-nf-call-iptables</span> = <span class="number">1</span></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure>
<p>然后重新加载 sysctl.conf</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo sysctl -p</span><br></pre></td></tr></table></figure>
<h1 id="配置加速器"><a href="#配置加速器" class="headerlink" title="配置加速器"></a>配置加速器</h1><p> 参考阿里云论坛的一篇文章<a href="https://yq.aliyun.com/articles/29941" target="_blank" rel="noopener">here</a></p>
<p>CentOS的配置方式略微复杂，需要先将默认的配置文件复制出来<br>/lib/systemd/system/docker.service -&gt; /etc/systemd/system/docker.service<br>然后再将加速器地址添加到配置文件的启动命令<br>重启Docker就可以了。</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo cp -n /<span class="class"><span class="keyword">lib</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">docker</span>.<span class="title">service</span> /<span class="title">etc</span>/<span class="title">systemd</span>/<span class="title">system</span>/<span class="title">docker</span>.<span class="title">service</span></span></span><br><span class="line">sudo sed -i <span class="string">"s|ExecStart=/usr/bin/docker daemon|ExecStart=/usr/bin/docker daemon --registry-mirror=&lt;your accelerate address&gt;|g"</span> /etc/systemd/system/docker.service</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo service docker restart</span><br></pre></td></tr></table></figure>
<p>your accelerate address 处填入阿里云账号分配的加速器地址</p>
<h1 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h1><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">docker search rap</span><br><span class="line">NAME                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">neo4j                           Neo4j <span class="keyword">is</span> a highly scalable, robust native ...   282       <span class="comment">[OK]</span></span><br><span class="line">r-base                          R <span class="keyword">is</span> a system for statistical computation ...   147       <span class="comment">[OK]</span></span><br><span class="line">arangodb                        ArangoDB - a distributed database with a f...   78        <span class="comment">[OK]</span></span><br><span class="line">orientdb                        OrientDB a Multi-Model <span class="keyword">Open</span> Source NoSQL D...   46        <span class="comment">[OK]</span></span><br><span class="line">ubuntu-debootstrap              debootstrap --variant=minbase --components...   27        <span class="comment">[OK]</span></span><br><span class="line">rapidftr/rapidftr               UNICEF RapidFTR (Family Tracing and Reunif...   2                    <span class="comment">[OK]</span></span><br><span class="line">rapi/psgi                       Image for running PSGI apps, comes with Ra...   2                    <span class="comment">[OK]</span></span><br><span class="line">huangfushun/rap                 ali rap web ui docker file                      1                    <span class="comment">[OK]</span></span><br><span class="line">lihuansse/rap                   RAP 接口管理工具                                      1</span><br><span class="line">masonliu/rap                    Docker Image for RAP https://github.com/th...   1</span><br><span class="line">rapidoid                        Rapidoid <span class="keyword">is</span> a high-performance HTTP server...   1         <span class="comment">[OK]</span></span><br><span class="line">ukgovdatascience/rap-docker     Environment for reproducible analytical pi...   0                    <span class="comment">[OK]</span></span><br><span class="line">rapidreg/rapidreg                                                               0                    <span class="comment">[OK]</span></span><br><span class="line">raphiz/raphael.li                                                               0                    <span class="comment">[OK]</span></span><br><span class="line">rapi/rapidapp                   Standard RapidApp base image, from officia...   0                    <span class="comment">[OK]</span></span><br><span class="line">team19awshack/rapidprowebhook   RapidProWebhook                                 0                    <span class="comment">[OK]</span></span><br><span class="line">tp81/rapidstorm                 RapidSTORM docker image                         0                    <span class="comment">[OK]</span></span><br><span class="line">qdsang/rap                      docker rap alpine                               0                    <span class="comment">[OK]</span></span><br><span class="line">raphsfeir/raphaelsfeir          Portfolio and blog for me                       0                    <span class="comment">[OK]</span></span><br><span class="line">rapidpro/rapidpro-base          Base Python 2.7 + geolibs Docker image for...   0                    <span class="comment">[OK]</span></span><br><span class="line">tonimichel/rapidflask           A boilerplate flask application for easy s...   0                    <span class="comment">[OK]</span></span><br><span class="line">andreweskeclarke/rapidftr                                                       0                    <span class="comment">[OK]</span></span><br><span class="line">raphiz/mathe.raphael.li                                                         0                    <span class="comment">[OK]</span></span><br><span class="line">raphaelgroup/magi                                                               0                    <span class="comment">[OK]</span></span><br><span class="line">divio/rapidpro                  RapidPro in docker.                             0                    <span class="comment">[OK]</span></span><br></pre></td></tr></table></figure>
<p>这里选择lihuansse/rap</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> pull lihuansse/rap</span><br></pre></td></tr></table></figure>
<p>创建并启动</p>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">run</span> <span class="comment">--name rap -p 8080:8080 -d lihuansse/rap:latest</span></span><br></pre></td></tr></table></figure>
<p>然而就在即将完成这最后一步的时候</p>
<p>形如下面的错误出现了</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --rm -ti <span class="symbol">ubuntu:</span><span class="number">14.04</span> bin/bash                                       </span><br><span class="line">FATA[<span class="number">0</span>000] Error response from <span class="symbol">daemon:</span> mkdir /var/<span class="class"><span class="keyword">lib</span>/<span class="title">docker</span>/<span class="title">overlay</span>/<span class="title">c4a8f5e516d401534f2d994f5546f7e08639ffd675eb3573267f76d79394f172</span>-<span class="title">init</span>/<span class="title">merged</span>/<span class="title">dev</span>/<span class="title">shm</span>: <span class="title">invalid</span> <span class="title">argument</span></span></span><br></pre></td></tr></table></figure>
<p>请看下回分解</p>
]]></content>
      
        <categories>
            
            <category> 运维 </category>
            
            <category> docker </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Centos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[docker相关概念]]></title>
      <url>http://mzeht.com/2017/02/01/dokcer%E7%9B%B8%E5%85%B3%E6%A6%82%E5%BF%B5/</url>
      <content type="html"><![CDATA[<h2 id="Docker-容器"><a href="#Docker-容器" class="headerlink" title="Docker 容器"></a>Docker 容器</h2><p>镜像（Image）和容器（Container）的关系，就像是面向对象程序设计中的类和实例一样，镜像是静态的定义，容器是镜像运行时的实体。容器可以被创建、启动、停止、删除、暂停等。</p>
<p>容器的实质是进程，但与直接在宿主执行的进程不同，容器进程运行于属于自己的独立的 命名空间。因此容器可以拥有自己的 root 文件系统、自己的网络配置、自己的进程空间，甚至自己的用户 ID 空间。容器内的进程是运行在一个隔离的环境里，使用起来，就好像是在一个独立于宿主的系统下操作一样。这种特性使得容器封装的应用比直接在宿主运行更加安全。也因为这种隔离的特性，很多人初学 Docker 时常常会把容器和虚拟机搞混。</p>
<a id="more"></a>
<p>前面讲过镜像使用的是分层存储，容器也是如此。每一个容器运行时，是以镜像为基础层，在其上创建一个当前容器的存储层，我们可以称这个为容器运行时读写而准备的存储层为容器存储层。</p>
<p>容器存储层的生存周期和容器一样，容器消亡时，容器存储层也随之消亡。因此，任何保存于容器存储层的信息都会随容器删除而丢失。</p>
<p>按照 Docker 最佳实践的要求，容器不应该向其存储层内写入任何数据，容器存储层要保持无状态化。所有的文件写入操作，都应该使用 数据卷（Volume）、或者绑定宿主目录，在这些位置的读写会跳过容器存储层，直接对宿主(或网络存储)发生读写，其性能和稳定性更高。</p>
<p>数据卷的生存周期独立于容器，容器消亡，数据卷不会消亡。因此，使用数据卷后，容器可以随意删除、重新 run，数据却不会丢失。</p>
<h2 id="Docker-镜像"><a href="#Docker-镜像" class="headerlink" title="Docker 镜像"></a>Docker 镜像</h2><p>我们都知道，操作系统分为内核和用户空间。对于 Linux 而言，内核启动后，会挂载 root 文件系统为其提供用户空间支持。而 Docker 镜像（Image），就相当于是一个 root 文件系统。比如官方镜像 ubuntu:14.04 就包含了完整的一套 Ubuntu 14.04 最小系统的 root 文件系统。</p>
<p>Docker 镜像是一个特殊的文件系统，除了提供容器运行时所需的程序、库、资源、配置等文件外，还包含了一些为运行时准备的一些配置参数（如匿名卷、环境变量、用户等）。镜像不包含任何动态数据，其内容在构建之后也不会被改变。</p>
<h3 id="分层存储"><a href="#分层存储" class="headerlink" title="分层存储"></a>分层存储</h3><p>因为镜像包含操作系统完整的 root 文件系统，其体积往往是庞大的，因此在 Docker 设计时，就充分利用 Union FS 的技术，将其设计为分层存储的架构。所以严格来说，镜像并非是像一个 ISO 那样的打包文件，镜像只是一个虚拟的概念，其实际体现并非由一个文件组成，而是由一组文件系统组成，或者说，由多层文件系统联合组成。</p>
<p>镜像构建时，会一层层构建，前一层是后一层的基础。每一层构建完就不会再发生改变，后一层上的任何改变只发生在自己这一层。比如，删除前一层文件的操作，实际不是真的删除前一层的文件，而是仅在当前层标记为该文件已删除。在最终容器运行的时候，虽然不会看到这个文件，但是实际上该文件会一直跟随镜像。因此，在构建镜像的时候，需要额外小心，每一层尽量只包含该层需要添加的东西，任何额外的东西应该在该层构建结束前清理掉。</p>
<p>分层存储的特征还使得镜像的复用、定制变的更为容易。甚至可以用之前构建好的镜像作为基础层，然后进一步添加新的层，以定制自己所需的内容，构建新的镜像。</p>
<p>关于镜像构建，将会在后续相关章节中做进一步的讲解。</p>
<h2 id="Docker-Registry"><a href="#Docker-Registry" class="headerlink" title="Docker Registry"></a>Docker Registry</h2><p>镜像构建完成后，可以很容易的在当前宿主上运行，但是，如果需要在其它服务器上使用这个镜像，我们就需要一个集中的存储、分发镜像的服务，<a href="https://docs.docker.com/registry/" target="_blank" rel="noopener">Docker Registry</a> 就是这样的服务。</p>
<p>一个 <strong>Docker Registry</strong> 中可以包含多个<strong>仓库</strong>（Repository）；每个仓库可以包含多个<strong>标签</strong>（Tag）；每个标签对应一个镜像。</p>
<p>一般而言，一个仓库包含的是同一个软件的不同版本的镜像，而标签则用于对应于软件的的不同版本。我们可以通过 <code>&lt;仓库名&gt;:&lt;标签&gt;</code> 的格式来指定具体是哪个版本的镜像。如果不给出标签，将以 <code>latest</code> 作为默认标签。</p>
<p>以 <a href="https://hub.docker.com/_/ubuntu/" target="_blank" rel="noopener">Ubuntu 镜像</a> 为例，<code>ubuntu</code> 是仓库的名字，其内包含有不同的版本标签，如，<code>14.04</code>, <code>16.04</code>。我们可以通过 <code>ubuntu:14.04</code>，或者 <code>ubuntu:16.04</code> 来具体指定所需哪个版本的镜像。如果忽略了标签，比如 <code>ubuntu</code>，那将视为 <code>ubuntu:latest</code>。</p>
<p>仓库名经常以 <em>两段式路径</em> 形式出现，比如 <code>jwilder/nginx-proxy</code>，前者往往意味着 Docker Registry 多用户环境下的用户名，后者则往往是对应的软件名。但这并非绝对，取决于所使用的具体 Docker Registry 的软件或服务。</p>
<h3 id="Docker-Registry-公开服务"><a href="#Docker-Registry-公开服务" class="headerlink" title="Docker Registry 公开服务"></a>Docker Registry 公开服务</h3><p>Docker Registry 公开服务是开放给用户使用、允许用户管理镜像的 Registry 服务。一般这类公开服务允许用户免费上传、下载公开的镜像，并可能提供收费服务供用户管理私有镜像。</p>
<p>最常使用的 Registry 公开服务是官方的 <a href="https://hub.docker.com/" target="_blank" rel="noopener">Docker Hub</a>，这也是默认的 Registry，并拥有大量的高质量的官方镜像。除此以外，还有 <a href="https://coreos.com/" target="_blank" rel="noopener">CoreOS</a> 的 <a href="https://quay.io/repository/" target="_blank" rel="noopener">Quay.io</a>，CoreOS 相关的镜像存储在这里；Google 的 <a href="https://cloud.google.com/container-registry/" target="_blank" rel="noopener">Google Container Registry</a>，<a href="http://kubernetes.io/" target="_blank" rel="noopener">Kubernetes</a> 的镜像使用的就是这个服务。</p>
<p>由于某些原因，在国内访问这些服务可能会比较慢。国内的一些云服务商提供了针对 Docker Hub 的镜像服务（Registry Mirror），这些镜像服务被称为<strong>加速器</strong>。常见的有 <a href="https://cr.console.aliyun.com/#/accelerator" target="_blank" rel="noopener">阿里云加速器</a>、<a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="noopener">DaoCloud 加速器</a>、<a href="http://docs.alauda.cn/feature/accelerator.html" target="_blank" rel="noopener">灵雀云加速器</a>等。使用加速器会直接从国内的地址下载 Docker Hub 的镜像，比直接从官方网站下载速度会提高很多。在后面的章节中会有进一步如何配置加速器的讲解。</p>
<p>国内也有一些云服务商提供类似于 Docker Hub 的公开服务。比如 <a href="https://hub.tenxcloud.com/" target="_blank" rel="noopener">时速云镜像仓库</a>、<a href="https://c.163.com/hub#/m/library/" target="_blank" rel="noopener">网易云镜像服务</a>、<a href="https://hub.daocloud.io/" target="_blank" rel="noopener">DaoCloud 镜像市场</a>、<a href="https://cr.console.aliyun.com" target="_blank" rel="noopener">阿里云镜像库</a>等。</p>
<h3 id="私有-Docker-Registry"><a href="#私有-Docker-Registry" class="headerlink" title="私有 Docker Registry"></a>私有 Docker Registry</h3><p>除了使用公开服务外，用户还可以在本地搭建私有 Docker Registry。Docker 官方提供了 <a href="https://hub.docker.com/_/registry/" target="_blank" rel="noopener">Docker Registry 镜像</a>，可以直接使用做为私有 Registry 服务。在后续的相关章节中，会有进一步的搭建私有 Registry 服务的讲解。</p>
<p>开源的 Docker Registry 镜像只提供了 <a href="https://docs.docker.com/registry/spec/api/" target="_blank" rel="noopener">Docker Registry API</a> 的服务端实现，足以支持 <code>docker</code> 命令，不影响使用。但不包含图形界面，以及镜像维护、用户管理、访问控制等高级功能。在官方的商业化版本 <a href="https://docs.docker.com/datacenter/dtr/2.0/" target="_blank" rel="noopener">Docker Trusted Registry</a> 中，提供了这些高级功能。</p>
<p>除了官方的 Docker Registry 外，还有第三方软件实现了 Docker Registry API，甚至提供了用户界面以及一些高级功能。比如，<a href="http://vmware.github.io/harbor/index_cn.html" target="_blank" rel="noopener">VMWare Harbor</a> 和 <a href="https://www.sonatype.com/docker" target="_blank" rel="noopener">Sonatype Nexus</a>。</p>
]]></content>
      
        <categories>
            
            <category> 运维 </category>
            
            <category> docker </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mac下docker的应用]]></title>
      <url>http://mzeht.com/2017/01/28/Mac%E4%B8%8Bdocker%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      <content type="html"><![CDATA[<h1 id="mac安装docker"><a href="#mac安装docker" class="headerlink" title="mac安装docker"></a>mac安装docker</h1><p><a href="https://download.docker.com/mac/stable/Docker.dmg" target="_blank" rel="noopener">下载地址</a><br>一路next</p>
<p>最新版<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-1-28/31352377-file_1485609643545_57d2.png" alt></p>
<p>安装好以上安装包后，打开kitematic,提示下载此软件，<br>下载好后拖入application</p>
<p> kitematic是docker收购的gui客户端<br> <a id="more"></a><br> ktematic启动方式既可以是监控已运行的docker，也可以是另启动一个虚拟机，如图<br> <img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/67359041-file_1485919722478_98b.png" alt><br> 此处建议前者（启动速度快，ktematic默认就是前者启动方式，后者还要virtualbox）</p>
<p> <img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/41048694-file_1485919676611_9d85.png" alt></p>
<p>上图左侧就是docker客户端启动后，存在的容器及相关信息，可以运行，重启，查看dockerhub上的文档，有容器内日志，web项目右侧还有预览画面，非常方便，但是相关命令还是要熟悉，gui为辅助，大部分服务器上的操作还是要靠手敲命令</p>
<h2 id="配置加速器"><a href="#配置加速器" class="headerlink" title="配置加速器"></a>配置加速器</h2><p><a href="https://cr.console.aliyun.com/#/accelerator" target="_blank" rel="noopener">阿里云加速器获取地址</a><br>注册一个阿里云账号，访问以上地址，查看加速器，就可以看到分配的加速器地址</p>
<p><a href="https://www.daocloud.io/mirror#accelerator-doc" target="_blank" rel="noopener">DaoCloud加速器</a><br>注册并获得加速器地址</p>
<p>到客户端的Daemon选项卡配置获取到的地址<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/58855725-file_1485919966984_1093e.png" alt><br>preferens-Damon-Basic<br>Registry mirrors</p>
<h2 id="命令测试"><a href="#命令测试" class="headerlink" title="命令测试"></a>命令测试</h2><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ docker <span class="params">--version</span></span><br><span class="line">Docker <span class="keyword">version</span> 1.13.0, build 49bf474</span><br><span class="line">➜  ~ docker<span class="params">--compose</span> <span class="params">--version</span></span><br><span class="line">zsh: <span class="keyword">command</span> not found: docker<span class="params">--compose</span></span><br><span class="line">➜  ~ docker-compose <span class="params">--version</span></span><br><span class="line">docker-compose <span class="keyword">version</span> 1.10.0, build 4bd6f1a</span><br><span class="line">➜  ~ docker-machine <span class="params">--version</span></span><br><span class="line">docker-machine <span class="keyword">version</span> 0.9.0, build 15fd4c7</span><br><span class="line">➜  ~</span><br></pre></td></tr></table></figure>
<h1 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h1><p>docker search </p>
<figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ docker search rap</span><br><span class="line">NAME                            DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">neo4j                           Neo4j <span class="keyword">is</span> a highly scalable, robust native ...   282       <span class="comment">[OK]</span></span><br><span class="line">r-base                          R <span class="keyword">is</span> a system for statistical computation ...   147       <span class="comment">[OK]</span></span><br><span class="line">arangodb                        ArangoDB - a distributed database with a f...   78        <span class="comment">[OK]</span></span><br><span class="line">orientdb                        OrientDB a Multi-Model <span class="keyword">Open</span> Source NoSQL D...   46        <span class="comment">[OK]</span></span><br><span class="line">ubuntu-debootstrap              debootstrap --variant=minbase --components...   27        <span class="comment">[OK]</span></span><br><span class="line">rapidftr/rapidftr               UNICEF RapidFTR (Family Tracing and Reunif...   2                    <span class="comment">[OK]</span></span><br><span class="line">rapi/psgi                       Image for running PSGI apps, comes with Ra...   2                    <span class="comment">[OK]</span></span><br><span class="line">masonliu/rap                    Docker Image for RAP https://github.com/th...   1</span><br><span class="line">huangfushun/rap                 ali rap web ui docker file                      1                    <span class="comment">[OK]</span></span><br><span class="line">lihuansse/rap                   RAP 接口管理工具                                      1</span><br><span class="line">rapidoid                        Rapidoid <span class="keyword">is</span> a high-performance HTTP server...   1         <span class="comment">[OK]</span></span><br><span class="line">ukgovdatascience/rap-docker     Environment for reproducible analytical pi...   0                    <span class="comment">[OK]</span></span><br><span class="line">rapidreg/rapidreg                                                               0                    <span class="comment">[OK]</span></span><br><span class="line">raphiz/raphael.li                                                               0                    <span class="comment">[OK]</span></span><br><span class="line">rapi/rapidapp                   Standard RapidApp base image, from officia...   0                    <span class="comment">[OK]</span></span><br><span class="line">team19awshack/rapidprowebhook   RapidProWebhook                                 0                    <span class="comment">[OK]</span></span><br><span class="line">tp81/rapidstorm                 RapidSTORM docker image                         0                    <span class="comment">[OK]</span></span><br><span class="line">qdsang/rap                      docker rap alpine                               0                    <span class="comment">[OK]</span></span><br><span class="line">raphsfeir/raphaelsfeir          Portfolio and blog for me                       0                    <span class="comment">[OK]</span></span><br><span class="line">rapidpro/rapidpro-base          Base Python 2.7 + geolibs Docker image for...   0                    <span class="comment">[OK]</span></span><br><span class="line">tonimichel/rapidflask           A boilerplate flask application for easy s...   0                    <span class="comment">[OK]</span></span><br><span class="line">raphaelgroup/magi                                                               0                    <span class="comment">[OK]</span></span><br><span class="line">andreweskeclarke/rapidftr                                                       0                    <span class="comment">[OK]</span></span><br><span class="line">raphiz/mathe.raphael.li                                                         0                    <span class="comment">[OK]</span></span><br><span class="line">divio/rapidpro                  RapidPro in docker.                             0                    <span class="comment">[OK]</span></span><br></pre></td></tr></table></figure>
<p>GUI</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-2-1/45031596-file_1485920300648_448b.png" alt></p>
<p>我有时gui客户端网络错误，修改偏好设置-网络-dns-8.8.8.8后正常</p>
<h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><p> docker pull 【镜像名称】</p>
<h2 id="列出镜像"><a href="#列出镜像" class="headerlink" title="列出镜像"></a>列出镜像</h2><p>docker images</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ docker images</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mzeht/webv2         latest              <span class="number">8e684</span>c1fb7d3        <span class="number">30</span> hours ago        <span class="number">182</span> MB</span><br><span class="line">nginx               v2                  <span class="number">8e684</span>c1fb7d3        <span class="number">30</span> hours ago        <span class="number">182</span> MB</span><br><span class="line">nginx               latest              cc1b61406712        <span class="number">7</span> days ago          <span class="number">182</span> MB</span><br><span class="line">ubuntu              <span class="number">14.04</span>               b969ab9f929b        <span class="number">11</span> days ago         <span class="number">188</span> MB</span><br><span class="line">hello-world         latest              <span class="number">48</span>b5124b2768        <span class="number">2</span> weeks ago         <span class="number">1.84</span> kB</span><br><span class="line">centos              latest              <span class="number">67591570</span>dd29        <span class="number">6</span> weeks ago         <span class="number">192</span> MB</span><br><span class="line">lihuansse/rap       latest              <span class="number">3</span>ded84cdf4f5        <span class="number">3</span> months ago        <span class="number">1.14</span> GB</span><br></pre></td></tr></table></figure>
<h2 id="删除本地镜像"><a href="#删除本地镜像" class="headerlink" title="删除本地镜像"></a>删除本地镜像</h2><p>如果要删除本地的镜像，可以使用 <code>docker rmi</code> 命令，其格式为：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi [选项] &lt;镜像1&gt; [&lt;镜像2&gt; ...]</span><br></pre></td></tr></table></figure>
<p><em>注意 <code>docker rm</code> 命令是删除容器，不要混淆。</em></p>
<h3 id="用-ID、镜像名、摘要删除镜像"><a href="#用-ID、镜像名、摘要删除镜像" class="headerlink" title="用 ID、镜像名、摘要删除镜像"></a>用 ID、镜像名、摘要删除镜像</h3><p>其中，<code>&lt;镜像&gt;</code> 可以是 <code>镜像短 ID</code>、<code>镜像长 ID</code>、<code>镜像名</code> 或者 <code>镜像摘要</code>。</p>
<p>比如我们有这么一些镜像：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker images</span><br><span class="line">REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">centos                      latest              0584b3d2cf6d        3 weeks ago         196.5 MB</span><br><span class="line">redis                       alpine              501ad78535f0        3 weeks ago         21.03 MB</span><br><span class="line">docker                      latest              cf693ec9b5c7        3 weeks ago         105.1 MB</span><br><span class="line">nginx                       latest              e43d811ce2f4        5 weeks ago         181.5 MB</span><br></pre></td></tr></table></figure>
<p>我们可以用镜像的完整 ID，也称为 <code>长 ID</code>，来删除镜像。使用脚本的时候可能会用长 ID，但是人工输入就太累了，所以更多的时候是用 <code>短 ID</code> 来删除镜像。<code>docker images</code> 默认列出的就已经是短 ID 了，一般取前3个字符以上，只要足够区分于别的镜像就可以了。</p>
<p>比如这里，如果我们要删除 <code>redis:alpine</code> 镜像，可以执行：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker rmi 501</span><br><span class="line">Untagged: redis:alpine</span><br><span class="line">Untagged: redis@sha256:f1ed3708f538b537eb9c2a7dd50dc90a706f7debd7e1196c9264edeea521a86d</span><br><span class="line">Deleted: sha256:501ad78535f015d88872e13fa87a828425117e3d28075d0c117932b05bf189b7</span><br><span class="line">Deleted: sha256:96167737e29ca8e9d74982ef2a0dda76ed7b430da55e321c071f0dbff8c2899b</span><br><span class="line">Deleted: sha256:32770d1dcf835f192cafd6b9263b7b597a1778a403a109e2cc2ee866f74adf23</span><br><span class="line">Deleted: sha256:127227698ad74a5846ff5153475e03439d96d4b1c7f2a449c7a826ef74a2d2fa</span><br><span class="line">Deleted: sha256:1333ecc582459bac54e1437335c0816bc17634e131ea0cc48daa27d32c75eab3</span><br><span class="line">Deleted: sha256:4fc455b921edf9c4aea207c51ab39b10b06540c8b4825ba57b3feed1668fa7c7</span><br></pre></td></tr></table></figure>
<p>我们也可以用<code>镜像名</code>，也就是 <code>&lt;仓库名&gt;:&lt;标签&gt;</code>，来删除镜像。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker rmi centos</span><br><span class="line">Untagged: centos:latest</span><br><span class="line">Untagged: centos@sha256:b2f9d1c0ff5f87a4743104d099a3d561002ac500db1b9bfa02a783a46e0d366c</span><br><span class="line">Deleted: sha256:0584b3d2cf6d235ee310cf14b54667d889887b838d3f3d3033acd70fc3c48b8a</span><br><span class="line">Deleted: sha256:97ca462ad9eeae25941546209454496e1d66749d53dfa2ee32bf1faabd239d38</span><br></pre></td></tr></table></figure>
<p>当然，更精确的是使用 <code>镜像摘要</code> 删除镜像。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker images --digests</span><br><span class="line">REPOSITORY                  TAG                 DIGEST                                                                    IMAGE ID            CREATED             SIZE</span><br><span class="line">node                        slim                sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228   6e0c4c8e3913        3 weeks ago         214 MB</span><br><span class="line"></span><br><span class="line">$ docker rmi node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228</span><br><span class="line">Untagged: node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228</span><br></pre></td></tr></table></figure>
<h3 id="Untagged-和-Deleted"><a href="#Untagged-和-Deleted" class="headerlink" title="Untagged 和 Deleted"></a>Untagged 和 Deleted</h3><p>如果观察上面这几个命令的运行输出信息的话，你会注意到删除行为分为两类，一类是 <code>Untagged</code>，另一类是 <code>Deleted</code>。我们之前介绍过，镜像的唯一标识是其 ID 和摘要，而一个镜像可以有多个标签。</p>
<p>因此当我们使用上面命令删除镜像的时候，实际上是在要求删除某个标签的镜像。所以首先需要做的是将满足我们要求的所有镜像标签都取消，这就是我们看到的 <code>Untagged</code> 的信息。因为一个镜像可以对应多个标签，因此当我们删除了所指定的标签后，可能还有别的标签指向了这个镜像，如果是这种情况，那么 <code>Delete</code> 行为就不会发生。所以并非所有的 <code>docker rmi</code> 都会产生删除镜像的行为，有可能仅仅是取消了某个标签而已。</p>
<p>当该镜像所有的标签都被取消了，该镜像很可能会失去了存在的意义，因此会触发删除行为。镜像是多层存储结构，因此在删除的时候也是从上层向基础层方向依次进行判断删除。镜像的多层结构让镜像复用变动非常容易，因此很有可能某个其它镜像正依赖于当前镜像的某一层。这种情况，依旧不会触发删除该层的行为。直到没有任何层依赖当前层时，才会真实的删除当前层。这就是为什么，有时候会奇怪，为什么明明没有别的标签指向这个镜像，但是它还是存在的原因，也是为什么有时候会发现所删除的层数和自己 <code>docker pull</code> 看到的层数不一样的源。</p>
<p>除了镜像依赖以外，还需要注意的是容器对镜像的依赖。如果有用这个镜像启动的容器存在（即使容器没有运行），那么同样不可以删除这个镜像。之前讲过，容器是以镜像为基础，再加一层容器存储层，组成这样的多层存储结构去运行的。因此该镜像如果被这个容器所依赖的，那么删除必然会导致故障。如果这些容器是不需要的，应该先将它们删除，然后再来删除镜像。</p>
<h3 id="用-docker-images-命令来配合"><a href="#用-docker-images-命令来配合" class="headerlink" title="用 docker images 命令来配合"></a>用 docker images 命令来配合</h3><p>像其它可以承接多个实体的命令一样，可以使用 <code>docker images -q</code> 来配合使用 <code>docker rmi</code>，这样可以成批的删除希望删除的镜像。比如之前我们介绍过的，删除虚悬镜像的指令是：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker rmi $(docker images -q -f dangling=<span class="literal">true</span>)</span><br></pre></td></tr></table></figure>
<p>我们在“镜像列表”章节介绍过很多过滤镜像列表的方式都可以拿过来使用。</p>
<p>比如，我们需要删除所有仓库名为 <code>redis</code> 的镜像：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker rmi $(docker images -q redis)</span><br></pre></td></tr></table></figure>
<p>或者删除所有在 <code>mongo:3.2</code> 之前的镜像：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker rmi $(docker images -q -f before=mongo:3.2)</span><br></pre></td></tr></table></figure>
<p>充分利用你的想象力和 Linux 命令行的强大，可以完成很多非常赞的功能。</p>
<h2 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h2><p>##启动容器<br>启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（stopped）的容器重新启动。</p>
<p>因为 Docker 的容器实在太轻量级了，很多时候用户都是随时删除和新创建容器。</p>
<p>###新建并启动<br>所需要的命令主要为 <code>docker run</code>。</p>
<p>例如，下面的命令输出一个 “Hello World”，之后终止容器。<br><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker <span class="keyword">run</span><span class="bash"> ubuntu:14.04 /bin/<span class="built_in">echo</span> <span class="string">'Hello world'</span></span></span><br><span class="line">Hello world</span><br></pre></td></tr></table></figure></p>
<p>这跟在本地直接执行 <code>/bin/echo &#39;hello world&#39;</code> 几乎感觉不出任何区别。</p>
<p>下面的命令则启动一个 bash 终端，允许用户进行交互。<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo docker run -t -i <span class="symbol">ubuntu:</span><span class="number">14.04</span> /bin/bash</span><br><span class="line">root<span class="variable">@af8bae53bdd3</span><span class="symbol">:/</span><span class="comment">#</span></span><br></pre></td></tr></table></figure></p>
<p>其中，<code>-t</code> 选项让Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上， <code>-i</code> 则让容器的标准输入保持打开。</p>
<p>在交互模式下，用户可以通过所创建的终端来输入命令，例如</p>
<figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@<span class="symbol">af8bae53bdd3:</span>/<span class="comment"># pwd</span></span><br><span class="line">/</span><br><span class="line">root@<span class="symbol">af8bae53bdd3:</span>/<span class="comment"># ls</span></span><br><span class="line">bin boot dev etc home <span class="class"><span class="keyword">lib</span> <span class="title">lib64</span> <span class="title">media</span> <span class="title">mnt</span> <span class="title">opt</span> <span class="title">proc</span> <span class="title">root</span> <span class="title">run</span> <span class="title">sbin</span> <span class="title">srv</span> <span class="title">sys</span> <span class="title">tmp</span> <span class="title">usr</span> <span class="title">var</span></span></span><br></pre></td></tr></table></figure>
<p>当利用 <code>docker run</code> 来创建容器时，Docker 在后台运行的标准操作包括：</p>
<ul>
<li>检查本地是否存在指定的镜像，不存在就从公有仓库下载</li>
<li>利用镜像创建并启动一个容器</li>
<li>分配一个文件系统，并在只读的镜像层外面挂载一层可读写层</li>
<li>从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去</li>
<li>从地址池配置一个 ip 地址给容器</li>
<li>执行用户指定的应用程序</li>
<li>执行完毕后容器被终止</li>
</ul>
<p>###启动已终止容器<br>可以利用 <code>docker start</code> 命令，直接将一个已经终止的容器启动运行。</p>
<p>容器的核心为所执行的应用程序，所需要的资源都是应用程序运行所必需的。除此之外，并没有其它的资源。可以在伪终端中利用 <code>ps</code> 或 <code>top</code> 来查看进程信息。</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">root</span>@<span class="selector-tag">ba267838cc1b</span>:/# <span class="selector-tag">ps</span></span><br><span class="line">  <span class="selector-tag">PID</span> <span class="selector-tag">TTY</span>          <span class="selector-tag">TIME</span> <span class="selector-tag">CMD</span></span><br><span class="line">    <span class="selector-tag">1</span> ?        <span class="selector-tag">00</span><span class="selector-pseudo">:00</span><span class="selector-pseudo">:00</span> <span class="selector-tag">bash</span></span><br><span class="line">   <span class="selector-tag">11</span> ?        <span class="selector-tag">00</span><span class="selector-pseudo">:00</span><span class="selector-pseudo">:00</span> <span class="selector-tag">ps</span></span><br></pre></td></tr></table></figure>
<p>可见，容器中仅运行了指定的 bash 应用。这种特点使得 Docker 对资源的利用率极高，是货真价实的轻量级虚拟化。</p>
<p>##后台(background)运行</p>
<p>更多的时候，需要让 Docker在后台运行而不是直接把执行命令的结果输出在当前宿主机下。此时，可以通过添加 <code>-d</code> 参数来实现。</p>
<p>下面举两个例子来说明一下。</p>
<p>如果不使用 <code>-d</code> 参数运行容器。</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker <span class="keyword">run</span><span class="bash"> ubuntu:14.04 /bin/sh -c <span class="string">"while true; do echo hello world; sleep 1; done"</span></span></span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure>
<p>容器会把输出的结果(STDOUT)打印到宿主机上面</p>
<p>如果使用了 <code>-d</code> 参数运行容器。</p>
<figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker <span class="keyword">run</span><span class="bash"> -d ubuntu:14.04 /bin/sh -c <span class="string">"while true; do echo hello world; sleep 1; done"</span></span></span><br><span class="line"><span class="number">77</span>b2dc01fe0f3f1265df143181e7b9af5e05279a884f4776ee75350ea9d8017a</span><br></pre></td></tr></table></figure>
<p>此时容器会在后台运行并不会把输出的结果(STDOUT)打印到宿主机上面(输出结果可以用docker logs 查看)。</p>
<p><strong>注：</strong> 容器是否会长久运行，是和docker run指定的命令有关，和 <code>-d</code> 参数无关。</p>
<p>使用 <code>-d</code> 参数启动后会返回一个唯一的 id，也可以通过 <code>docker ps</code> 命令来查看容器信息。</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo docker ps</span><br><span class="line">CONTAINER ID  IMAGE         <span class="keyword">COMMAND</span>               CREATED        STATUS       PORTS NAMES</span><br><span class="line"><span class="number">77</span>b2dc01fe0f  ubuntu:<span class="number">14.04</span>  /bin/sh -c '<span class="keyword">while</span> tr  <span class="number">2</span> minutes ago  Up <span class="number">1</span> minute        agitated_wright</span><br></pre></td></tr></table></figure>
<p>要获取容器的输出信息，可以通过 <code>docker logs</code> 命令。</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$ </span>sudo docker logs [container ID <span class="keyword">or</span> NAMES]</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">. . .</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 运维 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> docker </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里云Centos配置nginx]]></title>
      <url>http://mzeht.com/2017/01/24/%E9%98%BF%E9%87%8C%E4%BA%91centos%E9%85%8D%E7%BD%AEnginx/</url>
      <content type="html"><![CDATA[<p>最近写了一个自已用的微服务，放在阿里云主机上，但是带ip的接口看着还是很别扭的，于是安装nginx设置一下域名<br><a id="more"></a></p>
<p>采用的是下载源码包，编译安装的方式</p>
<h1 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h1><p>make</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> gcc automake autoconf libtool make</span><br></pre></td></tr></table></figure>
<p>g++</p>
<figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">yum</span> <span class="comment">install</span> <span class="comment">gcc</span> <span class="comment">gcc</span><span class="literal">-</span><span class="comment">c</span><span class="literal">+</span><span class="literal">+</span></span><br></pre></td></tr></table></figure>
<p>PCRE</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> pcre pcre-devel</span><br></pre></td></tr></table></figure>
<p>zlib</p>
<figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install <span class="literal">zlib</span> <span class="literal">zlib</span>-devel</span><br></pre></td></tr></table></figure>
<p>OpenSSL</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum <span class="keyword">install</span> openssl openssl-devel</span><br></pre></td></tr></table></figure>
<h1 id="下载源码包"><a href="#下载源码包" class="headerlink" title="下载源码包"></a>下载源码包</h1><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https:<span class="comment">//nginx.org/download/nginx-1.10.1.tar.gz</span></span><br><span class="line">tar zxf nginx-<span class="number">1.10</span>.<span class="number">1</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">cd nginx-<span class="number">1.10</span>.<span class="number">1</span>/</span><br></pre></td></tr></table></figure>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>./configure<br>make<br>make install</p>
<h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>安装好后出现以下目录<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/usr/<span class="keyword">local</span>/nginx</span><br><span class="line"><span class="keyword">ls</span></span><br><span class="line">client_body_temp  fastcgi_temp  logs        sbin       uwsgi_temp</span><br><span class="line"><span class="keyword">conf</span>              html          proxy_temp  scgi_temp</span><br></pre></td></tr></table></figure></p>
<p>conf文件夹下nginx.conf文件就是我们要动刀的配置文件</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#user  nobody;</span></span><br><span class="line"><span class="attribute">worker_processes</span>  <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#error_log  logs/error.log;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  notice;</span></span><br><span class="line"><span class="comment">#error_log  logs/error.log  info;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#pid        logs/nginx.pid;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">events</span> &#123;</span><br><span class="line"><span class="comment">##并发连接数量</span></span><br><span class="line">    <span class="attribute">worker_connections</span>  <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">http</span> &#123;</span><br><span class="line">    <span class="attribute">include</span>       mime.types;</span><br><span class="line">    <span class="attribute">default_type</span>  application/octet-stream;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '</span></span><br><span class="line">    <span class="comment">#                  '$status $body_bytes_sent "$http_referer" '</span></span><br><span class="line">    <span class="comment">#                  '"$http_user_agent" "$http_x_forwarded_for"';</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#access_log  logs/access.log  main;</span></span><br><span class="line"></span><br><span class="line">    <span class="attribute">sendfile</span>        <span class="literal">on</span>;</span><br><span class="line">    <span class="comment">#tcp_nopush     on;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">#keepalive_timeout  0;</span></span><br><span class="line">    <span class="attribute">keepalive_timeout</span>  <span class="number">65</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">#gzip  on;</span></span><br><span class="line"></span><br><span class="line">    <span class="section">server</span> &#123;</span><br><span class="line">        <span class="attribute">listen</span>       <span class="number">80</span>;</span><br><span class="line">        <span class="attribute">server_name</span>  *****<span class="regexp">*.com</span>;<span class="comment">##域名</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#charset koi8-r;</span></span><br><span class="line">        </span><br><span class="line">         <span class="comment">#access_log  logs/host.access.log  main;</span></span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://127.0.0.1:****;<span class="comment">##服务器端口号</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="attribute">location</span> / &#123;</span><br><span class="line">            <span class="attribute">proxy_pass</span> http://127.0.0.1:10101;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">#error_page  404              /404.html;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># redirect server error pages to the static page /50x.html</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="attribute">error_page</span>   <span class="number">500</span> <span class="number">502</span> <span class="number">503</span> <span class="number">504</span>  /50x.html;</span><br><span class="line">        <span class="attribute">location</span> = /50x.html &#123;</span><br><span class="line">            <span class="attribute">root</span>   html;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"># proxy the PHP scripts to Apache listening on 127.0.0.1:80</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    proxy_pass   http://127.0.0.1;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ \.php$ &#123;</span></span><br><span class="line">        <span class="comment">#    root           html;</span></span><br><span class="line">        <span class="comment">#    fastcgi_pass   127.0.0.1:9000;</span></span><br><span class="line">        <span class="comment">#    fastcgi_index  index.php;</span></span><br><span class="line">        <span class="comment">#    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span></span><br><span class="line">        <span class="comment">#    include        fastcgi_params;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># deny access to .htaccess files, if Apache's document root</span></span><br><span class="line">        <span class="comment"># concurs with nginx's one</span></span><br><span class="line">        <span class="comment">#</span></span><br><span class="line">        <span class="comment">#location ~ /\.ht &#123;</span></span><br><span class="line">        <span class="comment">#    deny  all;</span></span><br><span class="line">        <span class="comment">#&#125;</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>好了配置完成，效果是访问域名，请求被转发到服务器本地的对应端口号</p>
<p>然而就在我成功一次之后，阿里云就报警了，访问网页提示我没有备案，会杭州了再捣鼓备案</p>
]]></content>
      
        <categories>
            
            <category> 运维 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Centos </tag>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring cloud服务注册与发现]]></title>
      <url>http://mzeht.com/2017/01/22/2017-02-08/</url>
      <content type="html"><![CDATA[<h1 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mzeht-eureka<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>mzeht-eureka<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.5.1.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-starter-eureka-server<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.cloud<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-cloud-dependencies<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">version</span>&gt;</span>Brixton.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">type</span>&gt;</span>pom<span class="tag">&lt;/<span class="name">type</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">scope</span>&gt;</span>import<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Spring boot </tag>
            
            <tag> Spring cloud </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring boot整合retrofit简化三方接口调用]]></title>
      <url>http://mzeht.com/2017/01/22/%E5%9C%A8springboot%E4%B8%AD%E4%BD%BF%E7%94%A8retrofit%E5%8A%A0%E5%BF%AB%E4%B8%89%E6%96%B9%E6%8E%A5%E5%8F%A3%E8%B0%83%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>公司改用srpingboot微服务架构后，服务之间的调用十分频繁，而同事的写法都是基于httpclient的简单工具类，写起来比较混乱，手动调用json转换为实体类，后期维护不方便，而且接口地址，参数（手动拼接）不好管理，于是想到了我在android中常常使用的retrofit+okhttp，于是动手移植到springboot项目上</p>
<a id="more"></a>
<h1 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.squareup.retrofit2<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>retrofit<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.squareup.retrofit2<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>converter-gson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.squareup.okhttp3<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>logging-interceptor<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>从上到下为retrofit基本框架，gson解析器，日志拦截器</p>
<h2 id="初步实现方法（不结合spring特性）"><a href="#初步实现方法（不结合spring特性）" class="headerlink" title="初步实现方法（不结合spring特性）"></a>初步实现方法（不结合spring特性）</h2><p>提炼返回格式，使用泛型</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BasicResult</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">517161603122400300L</span>;</span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">boolean</span> success = <span class="keyword">false</span>;</span><br><span class="line">	<span class="keyword">private</span> String message;</span><br><span class="line">	<span class="keyword">private</span> T data;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BasicResult</span><span class="params">(<span class="keyword">boolean</span> success , String message)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.success = success ;</span><br><span class="line">		<span class="keyword">this</span>.message = message ;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">BasicResult</span><span class="params">(<span class="keyword">boolean</span> success , String message, T data)</span></span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.success = success ;</span><br><span class="line">		<span class="keyword">this</span>.message = message ;</span><br><span class="line">		<span class="keyword">this</span>.data = data ;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the success</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">boolean</span> <span class="title">isSuccess</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> success;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> success</span></span><br><span class="line"><span class="comment">	 *            the success to set</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setSuccess</span><span class="params">(<span class="keyword">boolean</span> success)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.success = success;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span> the message</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">final</span> String <span class="title">getMessage</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> message;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> message</span></span><br><span class="line"><span class="comment">	 *            the message to set</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">final</span> <span class="keyword">void</span> <span class="title">setMessage</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.message = message;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> T <span class="title">getData</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> data;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setData</span><span class="params">(T data)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.data = data;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>定义请求体</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Useregister</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> companyName;	<span class="comment">//公司名称	string</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> emailAddress;    <span class="comment">//邮箱地址	string</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> password; <span class="comment">//登录密码;	string</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> phoneNumber;	<span class="comment">//手机号码	string</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">String</span> verificationCode;	<span class="comment">//验证码</span></span><br><span class="line"></span><br><span class="line">    ....</span><br></pre></td></tr></table></figure>
<p>定义api接口</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">public</span> <span class="selector-tag">interface</span> <span class="selector-tag">UserApi</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">@POST</span>(<span class="string">"/common/user/v1/register"</span>)</span><br><span class="line">    Call&lt;BasicResult&gt; listRepos(<span class="variable">@Body</span> Useregister useregister);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>构造api接口</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiRetrofit</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UserApi userApi;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> final <span class="keyword">String</span> USER_BASE_URL = <span class="string">"http://10.10.168.79:10100/"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> UserApi getUserApi() &#123;</span><br><span class="line">        <span class="keyword">return</span> userApi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ApiRetrofit() &#123;</span><br><span class="line">        HttpLoggingInterceptor logInterceptor = <span class="keyword">new</span> <span class="type">HttpLoggingInterceptor</span>(<span class="keyword">new</span> <span class="type">HttpLoggingInterceptor</span>.Logger() &#123;</span><br><span class="line">            <span class="keyword">public</span> void log(<span class="keyword">String</span> s) &#123;</span><br><span class="line">                <span class="comment">//打印日志</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        logInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</span><br><span class="line">        OkHttpClient client = <span class="keyword">new</span> <span class="type">OkHttpClient</span>.Builder()</span><br><span class="line">                .addInterceptor(logInterceptor)</span><br><span class="line">                .build();</span><br><span class="line">        Retrofit retrofit_user = <span class="keyword">new</span> <span class="type">Retrofit</span>.Builder()</span><br><span class="line">                .baseUrl(USER_BASE_URL)</span><br><span class="line">                .client(client)</span><br><span class="line">                .addConverterFactory(GsonConverterFactory.create())</span><br><span class="line">                .build();</span><br><span class="line">        userApi = retrofit_user.create(UserApi.class);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>工厂类提供单列api</p>
<figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public class ApiFactory &#123;</span><br><span class="line">   <span class="keyword"> protected</span><span class="keyword"> static</span><span class="keyword"> final</span> Object<span class="built_in"> monitor </span>=<span class="built_in"> new </span>Object();</span><br><span class="line">   <span class="keyword"> static</span> UserApi userApi = null;</span><br><span class="line"></span><br><span class="line">   <span class="keyword"> public</span><span class="keyword"> static</span> UserApi getUserApi() &#123;</span><br><span class="line">        synchronized (monitor) &#123;</span><br><span class="line">           <span class="built_in"> if </span>(userApi == null) &#123;</span><br><span class="line">                userApi =<span class="built_in"> new </span>ApiRetrofit().getUserApi();</span><br><span class="line">            &#125;</span><br><span class="line">           <span class="built_in"> return </span>userApi;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>较为通用的java实现，没有结合spring注入的特性，</p>
<p>实际调用</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Useregister useregister=<span class="keyword">new</span> Useregister();</span><br><span class="line"><span class="keyword">Call</span>&lt;BaseResult&gt; res=ApiFactory.getUserApi.listRepos(useregister);</span><br><span class="line"><span class="built_in">Response</span>&lt;BaseResult&gt; <span class="built_in">response</span> = <span class="keyword">call</span>.<span class="keyword">execute</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">response</span>.isSuccessful()) &#123;</span><br><span class="line">            throw <span class="keyword">new</span> Exception(<span class="built_in">response</span>.message());</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            return <span class="built_in">response</span>.body();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>BaseResult里面传入实体类也是OK的，可以直接拿到解析好的实体对象，如</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Call</span>&lt;ApiResult&lt;UserBean&gt;&gt; <span class="keyword">call</span> = apiRetrofit.getCommonApi().info(userParam);</span><br><span class="line">        <span class="built_in">Response</span>&lt;ApiResult&lt;UserBean&gt;&gt; <span class="built_in">response</span> = <span class="keyword">call</span>.<span class="keyword">execute</span>();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">response</span>.isSuccessful()) &#123;</span><br><span class="line">            throw <span class="keyword">new</span> Exception(<span class="built_in">response</span>.message());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            return <span class="built_in">response</span>.body();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h2 id="结合springboot，去除工厂类，改为注入"><a href="#结合springboot，去除工厂类，改为注入" class="headerlink" title="结合springboot，去除工厂类，改为注入"></a>结合springboot，去除工厂类，改为注入</h2><p>以上实现在非spring框架下也可用，但是既然用了spring，就要好好利用，spring框架下还有工厂类代码，有点说不过去</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiRetrofit</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger log = Logger.getLogger(ApiRetrofit.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CommonApi commonApi;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CommonApi <span class="title">getCommonApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> commonApi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> CorpApi corpApi;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> CorpApi <span class="title">getCorpApi</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> corpApi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;api.common&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span>  String COMMON_BASE_URL ;<span class="comment">//= "http://10.10.168.79:10100/";</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;api.corp&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String CROP_BASE_URL;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">        HttpLoggingInterceptor logInterceptor = <span class="keyword">new</span> HttpLoggingInterceptor(<span class="keyword">new</span> HttpLogger());</span><br><span class="line">        logInterceptor.setLevel(HttpLoggingInterceptor.Level.BODY);</span><br><span class="line"></span><br><span class="line">        OkHttpClient client = <span class="keyword">new</span> OkHttpClient.Builder()</span><br><span class="line">                .addNetworkInterceptor(logInterceptor)</span><br><span class="line">                .build();</span><br><span class="line"></span><br><span class="line">        Retrofit retrofit_common = <span class="keyword">new</span> Retrofit.Builder()</span><br><span class="line">                .baseUrl(COMMON_BASE_URL)</span><br><span class="line">                .client(client)</span><br><span class="line">                .addConverterFactory(GsonConverterFactory.create())</span><br><span class="line">                .build();</span><br><span class="line">        commonApi = retrofit_common.create(CommonApi.class);</span><br><span class="line"></span><br><span class="line">        Retrofit retrofit_corp = <span class="keyword">new</span> Retrofit.Builder()</span><br><span class="line">                .baseUrl(CROP_BASE_URL+<span class="string">"/"</span>)</span><br><span class="line">                .client(client)</span><br><span class="line">                .addConverterFactory(GsonConverterFactory.create())</span><br><span class="line">                .build();</span><br><span class="line">        corpApi = retrofit_corp.create(CorpApi.class);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">HttpLogger</span> <span class="keyword">implements</span> <span class="title">HttpLoggingInterceptor</span>.<span class="title">Logger</span> </span>&#123;</span><br><span class="line"><span class="comment">//        private StringBuilder mMessage = new StringBuilder();</span></span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">log</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">            log.info(message);</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//            if (message.startsWith("--&gt; POST")) &#123;</span></span><br><span class="line"><span class="comment">//                mMessage.setLength(0);</span></span><br><span class="line"><span class="comment">//                mMessage.append("\n");</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            // 以&#123;&#125;或者[]形式的说明是响应结果的json数据，需要进行格式化</span></span><br><span class="line"><span class="comment">//            if ((message.startsWith("&#123;") &amp;&amp; message.endsWith("&#125;"))</span></span><br><span class="line"><span class="comment">//                    || (message.startsWith("[") &amp;&amp; message.endsWith("]"))) &#123;</span></span><br><span class="line"><span class="comment">//                message = JSONUtil.formatJson(message);</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"><span class="comment">//            mMessage.append(message.concat("\n"));</span></span><br><span class="line"><span class="comment">//            // 请求或者响应结束，打印整条日志</span></span><br><span class="line"><span class="comment">//            if (message.startsWith("&lt;-- END HTTP")) &#123;</span></span><br><span class="line"><span class="comment">//                log.info(mMessage.toString());</span></span><br><span class="line"><span class="comment">//            &#125;</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>@Value注入配置的baseurl的值<br>@Component 申明注入<br>@PostConstruct 在构造方法前初始化相关变量</p>
<p>实际调用</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">/**</span><br><span class="line">     * 获取用户信息</span><br><span class="line">     * @param phone</span><br><span class="line">     * @return</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    <span class="keyword">public</span> ApiResult&lt;UserBean&gt; info(<span class="built_in">String</span> phone) throws Exception &#123;</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.<span class="built_in">isEmpty</span>(phone))</span><br><span class="line">            throw <span class="keyword">new</span> Exception(<span class="string">"手机号不能为空"</span>);</span><br><span class="line">        UserParam userParam = <span class="keyword">new</span> UserParam();</span><br><span class="line">        userParam.setPhoneNumber(phone);</span><br><span class="line">        <span class="keyword">Call</span>&lt;ApiResult&lt;UserBean&gt;&gt; <span class="keyword">call</span> = apiRetrofit.getCommonApi().info(userParam);</span><br><span class="line">        <span class="built_in">Response</span>&lt;ApiResult&lt;UserBean&gt;&gt; <span class="built_in">response</span> = <span class="keyword">call</span>.<span class="keyword">execute</span>();</span><br><span class="line">        <span class="keyword">if</span> (!<span class="built_in">response</span>.isSuccessful()) &#123;</span><br><span class="line">            throw <span class="keyword">new</span> Exception(<span class="built_in">response</span>.message());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            return <span class="built_in">response</span>.body();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h2 id="分页请求泛型"><a href="#分页请求泛型" class="headerlink" title="分页请求泛型"></a>分页请求泛型</h2><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@JsonInclude</span>(JsonInclude.Include.NON_NULL)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ApiPagesResult</span>&lt;<span class="title">T</span>&gt; <span class="keyword">implements</span> <span class="title">Serializable</span>&#123;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">-8421200997970330114</span>L;</span><br><span class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"success"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span> success = <span class="literal">false</span>;</span><br><span class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"message"</span>)</span><br><span class="line">    <span class="keyword">private</span> String message;</span><br><span class="line">    <span class="meta">@JsonProperty</span>(<span class="string">"data"</span>)</span><br><span class="line">    <span class="keyword">private</span> Data&lt;T&gt; data;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">@JsonInclude(JsonInclude.Include.NON_NULL)</span><br><span class="line">public class Data&lt;R&gt;  implements Serializable&#123;</span><br><span class="line"></span><br><span class="line">    @JsonProperty("total")</span><br><span class="line">    private Integer total;</span><br><span class="line"></span><br><span class="line">    @JsonProperty("currentPage")</span><br><span class="line">    private Integer currentPage;</span><br><span class="line"></span><br><span class="line">    @JsonProperty("pageSize")</span><br><span class="line">    private Integer pageSize;</span><br><span class="line"></span><br><span class="line">    @JsonProperty("pages")</span><br><span class="line">    private Integer pages;</span><br><span class="line"></span><br><span class="line">    @JsonProperty("dataList")</span><br><span class="line">    private List&lt;R&gt; dataList;</span><br></pre></td></tr></table></figure>
<p>1</p>
]]></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Spring boot </tag>
            
            <tag> retrofit </tag>
            
            <tag> okHttp </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring boot整合redis]]></title>
      <url>http://mzeht.com/2017/01/03/spring%20boot%20%E5%88%9D%E6%AD%A5%E6%95%B4%E5%90%88redis/</url>
      <content type="html"><![CDATA[<h1 id="基本准备"><a href="#基本准备" class="headerlink" title="基本准备"></a>基本准备</h1><ol>
<li>本地通过brew安装redis</li>
<li>安装一个redis的可视化管理工具<br>我安装的是<a href="http://mac.softpedia.com/get/Utilities/Redis-Desktop-Manager.shtml" target="_blank" rel="noopener">Redis Desktop Manager for Mac</a></li>
</ol>
<a id="more"></a>
<p>#工程配置</p>
<h2 id="新建配置文件"><a href="#新建配置文件" class="headerlink" title="新建配置文件"></a>新建配置文件</h2><p>redis.properties</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># redis</span></span><br><span class="line"><span class="attr">redis.host</span>=localhost</span><br><span class="line"><span class="attr">redis.port</span>=<span class="number">6379</span></span><br><span class="line"><span class="attr">redis.password</span>=</span><br><span class="line"><span class="attr">redis.database</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure>
<h2 id="注入数据源"><a href="#注入数据源" class="headerlink" title="注入数据源"></a>注入数据源</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@PropertySource</span>(<span class="string">"classpath:config/redis.properties"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> RedisConfig &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Environment env;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisConnectionFactory redisConnectionFactory() &#123;</span><br><span class="line">        JedisPoolConfig jedisPoolConfig = <span class="keyword">new</span> JedisPoolConfig();</span><br><span class="line">        JedisConnectionFactory jedisConnectionFactory = <span class="keyword">new</span> JedisConnectionFactory();</span><br><span class="line">        jedisConnectionFactory.setHostName(env.getProperty(<span class="string">"redis.host"</span>).trim());</span><br><span class="line">        jedisConnectionFactory.setPort(Integer.parseInt(env.getProperty(<span class="string">"redis.port"</span>).trim()));</span><br><span class="line">        jedisConnectionFactory.setPassword(env.getProperty(<span class="string">"redis.password"</span>).trim());</span><br><span class="line">        jedisConnectionFactory.setDatabase(Integer.parseInt(env.getProperty(<span class="string">"redis.database"</span>).trim()));</span><br><span class="line">        jedisConnectionFactory.setUsePool(<span class="literal">true</span>);</span><br><span class="line">        jedisConnectionFactory.setPoolConfig(jedisPoolConfig);</span><br><span class="line">        <span class="keyword">return</span> jedisConnectionFactory;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; redisTemplate() &#123;</span><br><span class="line">        RedisTemplate&lt;<span class="built_in">String</span>, <span class="built_in">String</span>&gt; redisTemplate = <span class="keyword">new</span> StringRedisTemplate();</span><br><span class="line">        redisTemplate.setConnectionFactory(redisConnectionFactory());</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="工具类"><a href="#工具类" class="headerlink" title="工具类"></a>工具类</h2><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">@Repository</span><br><span class="line"><span class="keyword">public</span> class RedisBaseDao &#123;</span><br><span class="line"></span><br><span class="line">    @Resource(name=<span class="string">"redisTemplate"</span>)</span><br><span class="line">    <span class="keyword">protected</span> ValueOperations&lt;<span class="keyword">String</span>, <span class="keyword">String</span>&gt; valueOperations;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> addValue(<span class="keyword">String</span> <span class="built_in">key</span>, <span class="keyword">String</span> value)&#123;</span><br><span class="line">        valueOperations.<span class="built_in">set</span>(<span class="built_in">key</span>, value);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">String</span> getValue(<span class="keyword">String</span> <span class="built_in">key</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> valueOperations.<span class="built_in">get</span>(<span class="built_in">key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ValueRedisDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> RedisBaseDao redisBaseDao;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String getKey()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"param"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> void save(String param)&#123;</span><br><span class="line">        <span class="keyword">this</span>.redisBaseDao.addValue(<span class="keyword">this</span>.getKey(), param);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String getParam()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.redisBaseDao.getValue(<span class="keyword">this</span>.getKey());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="测试类进行测试"><a href="#测试类进行测试" class="headerlink" title="测试类进行测试"></a>测试类进行测试</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="meta">@SpringBootTest</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WpspringbootmybatisApplicationTests</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> StringRedisTemplate stringRedisTemplate;</span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		<span class="comment">// 保存字符串</span></span><br><span class="line">		stringRedisTemplate.opsForValue().set(<span class="string">"aaa"</span>, <span class="string">"111"</span>);</span><br><span class="line">		Assert.assertEquals(<span class="string">"111"</span>, stringRedisTemplate.opsForValue().get(<span class="string">"aaa"</span>));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> ValueRedisDao valueRedisDao;</span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveRedisTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.valueRedisDao.save(<span class="string">"LiangGzone"</span>);</span><br><span class="line">		System.out.println(<span class="keyword">this</span>.valueRedisDao.getParam());</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="meta">@Test</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">readRedisTest</span><span class="params">()</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">		String value=valueRedisDao.getParam();</span><br><span class="line">		System.out.println(value);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>结合可视化软件，可以确定redis的操作<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-1-3/52959099-file_1483411275568_ad88.png" alt></p>
<p>不过这样的使用还是比较初级，之后结合公司的项目进行封装</p>
]]></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Spring boot </tag>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android数据库框架GreenDao的使用]]></title>
      <url>http://mzeht.com/2017/01/02/Android%E6%95%B0%E6%8D%AE%E5%BA%93%E6%A1%86%E6%9E%B6GreenDao%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      <content type="html"><![CDATA[<p>最近的一个Android项目需要用到数据库的功能，之前的一个项目采用的是xutis，感觉用起来不是很方便，公司的项目我来之前同事用的基本实现<br>为了开发效率，决定采用greendao，看了不少介绍greendao的文章, 发现3.0前后用法变化较大，版本介绍各有不同，到了官方网站确定最新版本，开始研究</p>
<p><a href="https://github.com/greenrobot/greenDAO" target="_blank" rel="noopener">greendao github地址</a><br><a href="http://greenrobot.org/greendao/" target="_blank" rel="noopener">greendao 官方网站地址</a></p>
<a id="more"></a>
<h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><p>在项目的project的build.gradle文件中配置</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:2.2.3'</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.neenbedankt.gradle.plugins:android-apt:1.8'</span></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'org.greenrobot:greendao-gradle-plugin:3.2.1'</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>在项目需要用到的module的build.gradle文件中配置</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: <span class="string">'org.greenrobot.greendao'</span></span><br><span class="line">android &#123;</span><br><span class="line">		<span class="comment">//greendao 数据库版本</span></span><br><span class="line">		schemaVersion <span class="number">2</span></span><br><span class="line">		<span class="comment">//greendao 插件生成代码位置</span></span><br><span class="line">        targetGenDir <span class="string">'src/main/java'</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line"> <span class="keyword">compile</span> <span class="string">'org.greenrobot:greendao:3.2.0'</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<h1 id="流程概要"><a href="#流程概要" class="headerlink" title="流程概要"></a>流程概要</h1><ol>
<li>编写数据库实体类</li>
<li>Make project编译工程，greendao插件生成代码</li>
<li>编写代码，封装使用</li>
</ol>
<h1 id="使用示例"><a href="#使用示例" class="headerlink" title="使用示例"></a>使用示例</h1><h2 id="新建实体类"><a href="#新建实体类" class="headerlink" title="新建实体类"></a>新建实体类</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">@Entity</span><br><span class="line">public class <span class="keyword">Order</span> <span class="title">&#123;</span></span><br><span class="line"><span class="title"></span></span><br><span class="line"><span class="title">    @Id</span></span><br><span class="line">    private Long id;</span><br><span class="line">    @<span class="keyword">Property</span><span class="title"></span></span><br><span class="line">    private <span class="keyword">String</span> userId;</span><br><span class="line">    @<span class="keyword">Property</span><span class="title"></span></span><br><span class="line">    private <span class="keyword">String</span> OrderNumber;</span><br><span class="line">    @<span class="keyword">Property</span><span class="title"></span></span><br><span class="line">    private <span class="keyword">String</span> phoneNumber;</span><br><span class="line">    @<span class="keyword">Property</span><span class="title"></span></span><br><span class="line">    private <span class="keyword">String</span> PaymentType;</span><br><span class="line">    @<span class="keyword">Property</span><span class="title"></span></span><br><span class="line">    private boolean isChecked;</span><br><span class="line">    @<span class="keyword">Property</span><span class="title"></span></span><br><span class="line">    private <span class="keyword">String</span> moudleName;</span><br><span class="line">    </span><br><span class="line">    //...............</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="markeproject"><a href="#markeproject" class="headerlink" title="markeproject"></a>markeproject</h2><p>Androidstudio （顶部工具栏上那个绿色小锤子，想xcode学习？），<br>生成代码<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/17-1-2/55678525-file_1483291295356_2436.png" alt><br>可以看见没有被git跟踪的三个棕色文件就是生成的文件</p>
<h2 id="封装使用"><a href="#封装使用" class="headerlink" title="封装使用"></a>封装使用</h2><p>新建一个DbManager.java</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DBManager</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String dbName = <span class="string">"test_db"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> DBManager mInstance;</span><br><span class="line">    <span class="keyword">private</span> DaoMaster.DevOpenHelper openHelper;</span><br><span class="line">    <span class="keyword">private</span> Context context;</span><br><span class="line">    <span class="keyword">private</span> DaoSession daoSession;</span><br><span class="line">    <span class="keyword">private</span> DaoMaster daoMaster;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">initialize</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mInstance == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (DBManager.class) &#123;</span><br><span class="line">                <span class="keyword">if</span> (mInstance == <span class="keyword">null</span>) &#123;</span><br><span class="line">                    mInstance = <span class="keyword">new</span> DBManager(context);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DBManager</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.context = context;</span><br><span class="line">        openHelper = <span class="keyword">new</span> DaoMaster.DevOpenHelper(context, dbName, <span class="keyword">null</span>);</span><br><span class="line">        daoMaster=<span class="keyword">new</span> DaoMaster(openHelper.getWritableDb());</span><br><span class="line">        daoSession = daoMaster.newSession();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印日志</span></span><br><span class="line">        QueryBuilder.LOG_SQL=<span class="keyword">true</span>;</span><br><span class="line">        QueryBuilder.LOG_VALUES=<span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取单例引用</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span></span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DBManager <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> mInstance;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取session对象</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> DaoSession <span class="title">getDaoSession</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> daoSession;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在Application中进行DbManager的初始化</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">BaimiApplication</span> <span class="keyword">extends</span> <span class="title">Application</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> static <span class="type">Context</span> mContext;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    public void onCreate() &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate();</span><br><span class="line">        mContext = <span class="keyword">this</span>;</span><br><span class="line">        <span class="type">BasePreference</span>.initialize(mContext);</span><br><span class="line">        <span class="type">DBManager</span>.initialize(mContext);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     * 全局的上下文</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    public static <span class="type">Context</span> getmContext() &#123;</span><br><span class="line">        <span class="keyword">return</span> mContext;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>DbManager里面还可以进行进一步的封装，比如一些常用操作</p>
<h2 id="调用"><a href="#调用" class="headerlink" title="调用"></a>调用</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><p> 这部分我还没来的及封装</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="literal">void</span> saveDb() &#123;</span><br><span class="line"></span><br><span class="line">        OrderDao orderdao = DBManager.getInstance().getDaoSession().getOrderDao();</span><br><span class="line">        <span class="keyword">Order</span> <span class="keyword">order</span>=<span class="literal">new</span> <span class="keyword">Order</span>();</span><br><span class="line">        <span class="keyword">order</span>.setPaymentType(paymentType);</span><br><span class="line">        <span class="keyword">order</span>.setOrderNumber(orderEdit.getText().toString());</span><br><span class="line">        <span class="keyword">order</span>.setPhoneNumber(phoneEdit.getText().toString());</span><br><span class="line">        <span class="keyword">order</span>.setChecked(<span class="literal">false</span>);</span><br><span class="line">        <span class="keyword">order</span>.setUserId(BasePreference.getInstance().getLoginName());</span><br><span class="line">        <span class="keyword">order</span>.setMoudleName(<span class="string">"快递接件"</span>);</span><br><span class="line">        orderdao.insert(<span class="keyword">order</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><p>新建了一个DbHelper进行封装，主要是同种查询条件多处调用，写的累。。<br>链式调研，很舒服</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> class DbHelper &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * @param moduleName</span></span><br><span class="line"><span class="comment">     * 获取当前用户订单列表</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span>  static  <span class="built_in">List</span>&lt;<span class="keyword">Order</span>&gt; getUserOrderByMouleName(<span class="built_in">String</span> moduleName)&#123;</span><br><span class="line">        OrderDao orderdao = DBManager.getInstance().getDaoSession().getOrderDao();</span><br><span class="line">        <span class="built_in">List</span>&lt;<span class="keyword">Order</span>&gt; orders = orderdao.queryBuilder()</span><br><span class="line">                .<span class="keyword">where</span>(OrderDao.Properties.MoudleName.<span class="literal">eq</span>(moduleName))</span><br><span class="line">                .<span class="keyword">where</span>(OrderDao.Properties.UserId.<span class="literal">eq</span>(BasePreference.getInstance().getLoginName()))</span><br><span class="line">                .<span class="built_in">list</span>();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> orders;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">OrderDao mOrderdao = DBManager.getInstance().getDaoSession().getOrderDao();</span><br><span class="line"> <span class="keyword">for</span> (Order <span class="keyword">order</span> : mOrderList) &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">order</span>.isChecked() ==<span class="built_in"> true</span>) &#123;</span><br><span class="line">                mOrderdao.<span class="keyword">delete</span>(<span class="keyword">order</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h3 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h3><p>也是基于实体类生成的Dao文件,利用AS智能提示查看一下方法和参数信息，就可以使用了</p>
<h2 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">01-02 01:43:45.549 31150-31150/com.wpmac.momi D/greenDAO: Built SQL for query: <span class="keyword">SELECT</span> T.<span class="string">"_id"</span>,T.<span class="string">"USER_ID"</span>,T.<span class="string">"ORDER_NUMBER"</span>,T.<span class="string">"PHONE_NUMBER"</span>,T.<span class="string">"PAYMENT_TYPE"</span>,T.<span class="string">"IS_CHECKED"</span>,T.<span class="string">"MOUDLE_NAME"</span> <span class="keyword">FROM</span> <span class="string">"ORDER"</span> T  <span class="keyword">WHERE</span> T.<span class="string">"MOUDLE_NAME"</span>=? <span class="keyword">AND</span> T.<span class="string">"USER_ID"</span>=?</span><br><span class="line"><span class="number">01</span><span class="number">-02</span> <span class="number">01</span>:<span class="number">43</span>:<span class="number">45.549</span> <span class="number">31150</span><span class="number">-31150</span>/com.wpmac.momi D/greenDAO: <span class="keyword">Values</span> <span class="keyword">for</span> <span class="keyword">query</span>: [快递接件, <span class="number">007</span>]</span><br><span class="line"><span class="number">01</span><span class="number">-02</span> <span class="number">01</span>:<span class="number">43</span>:<span class="number">51.983</span> <span class="number">31150</span><span class="number">-31150</span>/com.wpmac.momi D/greenDAO: Built <span class="keyword">SQL</span> <span class="keyword">for</span> <span class="keyword">query</span>: <span class="keyword">SELECT</span> T.<span class="string">"_id"</span>,T.<span class="string">"USER_ID"</span>,T.<span class="string">"ORDER_NUMBER"</span>,T.<span class="string">"PHONE_NUMBER"</span>,T.<span class="string">"PAYMENT_TYPE"</span>,T.<span class="string">"IS_CHECKED"</span>,T.<span class="string">"MOUDLE_NAME"</span> <span class="keyword">FROM</span> <span class="string">"ORDER"</span> T  <span class="keyword">WHERE</span> T.<span class="string">"MOUDLE_NAME"</span>=? <span class="keyword">AND</span> T.<span class="string">"USER_ID"</span>=?</span><br><span class="line"><span class="number">01</span><span class="number">-02</span> <span class="number">01</span>:<span class="number">43</span>:<span class="number">51.983</span> <span class="number">31150</span><span class="number">-31150</span>/com.wpmac.momi D/greenDAO: <span class="keyword">Values</span> <span class="keyword">for</span> <span class="keyword">query</span>: [快递接件, <span class="number">007</span>]</span><br><span class="line"><span class="number">01</span><span class="number">-02</span> <span class="number">01</span>:<span class="number">43</span>:<span class="number">51.987</span> <span class="number">31150</span><span class="number">-31150</span>/com.wpmac.momi D/greenDAO: Built <span class="keyword">SQL</span> <span class="keyword">for</span> <span class="keyword">query</span>: <span class="keyword">SELECT</span> T.<span class="string">"_id"</span>,T.<span class="string">"USER_ID"</span>,T.<span class="string">"ORDER_NUMBER"</span>,T.<span class="string">"PHONE_NUMBER"</span>,T.<span class="string">"PAYMENT_TYPE"</span>,T.<span class="string">"IS_CHECKED"</span>,T.<span class="string">"MOUDLE_NAME"</span> <span class="keyword">FROM</span> <span class="string">"ORDER"</span> T  <span class="keyword">WHERE</span> T.<span class="string">"MOUDLE_NAME"</span>=? <span class="keyword">AND</span> T.<span class="string">"USER_ID"</span>=?</span><br><span class="line"><span class="number">01</span><span class="number">-02</span> <span class="number">01</span>:<span class="number">43</span>:<span class="number">51.987</span> <span class="number">31150</span><span class="number">-31150</span>/com.wpmac.momi D/greenDAO: <span class="keyword">Values</span> <span class="keyword">for</span> <span class="keyword">query</span>: [快递接件, <span class="number">007</span>]</span><br><span class="line"><span class="number">01</span><span class="number">-02</span> <span class="number">01</span>:<span class="number">43</span>:<span class="number">52.813</span> <span class="number">31150</span><span class="number">-31150</span>/com.wpmac.momi D/greenDAO: Built <span class="keyword">SQL</span> <span class="keyword">for</span> <span class="keyword">query</span>: <span class="keyword">SELECT</span> T.<span class="string">"_id"</span>,T.<span class="string">"USER_ID"</span>,T.<span class="string">"ORDER_NUMBER"</span>,T.<span class="string">"PHONE_NUMBER"</span>,T.<span class="string">"PAYMENT_TYPE"</span>,T.<span class="string">"IS_CHECKED"</span>,T.<span class="string">"MOUDLE_NAME"</span> <span class="keyword">FROM</span> <span class="string">"ORDER"</span> T  <span class="keyword">WHERE</span> T.<span class="string">"MOUDLE_NAME"</span>=? <span class="keyword">AND</span> T.<span class="string">"USER_ID"</span>=?</span><br><span class="line"><span class="number">01</span><span class="number">-02</span> <span class="number">01</span>:<span class="number">43</span>:<span class="number">52.813</span> <span class="number">31150</span><span class="number">-31150</span>/com.wpmac.momi D/greenDAO: <span class="keyword">Values</span> <span class="keyword">for</span> <span class="keyword">query</span>: [快递接件, <span class="number">007</span>]</span><br><span class="line"><span class="number">01</span><span class="number">-02</span> <span class="number">01</span>:<span class="number">43</span>:<span class="number">52.815</span> <span class="number">31150</span><span class="number">-31150</span>/com.wpmac.momi D/greenDAO: Built <span class="keyword">SQL</span> <span class="keyword">for</span> <span class="keyword">query</span>: <span class="keyword">SELECT</span> T.<span class="string">"_id"</span>,T.<span class="string">"USER_ID"</span>,T.<span class="string">"ORDER_NUMBER"</span>,T.<span class="string">"PHONE_NUMBER"</span>,T.<span class="string">"PAYMENT_TYPE"</span>,T.<span class="string">"IS_CHECKED"</span>,T.<span class="string">"MOUDLE_NAME"</span> <span class="keyword">FROM</span> <span class="string">"ORDER"</span> T  <span class="keyword">WHERE</span> T.<span class="string">"MOUDLE_NAME"</span>=? <span class="keyword">AND</span> T.<span class="string">"USER_ID"</span>=?</span><br><span class="line"><span class="number">01</span><span class="number">-02</span> <span class="number">01</span>:<span class="number">43</span>:<span class="number">52.815</span> <span class="number">31150</span><span class="number">-31150</span>/com.wpmac.momi D/greenDAO: <span class="keyword">Values</span> <span class="keyword">for</span> <span class="keyword">query</span>: [快递接件, <span class="number">007</span>]</span><br></pre></td></tr></table></figure>
<h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>总的来说，greendao的使用和后端的hibernate ORM框架使用方式类似<br>以后会不会出现和Mybatis类似的androidORM框架呢，希望有生之年能看见<br>联想到Mybatis使用时的日志配置，可以实时打印出语句和参数信息<br>寻找了一下greendao打印日志的方法 在DbManager.java里面已经添加了</p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 数据库 </tag>
            
            <tag> greendao </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring boot搭建jdbc]]></title>
      <url>http://mzeht.com/2016/12/28/spring%20boot%20jdbc/</url>
      <content type="html"><![CDATA[<p>开发环境：idea</p>
<h1 id="初步准备"><a href="#初步准备" class="headerlink" title="初步准备"></a>初步准备</h1><p>利用idea创建一个基本的Spring boot工程<br>java sdk 暂时用 1.7<br>GUI 选择组建时什么都不选<br>添加为Maven项目<br>此时pom文件状态为</p>
<a id="more"></a>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>wpspringboot<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">packaging</span>&gt;</span>jar<span class="tag">&lt;/<span class="name">packaging</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">name</span>&gt;</span>wpspringboot<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">description</span>&gt;</span>Demo project for Spring Boot<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">relativePath</span>/&gt;</span> <span class="comment">&lt;!-- lookup parent from repository --&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.reporting.outputEncoding</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">java.version</span>&gt;</span>1.7<span class="tag">&lt;/<span class="name">java.version</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-test<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">scope</span>&gt;</span>test<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>使用idea自带的命令行测试<br>打包<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">mvn </span>clean &amp;&amp; <span class="keyword">mvn </span>package -Dmaven.test<span class="meta">.skip</span></span><br></pre></td></tr></table></figure></p>
<p>构建成功后打包的jar生成在当前目录下的target/</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO] Building <span class="string">jar:</span> <span class="regexp">/Users/</span>wpmac<span class="regexp">/IntellijProject/</span>wpspringboot<span class="regexp">/target/</span>wpspringboot<span class="number">-0.0</span><span class="number">.1</span>-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>
<p>进入到jar包所在位置</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">java</span> <span class="selector-tag">-jar</span> <span class="selector-tag">wpspringboot-0</span><span class="selector-class">.0</span><span class="selector-class">.1-SNAPSHOT</span><span class="selector-class">.jar</span></span><br></pre></td></tr></table></figure>
<p>即可运行</p>
<figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">  .   ____          <span class="keyword">_</span>            __ <span class="keyword">_</span> <span class="keyword">_</span></span><br><span class="line"> /\\ / ___'<span class="keyword">_</span> __ <span class="keyword">_</span> <span class="keyword">_</span>(<span class="keyword">_</span>)<span class="keyword">_</span> __  __ <span class="keyword">_</span> \ \ \ \</span><br><span class="line">( ( )\___ | <span class="type">'_</span> | <span class="type">'_</span>| <span class="type">| '_</span> \/ <span class="keyword">_</span>` | <span class="type">\ \ \ \</span></span><br><span class="line"><span class="type"> \\/  ___</span>)| <span class="type">|_</span>)| <span class="type">| | | | || (_</span>| <span class="type">|  ) ) ) )</span></span><br><span class="line"><span class="type">  '  |____</span>| <span class="type">.__</span>|<span class="type">_</span>| <span class="type">|_</span>|<span class="type">_</span>| <span class="type">|_</span>\__, | <span class="type">/ / / /</span></span><br><span class="line"><span class="type"> =========|_</span>|<span class="type">==============|___</span>/=/<span class="keyword">_</span>/<span class="keyword">_</span>/<span class="keyword">_</span>/</span><br><span class="line"> :: Spring Boot ::        (v1<span class="number">.4</span><span class="number">.3</span>.RELEASE)</span><br><span class="line"></span><br><span class="line"><span class="number">2016</span><span class="number">-12</span><span class="number">-28</span> <span class="number">19</span>:<span class="number">12</span>:<span class="number">06.392</span>  INFO <span class="number">3005</span> --- [           main] com.example.WpspringbootApplication      : Starting WpspringbootApplication v0<span class="number">.0</span><span class="number">.1</span>-SNAPSHOT <span class="built_in">with</span> PID <span class="number">3005</span> (/Users/wpmac/IntellijProject/wpspringboot/target/wpspringboot<span class="number">-0.0</span><span class="number">.1</span>-SNAPSHOT.jar started <span class="built_in">by</span> wpmac <span class="built_in">in</span> /Users/wpmac/IntellijProject/wpspringboot/target)</span><br><span class="line"><span class="number">2016</span><span class="number">-12</span><span class="number">-28</span> <span class="number">19</span>:<span class="number">12</span>:<span class="number">06.397</span>  INFO <span class="number">3005</span> --- [           main] com.example.WpspringbootApplication      : No active profile <span class="built_in">set</span>, falling back to default profiles: default</span><br><span class="line"><span class="number">2016</span><span class="number">-12</span><span class="number">-28</span> <span class="number">19</span>:<span class="number">12</span>:<span class="number">06.511</span>  INFO <span class="number">3005</span> --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@<span class="number">31407</span>cec: startup date [Wed Dec <span class="number">28</span> <span class="number">19</span>:<span class="number">12</span>:<span class="number">06</span> CST <span class="number">2016</span>]; root of context hierarchy</span><br><span class="line"><span class="number">2016</span><span class="number">-12</span><span class="number">-28</span> <span class="number">19</span>:<span class="number">12</span>:<span class="number">08.388</span>  INFO <span class="number">3005</span> --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans <span class="keyword">for</span> JMX exposure on startup</span><br><span class="line"><span class="number">2016</span><span class="number">-12</span><span class="number">-28</span> <span class="number">19</span>:<span class="number">12</span>:<span class="number">08.436</span>  INFO <span class="number">3005</span> --- [           main] com.example.WpspringbootApplication      : Started WpspringbootApplication <span class="built_in">in</span> <span class="number">12.949</span> seconds (JVM running <span class="keyword">for</span> <span class="number">13.7</span>)</span><br><span class="line"><span class="number">2016</span><span class="number">-12</span><span class="number">-28</span> <span class="number">19</span>:<span class="number">12</span>:<span class="number">08.438</span>  INFO <span class="number">3005</span> --- [       Thread<span class="number">-1</span>] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@<span class="number">31407</span>cec: startup date [Wed Dec <span class="number">28</span> <span class="number">19</span>:<span class="number">12</span>:<span class="number">06</span> CST <span class="number">2016</span>]; root of context hierarchy</span><br><span class="line"><span class="number">2016</span><span class="number">-12</span><span class="number">-28</span> <span class="number">19</span>:<span class="number">12</span>:<span class="number">08.440</span>  INFO <span class="number">3005</span> --- [       Thread<span class="number">-1</span>] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown</span><br></pre></td></tr></table></figure>
<p>添加web依赖</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>测试类</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RestfulApiWebDemo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function">String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        SpringApplication.run(RestfulApiWebDemo.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注释创建时生成的Application</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WpspringbootApplication</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//	public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">//		SpringApplication.run(WpspringbootApplication.class, args);</span></span><br><span class="line"><span class="comment">//	&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>重新打包运行，测试8080端口(spring boot默认端口)</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ <span class="selector-tag">curl</span> 127<span class="selector-class">.0</span><span class="selector-class">.0</span><span class="selector-class">.1</span><span class="selector-pseudo">:8080</span></span><br><span class="line"><span class="selector-tag">Hello</span> <span class="selector-tag">World</span>!%</span><br></pre></td></tr></table></figure>
<h1 id="使用jdbc，mysql"><a href="#使用jdbc，mysql" class="headerlink" title="使用jdbc，mysql"></a>使用jdbc，mysql</h1><h2 id="添加jdbc依赖"><a href="#添加jdbc依赖" class="headerlink" title="添加jdbc依赖"></a>添加jdbc依赖</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-jdbc<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span> </span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--mysql依赖--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>5.1.35<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line">		<span class="comment">&lt;!--连接池--&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>druid<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0.14<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="文件目录结构"><a href="#文件目录结构" class="headerlink" title="文件目录结构"></a>文件目录结构</h2><p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-29/41925907-file_1482978251512_1187b.png" alt></p>
<p>##配置数据源信息<br>新建 src/main/resources/config/source.properties</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql</span></span><br><span class="line"><span class="attr">source.driverClassName</span> = com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">source.url</span> = jdbc:mysql://localhost:<span class="number">3306</span>/wpspringboot</span><br><span class="line"><span class="attr">source.username</span> = root</span><br><span class="line"><span class="attr">source.password</span> = root</span><br></pre></td></tr></table></figure>
<p>新建confgi.BeanConfig</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@PropertySource</span>(value = &#123;<span class="string">"classpath:config/source.properties"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Environment env;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(destroyMethod = <span class="string">"close"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidDataSource dataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        dataSource.setDriverClassName(env.getProperty(<span class="string">"source.driverClassName"</span>).trim());</span><br><span class="line">        dataSource.setUrl(env.getProperty(<span class="string">"source.url"</span>).trim());</span><br><span class="line">        dataSource.setUsername(env.getProperty(<span class="string">"source.username"</span>).trim());</span><br><span class="line">        dataSource.setPassword(env.getProperty(<span class="string">"source.password"</span>).trim());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">jdbcTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JdbcTemplate jdbcTemplate = <span class="keyword">new</span> JdbcTemplate();</span><br><span class="line">        jdbcTemplate.setDataSource(dataSource());</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="新建实体"><a href="#新建实体" class="headerlink" title="新建实体"></a>新建实体</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Author</span> &#123;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String realName;</span><br><span class="line">    <span class="keyword">private</span> String nickName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRealName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> realName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRealName</span><span class="params">(String realName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.realName = realName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nickName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickName</span><span class="params">(String nickName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickName = nickName;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Dao层"><a href="#Dao层" class="headerlink" title="Dao层"></a>Dao层</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public<span class="built_in"> interface </span>AuthorDao &#123;</span><br><span class="line"></span><br><span class="line">    int <span class="builtin-name">add</span>(Author author);</span><br><span class="line">    int update(Author author);</span><br><span class="line">    int delete(Long id);</span><br><span class="line">    Author findAuthor(Long id);</span><br><span class="line">    List&lt;Author&gt; findAuthorList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorDaoImpl</span> <span class="keyword">implements</span> <span class="title">AuthorDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(Author author)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"insert into t_author(real_name, nick_name) values(?, ?)"</span>,</span><br><span class="line">                author.getRealName(), author.getNickName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Author author)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"update t_author set real_name = ?, nick_name = ? where id = ?"</span>,</span><br><span class="line">                <span class="keyword">new</span> Object[]&#123;author.getRealName(), author.getNickName(), author.getId()&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"delete from t_author where id = ?"</span>, id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Author <span class="title">findAuthor</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        List&lt;Author&gt; list = jdbcTemplate.query(<span class="string">"select * from t_author where id = ?"</span>, <span class="keyword">new</span> Object[]&#123;id&#125;, <span class="keyword">new</span> BeanPropertyRowMapper(Author.class));</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> != list &amp;&amp; list.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            Author auhtor = list.get(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span> auhtor;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Author&gt; <span class="title">findAuthorList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Author&gt; list = jdbcTemplate.query(<span class="string">"select * from t_author"</span>, <span class="keyword">new</span> Object[]&#123;&#125;, <span class="keyword">new</span> BeanPropertyRowMapper&lt;Author&gt;(Author.class));</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="service层"><a href="#service层" class="headerlink" title="service层"></a>service层</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public<span class="built_in"> interface </span>AuthorService &#123;</span><br><span class="line"></span><br><span class="line">    int <span class="builtin-name">add</span>(Author author);</span><br><span class="line">    int update(Author author);</span><br><span class="line">    int delete(Long id);</span><br><span class="line">    Author findAuthor(Long id);</span><br><span class="line">    List&lt;Author&gt; findAuthorList();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service(<span class="meta-string">"authorService"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorServiceImpl</span> <span class="title">implements</span> <span class="title">AuthorService</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthorDao authorDao;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> int add(Author author) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.authorDao.add(author);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> int update(Author author) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.authorDao.update(author);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> int delete(<span class="built_in">Long</span> id) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.authorDao.delete(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Author findAuthor(<span class="built_in">Long</span> id) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.authorDao.findAuthor(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Author&gt; findAuthorList() &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.authorDao.findAuthorList();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="controller层"><a href="#controller层" class="headerlink" title="controller层"></a>controller层</h2><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(value=<span class="string">"/jdbc/author"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> AuthorController &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthorService authorService;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户列表</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.GET)</span><br><span class="line">    <span class="keyword">public</span> Map&lt;<span class="built_in">String</span>,<span class="built_in">Object</span>&gt; getAuthorList(HttpServletRequest request) &#123;</span><br><span class="line">        List&lt;Author&gt; authorList = <span class="keyword">this</span>.authorService.findAuthorList();</span><br><span class="line">        Map&lt;<span class="built_in">String</span>,<span class="built_in">Object</span>&gt; param = <span class="keyword">new</span> HashMap&lt;<span class="built_in">String</span>,<span class="built_in">Object</span>&gt;();</span><br><span class="line">        param.put(<span class="string">"total"</span>, authorList.size());</span><br><span class="line">        param.put(<span class="string">"rows"</span>, authorList);</span><br><span class="line">        <span class="keyword">return</span> param;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/&#123;userId:\\d+&#125;"</span>, method = RequestMethod.GET)</span><br><span class="line">    <span class="keyword">public</span> Author getAuthor(<span class="meta">@PathVariable</span> Long userId, HttpServletRequest request) &#123;</span><br><span class="line">        Author author = <span class="keyword">this</span>.authorService.findAuthor(userId);</span><br><span class="line">        <span class="keyword">if</span>(author == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"查询错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> author;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(method = RequestMethod.POST)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> add(<span class="meta">@RequestBody</span> JSONObject jsonObject) &#123;</span><br><span class="line">        <span class="built_in">String</span> userId = jsonObject.getString(<span class="string">"user_id"</span>);</span><br><span class="line">        <span class="built_in">String</span> realName = jsonObject.getString(<span class="string">"real_name"</span>);</span><br><span class="line">        <span class="built_in">String</span> nickName = jsonObject.getString(<span class="string">"nick_name"</span>);</span><br><span class="line">        Author author = <span class="keyword">new</span> Author();</span><br><span class="line">        <span class="keyword">if</span> (author!=<span class="literal">null</span>) &#123;</span><br><span class="line">            author.setId(Long.valueOf(userId));</span><br><span class="line">        &#125;</span><br><span class="line">        author.setRealName(realName);</span><br><span class="line">        author.setNickName(nickName);</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.authorService.add(author);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"新增错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 更新方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/&#123;userId:\\d+&#125;"</span>, method = RequestMethod.PUT)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> update(<span class="meta">@PathVariable</span> Long userId, <span class="meta">@RequestBody</span> JSONObject jsonObject) &#123;</span><br><span class="line">        Author author = <span class="keyword">this</span>.authorService.findAuthor(userId);</span><br><span class="line">        <span class="built_in">String</span> realName = jsonObject.getString(<span class="string">"real_name"</span>);</span><br><span class="line">        <span class="built_in">String</span> nickName = jsonObject.getString(<span class="string">"nick_name"</span>);</span><br><span class="line">        author.setRealName(realName);</span><br><span class="line">        author.setNickName(nickName);</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.authorService.update(author);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"更新错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping</span>(value = <span class="string">"/&#123;userId:\\d+&#125;"</span>, method = RequestMethod.DELETE)</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> <span class="keyword">delete</span>(<span class="meta">@PathVariable</span> Long userId) &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.authorService.delete(userId);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(Exception e)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"删除错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>打开本地数据库 用postman进行测试即可</p>
]]></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Spring boot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring boot配置多数据源]]></title>
      <url>http://mzeht.com/2016/12/28/spring%20boot%20%E5%A4%9A%E6%95%B0%E6%8D%AE%E6%BA%90%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<h2 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h2><p>可以是默认的application.properties，亦可以是自定义的source.properties</p>
<a id="more"></a>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql</span></span><br><span class="line"><span class="attr">spring.datasource.one.driver-class-name</span>=com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">spring.datasource.one.url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/wpspringboot</span><br><span class="line"><span class="attr">spring.datasource.one.username</span>=root</span><br><span class="line"><span class="attr">spring.datasource.one.password</span>=root</span><br><span class="line"></span><br><span class="line"><span class="attr">spring.datasource.two.driver-class-name</span>=com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">spring.datasource.two.url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/wpspringboottwo</span><br><span class="line"><span class="attr">spring.datasource.two.username</span>=root</span><br><span class="line"><span class="attr">spring.datasource.two.password</span>=root</span><br></pre></td></tr></table></figure>
<p>@Configuration</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@Configuration</span></span><br><span class="line"><span class="comment">//@EnableTransactionManagement</span></span><br><span class="line"><span class="comment">//@PropertySource(value = &#123;"classpath:config/source.properties"&#125;)</span></span><br><span class="line">public class BeanConfig &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//    @Autowired</span></span><br><span class="line"><span class="comment">//    private Environment env;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Bean(destroyMethod = "close")</span></span><br><span class="line"><span class="comment">//    public DataSource dataSource() &#123;</span></span><br><span class="line"><span class="comment">//        DruidDataSource dataSource = new DruidDataSource();</span></span><br><span class="line"><span class="comment">//        dataSource.setDriverClassName(env.getProperty("source.driverClassName").trim());</span></span><br><span class="line"><span class="comment">//        dataSource.setUrl(env.getProperty("source.url").trim());</span></span><br><span class="line"><span class="comment">//        dataSource.setUsername(env.getProperty("source.username").trim());</span></span><br><span class="line"><span class="comment">//        dataSource.setPassword(env.getProperty("source.password").trim());</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        return dataSource;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    @Bean</span></span><br><span class="line"><span class="comment">//    public JdbcTemplate jdbcTemplate() &#123;</span></span><br><span class="line"><span class="comment">//        JdbcTemplate jdbcTemplate = new JdbcTemplate();</span></span><br><span class="line"><span class="comment">//        jdbcTemplate.setDataSource(dataSource());</span></span><br><span class="line"><span class="comment">//        return jdbcTemplate;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="variable">@Bean</span>(name = <span class="string">"oneDataSource"</span>)</span><br><span class="line">    <span class="variable">@Qualifier</span>(<span class="string">"oneDataSource"</span>)</span><br><span class="line">    <span class="variable">@Primary</span></span><br><span class="line">    <span class="variable">@ConfigurationProperties</span>(prefix=<span class="string">"spring.datasource.one"</span>)</span><br><span class="line">    public DataSource oneDataSource() &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">DataSourceBuilder</span><span class="selector-class">.create</span>()<span class="selector-class">.build</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="selector-tag">Bean</span>(name = <span class="string">"twoDataSource"</span>)</span><br><span class="line">    @<span class="selector-tag">Qualifier</span>(<span class="string">"twoDataSource"</span>)</span><br><span class="line">    @<span class="selector-tag">ConfigurationProperties</span>(prefix=<span class="string">"spring.datasource.two"</span>)</span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">DataSource</span> <span class="selector-tag">twoDataSource</span>() &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">DataSourceBuilder</span><span class="selector-class">.create</span>()<span class="selector-class">.build</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="selector-tag">Bean</span>(name = <span class="string">"oneJdbcTemplate"</span>)</span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">JdbcTemplate</span> <span class="selector-tag">oneJdbcTemplate</span>(<span class="variable">@Qualifier</span>(<span class="string">"oneDataSource"</span>) DataSource dataSource) &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">JdbcTemplate</span>(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="selector-tag">Bean</span>(name = <span class="string">"twoJdbcTemplate"</span>)</span><br><span class="line">    <span class="selector-tag">public</span> <span class="selector-tag">JdbcTemplate</span> <span class="selector-tag">twoJdbcTemplate</span>(<span class="variable">@Qualifier</span>(<span class="string">"twoDataSource"</span>) DataSource dataSource) &#123;</span><br><span class="line">        <span class="selector-tag">return</span> <span class="selector-tag">new</span> <span class="selector-tag">JdbcTemplate</span>(dataSource);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>引用</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Repository</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorDaoImpl</span> <span class="keyword">implements</span> <span class="title">AuthorDao</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Qualifier</span>(<span class="string">"oneJdbcTemplate"</span>)</span><br><span class="line">    <span class="keyword">private</span> JdbcTemplate jdbcTemplate;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">add</span><span class="params">(Author author)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"insert into t_author(real_name, nick_name) values(?, ?)"</span>,</span><br><span class="line">                author.getRealName(), author.getNickName());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">update</span><span class="params">(Author author)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"update t_author set real_name = ?, nick_name = ? where id = ?"</span>,</span><br><span class="line">                <span class="keyword">new</span> Object[]&#123;author.getRealName(), author.getNickName(), author.getId()&#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">delete</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate.update(<span class="string">"delete from t_author where id = ?"</span>, id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Author <span class="title">findAuthor</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        List&lt;Author&gt; list = jdbcTemplate.query(<span class="string">"select * from t_author where id = ?"</span>, <span class="keyword">new</span> Object[]&#123;id&#125;, <span class="keyword">new</span> BeanPropertyRowMapper(Author.class));</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">null</span> != list &amp;&amp; list.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">            Author auhtor = list.get(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">return</span> auhtor;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Author&gt; <span class="title">findAuthorList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Author&gt; list = jdbcTemplate.query(<span class="string">"select * from t_author"</span>, <span class="keyword">new</span> Object[]&#123;&#125;, <span class="keyword">new</span> BeanPropertyRowMapper&lt;Author&gt;(Author.class));</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>试下单元测试</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@RunWith</span>(SpringJUnit4ClassRunner.class)</span><br><span class="line"><span class="variable">@SpringApplicationConfiguration</span>(WpspringbootApplication.class)</span><br><span class="line">public class JdbcTest &#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>idea提示SpringApplicationConfiguration方法已被废弃<br>那就用自动生成的</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@RunWith</span>(SpringRunner.class)</span><br><span class="line"><span class="variable">@SpringBootTest</span></span><br><span class="line">public class WpspringbootApplicationTests &#123;</span><br><span class="line"></span><br><span class="line">	<span class="variable">@Test</span></span><br><span class="line">	public void contextLoads() &#123;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="variable">@Resource</span>(name=<span class="string">"oneJdbcTemplate"</span>)</span><br><span class="line">	protected JdbcTemplate jdbcTemplate1;</span><br><span class="line">	<span class="variable">@Resource</span>(name=<span class="string">"twoJdbcTemplate"</span>)</span><br><span class="line">	protected JdbcTemplate jdbcTemplate2;</span><br><span class="line"></span><br><span class="line">	<span class="variable">@Test</span></span><br><span class="line">	public void test() throws Exception &#123;</span><br><span class="line">		<span class="selector-tag">jdbcTemplate1</span><span class="selector-class">.update</span>(<span class="string">"insert into t_author(id, real_name, nick_name) values(?, ?, ?)"</span>, <span class="number">5</span>, <span class="string">"梁桂钊"</span>, <span class="string">"LiangGzone"</span>);</span><br><span class="line">		<span class="selector-tag">jdbcTemplate2</span><span class="selector-class">.update</span>(<span class="string">"insert into t_author(id, real_name, nick_name) values(?, ?, ?)"</span>, <span class="number">6</span>, <span class="string">"梁桂钊"</span>, <span class="string">"LiangGzone"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>运行之后发现数据库中文是问号<br>数据库配置文件中配置</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring<span class="selector-class">.datasource</span><span class="selector-class">.one</span><span class="selector-class">.url</span>=jdbc:mysql:<span class="comment">//localhost:3306/wpspringboot?useUnicode=true&amp;characterEncoding=utf-8&amp;autoReconnect=true</span></span><br></pre></td></tr></table></figure>
<p>再次测试，正常了</p>
]]></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Spring boot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Spring boot整合mybatis]]></title>
      <url>http://mzeht.com/2016/12/28/spring%20boot%E6%95%B4%E5%90%88mybatis/</url>
      <content type="html"><![CDATA[<h1 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h1><h2 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableTransactionManagement</span></span><br><span class="line"><span class="meta">@PropertySource</span>(value = &#123;<span class="string">"classpath:config/source.properties"</span>&#125;)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BeanConfig</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> Environment env;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span>(destroyMethod = <span class="string">"close"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> DataSource <span class="title">dataSource</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DruidDataSource dataSource = <span class="keyword">new</span> DruidDataSource();</span><br><span class="line">        dataSource.setDriverClassName(env.getProperty(<span class="string">"source.driverClassName"</span>).trim());</span><br><span class="line">        dataSource.setUrl(env.getProperty(<span class="string">"source.url"</span>).trim());</span><br><span class="line">        dataSource.setUsername(env.getProperty(<span class="string">"source.username"</span>).trim());</span><br><span class="line">        dataSource.setPassword(env.getProperty(<span class="string">"source.password"</span>).trim());</span><br><span class="line">        <span class="keyword">return</span> dataSource;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> JdbcTemplate <span class="title">jdbcTemplate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        JdbcTemplate jdbcTemplate = <span class="keyword">new</span> JdbcTemplate();</span><br><span class="line">        jdbcTemplate.setDataSource(dataSource());</span><br><span class="line">        <span class="keyword">return</span> jdbcTemplate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>默认配置文件配置端口和Mapper文件位置</p>
<a id="more"></a>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql</span></span><br><span class="line"><span class="attr">spring.datasource.one.driver-class-name</span>=com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">spring.datasource.one.url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/wpspringboot?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf-<span class="number">8</span>&amp;autoReconnect=<span class="literal">true</span>&amp;zeroDateTimeBehavior=convertToNull</span><br><span class="line"><span class="attr">spring.datasource.one.username</span>=root</span><br><span class="line"><span class="attr">spring.datasource.one.password</span>=root</span><br><span class="line"></span><br><span class="line"><span class="attr">spring.datasource.two.driver-class-name</span>=com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">spring.datasource.two.url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/wpspringboottwo?useUnicode=<span class="literal">true</span>&amp;characterEncoding=utf-<span class="number">8</span>&amp;autoReconnect=<span class="literal">true</span>&amp;zeroDateTimeBehavior=convertToNull</span><br><span class="line"><span class="attr">spring.datasource.two.username</span>=root</span><br><span class="line"><span class="attr">spring.datasource.two.password</span>=root</span><br><span class="line"></span><br><span class="line"><span class="attr">spring.datasource.driver-class-name</span>=com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">spring.datasource.url</span>=jdbc:mysql://localhost:<span class="number">3306</span>/wpspringboot?useUnicode = <span class="literal">true</span>&amp;characterEncoding=UTF-<span class="number">8</span>&amp;&amp;autoReconnect=<span class="literal">true</span>&amp;zeroDateTimeBehavior=convertToNull</span><br><span class="line"><span class="attr">spring.datasource.username</span>=root</span><br><span class="line"><span class="attr">spring.datasource.password</span>=root</span><br><span class="line"></span><br><span class="line"><span class="attr">server.port</span>=<span class="number">9688</span></span><br><span class="line"><span class="comment">#mybatis配置文件位置</span></span><br><span class="line"><span class="attr">mybatis.mapper-locations</span>=classpath*:mybatis/*Mapper.xml</span><br></pre></td></tr></table></figure>
<p>自定义配置文件配置数据库地址</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mysql</span></span><br><span class="line"><span class="attr">source.driverClassName</span> = com.mysql.jdbc.Driver</span><br><span class="line"><span class="attr">source.url</span> = jdbc:mysql://localhost:<span class="number">3306</span>/wpspringboot?useUnicode = <span class="literal">true</span>&amp;characterEncoding=UTF-<span class="number">8</span>&amp;zeroDateTimeBehavior=convertToNull</span><br><span class="line"><span class="attr">source.username</span> = root</span><br><span class="line"><span class="attr">source.password</span> = root</span><br></pre></td></tr></table></figure>
<h2 id="配置实体类"><a href="#配置实体类" class="headerlink" title="配置实体类"></a>配置实体类</h2><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Author</span> &#123;</span></span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="keyword">private</span> String realName;</span><br><span class="line">    <span class="keyword">private</span> String nickName;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Long <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(Long id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getRealName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> realName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRealName</span><span class="params">(String realName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.realName = realName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getNickName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> nickName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNickName</span><span class="params">(String nickName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.nickName = nickName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="配置Mapper对应接口"><a href="#配置Mapper对应接口" class="headerlink" title="配置Mapper对应接口"></a>配置Mapper对应接口</h2><p>使用@Mapper注解</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Mapper</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">AuthorMapper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Author <span class="title">findAuthor</span><span class="params">(Long id)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="配置Mapper文件"><a href="#配置Mapper文件" class="headerlink" title="配置Mapper文件"></a>配置Mapper文件</h2><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" </span></span></span><br><span class="line"><span class="xml">"http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.example.mapper.AuthorMapper"</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">"authorResultMap"</span> <span class="attr">type</span>=<span class="string">"com.example.po.Author"</span>&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">id</span> <span class="attr">property</span>=<span class="string">"id"</span> <span class="attr">column</span>=<span class="string">"id"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"realName"</span> <span class="attr">column</span>=<span class="string">"real_name"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">		<span class="tag">&lt;<span class="name">result</span> <span class="attr">property</span>=<span class="string">"nickName"</span> <span class="attr">column</span>=<span class="string">"nick_name"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findAuthor"</span> <span class="attr">parameterType</span>=<span class="string">"com.example.po.Author"</span> <span class="attr">resultMap</span>=<span class="string">"authorResultMap"</span>&gt;</span></span></span><br><span class="line"><span class="xml">		select id, real_name, nick_name from t_author where id = #</span><span class="template-variable">&#123;id&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">	<span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="准备service"><a href="#准备service" class="headerlink" title="准备service"></a>准备service</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthorMapper authorMapper;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Author findAuthor(<span class="built_in">Long</span> userId) &#123;</span><br><span class="line">        <span class="keyword">return</span> authorMapper.findAuthor(userId);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Controller层"><a href="#Controller层" class="headerlink" title="Controller层"></a>Controller层</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping(value=<span class="meta-string">"/mybatis/author"</span>)</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AuthorController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthorService authorService;</span><br><span class="line"><span class="comment">//    /**</span></span><br><span class="line"><span class="comment">//     * 查询用户列表</span></span><br><span class="line"><span class="comment">//     */</span></span><br><span class="line"><span class="comment">//    @RequestMapping(method = RequestMethod.GET)</span></span><br><span class="line"><span class="comment">//    public Map&lt;String,Object&gt; getAuthorList(HttpServletRequest request) &#123;</span></span><br><span class="line"><span class="comment">//        List&lt;Author&gt; authorList = this.authorService.findAuthorList();</span></span><br><span class="line"><span class="comment">//        Map&lt;String,Object&gt; param = new HashMap&lt;String,Object&gt;();</span></span><br><span class="line"><span class="comment">//        param.put("total", authorList.size());</span></span><br><span class="line"><span class="comment">//        param.put("rows", authorList);</span></span><br><span class="line"><span class="comment">//        return param;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 查询用户信息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@RequestMapping(value = <span class="meta-string">"/&#123;userId:\\d+&#125;"</span>, method = RequestMethod.GET)</span></span><br><span class="line">    <span class="keyword">public</span> Author getAuthor(<span class="meta">@PathVariable</span> <span class="built_in">Long</span> userId, HttpServletRequest request) &#123;</span><br><span class="line">        Author author = <span class="keyword">this</span>.authorService.findAuthor(userId);</span><br><span class="line">        <span class="keyword">if</span>(author == <span class="literal">null</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> new RuntimeException(<span class="string">"查询错误"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> author;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//    /**</span></span><br><span class="line"><span class="comment">//     * 新增方法</span></span><br><span class="line"><span class="comment">//     */</span></span><br><span class="line"><span class="comment">//    @RequestMapping(method = RequestMethod.POST)</span></span><br><span class="line"><span class="comment">//    public void add(@RequestBody JSONObject jsonObject) &#123;</span></span><br><span class="line"><span class="comment">//        String userId = jsonObject.getString("user_id");</span></span><br><span class="line"><span class="comment">//        String realName = jsonObject.getString("real_name");</span></span><br><span class="line"><span class="comment">//        String nickName = jsonObject.getString("nick_name");</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        try&#123;</span></span><br><span class="line"><span class="comment">//            this.authorService.add(realName, nickName);</span></span><br><span class="line"><span class="comment">//        &#125;catch(Exception e)&#123;</span></span><br><span class="line"><span class="comment">//            e.printStackTrace();</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException("新增错误");</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    /**</span></span><br><span class="line"><span class="comment">//     * 更新方法</span></span><br><span class="line"><span class="comment">//     */</span></span><br><span class="line"><span class="comment">//    @RequestMapping(value = "/&#123;userId:\\d+&#125;", method = RequestMethod.PUT)</span></span><br><span class="line"><span class="comment">//    public void update(@PathVariable Long userId, @RequestBody JSONObject jsonObject) &#123;</span></span><br><span class="line"><span class="comment">//        Author author = this.authorService.findAuthor(userId);</span></span><br><span class="line"><span class="comment">//        String realName = jsonObject.getString("real_name");</span></span><br><span class="line"><span class="comment">//        String nickName = jsonObject.getString("nick_name");</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        try&#123;</span></span><br><span class="line"><span class="comment">//            this.authorService.update(realName, nickName, author.getId());</span></span><br><span class="line"><span class="comment">//        &#125;catch(Exception e)&#123;</span></span><br><span class="line"><span class="comment">//            e.printStackTrace();</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException("更新错误");</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//    /**</span></span><br><span class="line"><span class="comment">//     * 删除方法</span></span><br><span class="line"><span class="comment">//     */</span></span><br><span class="line"><span class="comment">//    @RequestMapping(value = "/&#123;userId:\\d+&#125;", method = RequestMethod.DELETE)</span></span><br><span class="line"><span class="comment">//    public void delete(@PathVariable Long userId) &#123;</span></span><br><span class="line"><span class="comment">//        try&#123;</span></span><br><span class="line"><span class="comment">//            this.authorService.delete(userId);</span></span><br><span class="line"><span class="comment">//        &#125;catch(Exception e)&#123;</span></span><br><span class="line"><span class="comment">//            throw new RuntimeException("删除错误");</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>测试通过</p>
<h1 id="配置日志"><a href="#配置日志" class="headerlink" title="配置日志"></a>配置日志</h1><p>mybatis配置日志打印<br>resources文件夹下新建logback.xml</p>
<figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">configuration</span> <span class="attr">scan</span>=<span class="string">"true"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"CONSOLE"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.ConsoleAppender"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>%d %-5level [%thread] %logger</span><span class="template-variable">&#123;0&#125;</span><span class="xml">: %msg%n<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- The FILE and ASYNC appenders are here as examples for a production configuration --&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"FILE"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.RollingFileAppender"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">rollingPolicy</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.core.rolling.TimeBasedRollingPolicy"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">fileNamePattern</span>&gt;</span>log/wpspringbootmybatis.%d</span><span class="template-variable">&#123;yyyy-MM-dd&#125;</span><span class="xml">.log.zip<span class="tag">&lt;/<span class="name">fileNamePattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">maxHistory</span>&gt;</span>90<span class="tag">&lt;/<span class="name">maxHistory</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">rollingPolicy</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">charset</span>&gt;</span>utf-8<span class="tag">&lt;/<span class="name">charset</span>&gt;</span></span></span><br><span class="line"><span class="xml">            <span class="tag">&lt;<span class="name">Pattern</span>&gt;</span>%d %-5level [%thread] %logger</span><span class="template-variable">&#123;0&#125;</span><span class="xml">: %msg%n<span class="tag">&lt;/<span class="name">Pattern</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;/<span class="name">encoder</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">appender</span> <span class="attr">name</span>=<span class="string">"ASYNC"</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.AsyncAppender"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">queueSize</span>&gt;</span>512<span class="tag">&lt;/<span class="name">queueSize</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"FILE"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">appender</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"cn.upg"</span> <span class="attr">level</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;logback.loglevel&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>/&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"javax.activation"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"javax.mail"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"javax.xml.bind"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"ch.qos.logback"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.codahale.metrics"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.ryantenney"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.sun.xml.internal.bind"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.zaxxer"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"io.undertow"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.apache"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.apache.catalina.startup.DigesterFactory"</span> <span class="attr">level</span>=<span class="string">"OFF"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.bson"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate.validator"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.hibernate.ejb.HibernatePersistence"</span> <span class="attr">level</span>=<span class="string">"OFF"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework.web"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework.security"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework.cache"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.thymeleaf"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.xnio"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.mangofactory.swagger"</span> <span class="attr">level</span>=<span class="string">"INFO"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"com.wordnik.swagger"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"sun.rmi.transport"</span> <span class="attr">level</span>=<span class="string">"WARN"</span>/&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"redis.clients.jedis"</span> <span class="attr">level</span>=<span class="string">"WARN"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework.data.redis"</span> <span class="attr">level</span>=<span class="string">"WARN"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">logger</span> <span class="attr">name</span>=<span class="string">"org.springframework.data.mongodb"</span> <span class="attr">level</span>=<span class="string">"INFO"</span>/&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">contextListener</span> <span class="attr">class</span>=<span class="string">"ch.qos.logback.classic.jul.LevelChangePropagator"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">resetJUL</span>&gt;</span>true<span class="tag">&lt;/<span class="name">resetJUL</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">contextListener</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">root</span> <span class="attr">level</span>=<span class="string">"$</span></span></span><span class="template-variable">&#123;logback.loglevel&#125;</span><span class="xml"><span class="tag"><span class="string">"</span>&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"ASYNC"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">        <span class="tag">&lt;<span class="name">appender-ref</span> <span class="attr">ref</span>=<span class="string">"CONSOLE"</span>/&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">root</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>效果</p>
<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">2016<span class="string">-12</span><span class="string">-30</span> 16:16:54,216 DEBUG [http-nio<span class="string">-9688</span>-exec<span class="string">-1</span>] SqlSessionUtils: Creating a new SqlSession</span><br><span class="line">2016<span class="string">-12</span><span class="string">-30</span> 16:16:54,225 DEBUG [http-nio<span class="string">-9688</span>-exec<span class="string">-1</span>] SqlSessionUtils: SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c3e793d] was not registered for synchronization because synchronization is not active</span><br><span class="line">2016<span class="string">-12</span><span class="string">-30</span> 16:16:54,356 INFO  [http-nio<span class="string">-9688</span>-exec<span class="string">-1</span>] DruidDataSource: &#123;dataSource<span class="string">-1</span>&#125; inited</span><br><span class="line">2016<span class="string">-12</span><span class="string">-30</span> 16:16:54,621 DEBUG [http-nio<span class="string">-9688</span>-exec<span class="string">-1</span>] SpringManagedTransaction: JDBC Connection [com.mysql.jdbc.JDBC4Connection@20dc4786] will not be managed by Spring</span><br><span class="line">2016<span class="string">-12</span><span class="string">-30</span> 16:16:54,629 DEBUG [http-nio<span class="string">-9688</span>-exec<span class="string">-1</span>] findAuthor: ==&gt;  Preparing: select id, real_name, nick_name from t_author where id = ? </span><br><span class="line">2016<span class="string">-12</span><span class="string">-30</span> 16:16:54,672 DEBUG [http-nio<span class="string">-9688</span>-exec<span class="string">-1</span>] findAuthor: ==&gt; Parameters: 1(Long)</span><br><span class="line">2016<span class="string">-12</span><span class="string">-30</span> 16:16:54,708 DEBUG [http-nio<span class="string">-9688</span>-exec<span class="string">-1</span>] findAuthor: &lt;==      Total: 1</span><br><span class="line">2016<span class="string">-12</span><span class="string">-30</span> 16:16:54,710 DEBUG [http-nio<span class="string">-9688</span>-exec<span class="string">-1</span>] SqlSessionUtils: Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7c3e793d]</span><br></pre></td></tr></table></figure>
<hr>
<p>相关链接 </p>
<ol>
<li><a href="http://blog.didispace.com/springbootlog/" target="_blank" rel="noopener">spring boot日志管理</a></li>
</ol>
]]></content>
      
        <categories>
            
            <category> 后端开发 </category>
            
            <category> java </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Spring boot </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Scroll分析]]></title>
      <url>http://mzeht.com/2016/10/12/Android%20Scroll%E5%88%86%E6%9E%90/</url>
      <content type="html"><![CDATA[<h1 id="滑动效果的产生"><a href="#滑动效果的产生" class="headerlink" title="滑动效果的产生"></a>滑动效果的产生</h1><p>滑动的本质是移动View，通过不断改变View的坐标实现，与动画的原理类似，不过既然是滑动，就需要监听各种点击，触摸事件</p>
<a id="more"></a>
<h2 id="Android坐标系"><a href="#Android坐标系" class="headerlink" title="Android坐标系"></a>Android坐标系</h2><p>Android坐标系以屏幕左上角为原点，如图<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-22/68901668.jpg" alt></p>
<h2 id="视图坐标系"><a href="#视图坐标系" class="headerlink" title="视图坐标系"></a>视图坐标系</h2><p>子视图以父视图左上角为坐标原点，如图<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-23/13206722.jpg" alt><br>触控事件中，通过getX(),getY()获得的坐标就是视图中的坐标系</p>
<h2 id="触控事件"><a href="#触控事件" class="headerlink" title="触控事件"></a>触控事件</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单点触摸按下动作</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_DOWN             = <span class="number">0</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//单点触摸离开动作</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_UP               = <span class="number">1</span>;</span><br><span class="line">   </span><br><span class="line">  <span class="comment">//触摸点移动动作</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_MOVE             = <span class="number">2</span>;</span><br><span class="line">   </span><br><span class="line">  <span class="comment">//触摸动作取消</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_CANCEL           = <span class="number">3</span>;</span><br><span class="line">   </span><br><span class="line">  <span class="comment">//触摸动作超出边界</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_OUTSIDE          = <span class="number">4</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">//多点触摸按下动作</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_POINTER_DOWN     = <span class="number">5</span>;</span><br><span class="line">   </span><br><span class="line">   <span class="comment">//多点离开动作</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_POINTER_UP       = <span class="number">6</span>;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_HOVER_MOVE       = <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line">   </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_SCROLL           = <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_HOVER_ENTER      = <span class="number">9</span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_HOVER_EXIT       = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_BUTTON_PRESS   = <span class="number">11</span>;</span><br><span class="line"></span><br><span class="line">  </span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ACTION_BUTTON_RELEASE  = <span class="number">12</span>;</span><br></pre></td></tr></table></figure>
<p>一般在View的onTouchEvent方法中对event.getAction()进行筛选控制，（不涉及多点触控的情况下）</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@Override</span><br><span class="line"><span class="function"><span class="keyword">public</span> boolean <span class="title">onTouchEvent</span>(<span class="params">MotionEvent <span class="keyword">event</span></span>)</span> &#123;</span><br><span class="line">    <span class="keyword">int</span> x = (<span class="keyword">int</span>) <span class="keyword">event</span>.getX();</span><br><span class="line">    <span class="keyword">int</span> y = (<span class="keyword">int</span>) <span class="keyword">event</span>.getY();</span><br><span class="line">    <span class="keyword">switch</span> (<span class="keyword">event</span>.getAction()) &#123;</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">            lastX = (<span class="keyword">int</span>) <span class="keyword">event</span>.getX();</span><br><span class="line">            lastY = (<span class="keyword">int</span>) <span class="keyword">event</span>.getY();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">            <span class="keyword">int</span> offsetX = x - lastX;</span><br><span class="line">            <span class="keyword">int</span> offsetY = y - lastY;</span><br><span class="line">            ((View) getParent()).scrollBy(-offsetX, -offsetY);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">            <span class="comment">// 手指离开时，执行滑动过程</span></span><br><span class="line">            View viewGroup = ((View) getParent());</span><br><span class="line">            mScroller.startScroll(</span><br><span class="line">                    viewGroup.getScrollX(),</span><br><span class="line">                    viewGroup.getScrollY(),</span><br><span class="line">                    -viewGroup.getScrollX(),</span><br><span class="line">                    -viewGroup.getScrollY());</span><br><span class="line">            invalidate();</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>系统提供了很多获取坐标值，相对距离的坐标值的方法，如图<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-23/82371833.jpg" alt></p>
<p>大概分为两类：</p>
<hr>
<p>View提供的获取坐标的方法<br>getTop(): 获取到View自身顶边到其父布局顶部的距离<br>getLeft() : 获取到View自身左边到其父布局左边的距离<br>getRight():<br>getBottom();</p>
<hr>
<p>MotionEvent提供的方法<br>getX():    获取点击事件距离控件左边的距离，即视图坐标<br>getY():获取点击事件距离控件顶部的距离，即视图坐标<br>getRawX():获取点击事件距离整个屏幕左边的距离，即绝对坐标<br>getRawY():….</p>
<h1 id="实现滑动的七种方法"><a href="#实现滑动的七种方法" class="headerlink" title="实现滑动的七种方法"></a>实现滑动的七种方法</h1><h2 id="layout方法"><a href="#layout方法" class="headerlink" title="layout方法"></a>layout方法</h2>]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> AndroidHero </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Scroll </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac下的整套翻墙方案]]></title>
      <url>http://mzeht.com/2016/10/12/12.01mac%E4%B8%8B%E7%9A%84%E7%BF%BB%E5%A2%99%E6%96%B9%E6%A1%88/</url>
      <content type="html"><![CDATA[<p>最近brew升级网络速度很慢，加上Macos系统版本的变化，升级的变化也较大，（权限变化，需要用到brew的建议尽快升级）执行brew update老半天还失败，于是寻找命令行翻墙的解决方法，期间尝试了proxychains，效果不好，<code>我和同学os一个版本的，他可以，我的不行</code>，于是找别的解决方法</p>
<a id="more"></a>
<h1 id="基本准备"><a href="#基本准备" class="headerlink" title="基本准备"></a>基本准备</h1><p>可用的shawdowsocks账号，图省事儿，我自己用的是付费的，我的推荐链接<a href="https://portal.shadowsocks.com/clientarea.php?action=products" target="_blank" rel="noopener">点击这里</a>，这样可以奖励我几块钱，<code>但是没什么用，我又不会去真的取出来。。。</code><br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/60755449-file_1482665290388_14ddb.png" alt><br>点击绿色按钮，就会看到给你的代理信息</p>
<h1 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h1><p>上面网址下载资源有ss的mac客户端，但是不能开启http代理，功能不够强大，这里我们使用<code>Shadowsocks-NG</code>客户端，是它的增强版，<br><a href="https://github.com/shadowsocks/ShadowsocksX-NG" target="_blank" rel="noopener">项目github地址</a><br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/70231903-file_1482665629085_119e8.png" alt><br>可以看到完全满足较新Mac操作系统的要求，下载之后安装</p>
<h1 id="设置软件"><a href="#设置软件" class="headerlink" title="设置软件"></a>设置软件</h1><p>安装好的软件上有扫描屏幕上二维码的功能，逐一点开网站的代理二维码信息，完成导入<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/61623448-file_1482665836110_12398.png" alt></p>
<blockquote>
<p>可以看到，相比于一般的ss客户端，此版本代理端口有变化，默认1086</p>
</blockquote>
<p>#浏览器端配置<br>google浏览器配合插件SwitchyOmega<br>插件设置代理协议，地址，端口，以及不代理本地的常用localhost</p>
<blockquote>
<p>注意端口和ss客户端保持一致</p>
</blockquote>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/83024472-file_1482666059530_14152.png" alt></p>
<p>日常使用选择模式 auto switch<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-12-25/64770784-file_1482666144537_5bdf.png" alt></p>
<p>#命令行配置<br>由于此客户端配置了http代理，所以我们在命令行中使用也很方便</p>
<p>配置一个别名方便启动</p>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~<span class="string">/.bash_profile</span></span><br></pre></td></tr></table></figure>
<p>添加</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Custom Add not System</span></span><br><span class="line">alias proxy-<span class="keyword">on</span>='<span class="keyword">export</span> http_proxy=<span class="number">127.0</span>.<span class="number">0.1</span>:<span class="number">1087</span>;<span class="keyword">export</span> https_proxy=$http_proxy'</span><br><span class="line">alias proxy-<span class="keyword">off</span>='<span class="keyword">unset</span> http_proxy;<span class="keyword">unset</span> https_proxy'</span><br></pre></td></tr></table></figure>
<p>这样在命令行中就可以通过proxy-on，proxy-off来对需要翻墙的操作提供代理</p>
<p>举个例子</p>
<figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">➜  ~ proxy-on</span><br><span class="line">➜  ~ brew install ffmpeg</span><br><span class="line">Updating Homebrew...</span><br><span class="line">==&gt; Auto-updated Homebrew!</span><br><span class="line">Updated <span class="number">1</span> tap (homebrew/core).</span><br><span class="line">==&gt; Updated Formulae</span><br><span class="line">proxychains-ng ✔           rmlint                     vnstat</span><br><span class="line">ranger                     ruby-install</span><br><span class="line"></span><br><span class="line">==&gt; Installing dependencies for ffmpeg: lame, x264, xvid</span><br><span class="line">==&gt; Installing ffmpeg dependency: lame</span><br><span class="line">==&gt; Downloading https:<span class="comment">//homebrew.bintray.com/bottles/lame-3.99.5.sierra.bottle.1</span></span><br><span class="line">######################################################################## <span class="number">100.0</span>%</span><br><span class="line">==&gt; Pouring lame<span class="number">-3.99</span><span class="number">.5</span>.sierra.bottle<span class="number">.1</span>.tar.gz</span><br><span class="line">🍺  /usr/local/Cellar/lame/<span class="number">3.99</span><span class="number">.5</span>: <span class="number">26</span> files, <span class="number">2</span>M</span><br><span class="line">==&gt; Installing ffmpeg dependency: x264</span><br><span class="line">==&gt; Downloading https:<span class="comment">//homebrew.bintray.com/bottles/x264-r2728.sierra.bottle.ta</span></span><br><span class="line">######################################################################## <span class="number">100.0</span>%</span><br><span class="line">==&gt; Pouring x264-r2728.sierra.bottle.tar.gz</span><br><span class="line">🍺  /usr/local/Cellar/x264/r2728: <span class="number">11</span> files, <span class="number">3.3</span>M</span><br><span class="line">==&gt; Installing ffmpeg dependency: xvid</span><br><span class="line">==&gt; Downloading https:<span class="comment">//homebrew.bintray.com/bottles/xvid-1.3.4.sierra.bottle.ta</span></span><br><span class="line">######################################################################## <span class="number">100.0</span>%</span><br><span class="line">==&gt; Pouring xvid<span class="number">-1.3</span><span class="number">.4</span>.sierra.bottle.tar.gz</span><br><span class="line">🍺  /usr/local/Cellar/xvid/<span class="number">1.3</span><span class="number">.4</span>: <span class="number">9</span> files, <span class="number">1.2</span>M</span><br><span class="line">==&gt; Installing ffmpeg</span><br><span class="line">==&gt; Downloading https:<span class="comment">//homebrew.bintray.com/bottles/ffmpeg-3.2.2.sierra.bottle.</span></span><br><span class="line">######################################################################## <span class="number">100.0</span>%</span><br><span class="line">==&gt; Pouring ffmpeg<span class="number">-3.2</span><span class="number">.2</span>.sierra.bottle.tar.gz</span><br><span class="line">🍺  /usr/local/Cellar/ffmpeg/<span class="number">3.2</span><span class="number">.2</span>: <span class="number">239</span> files, <span class="number">50.4</span>M</span><br><span class="line">➜  ~ youtube-dl https:<span class="comment">//www.youtube.com/watch\?v\=n98cGaLi6sQ</span></span><br><span class="line">[youtube] n98cGaLi6sQ: Downloading webpage</span><br><span class="line">[youtube] n98cGaLi6sQ: Downloading video info webpage</span><br><span class="line">[youtube] n98cGaLi6sQ: Extracting video information</span><br><span class="line">[youtube] n98cGaLi6sQ: Downloading MPD manifest</span><br><span class="line">[dashsegments] Total fragments: <span class="number">55</span></span><br><span class="line">[download] Destination: 【耳機時代】<span class="number">3</span>D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.f136.mp4</span><br><span class="line">[download] <span class="number">100</span>% <span class="keyword">of</span> <span class="number">29.54</span>MiB <span class="keyword">in</span> <span class="number">03</span>:<span class="number">03</span></span><br><span class="line">[dashsegments] Total fragments: <span class="number">30</span></span><br><span class="line">[download] Destination: 【耳機時代】<span class="number">3</span>D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.f140.m4a</span><br><span class="line">[download] <span class="number">100</span>% <span class="keyword">of</span> <span class="number">4.32</span>MiB <span class="keyword">in</span> <span class="number">01</span>:<span class="number">12</span></span><br><span class="line">[ffmpeg] Merging formats into <span class="string">"【耳機時代】3D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.mp4"</span></span><br><span class="line">Deleting original file 【耳機時代】<span class="number">3</span>D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.f136.mp4 (pass -k to keep)</span><br><span class="line">Deleting original file 【耳機時代】<span class="number">3</span>D環音「STYX HELIX」MYTH&amp;ROID 戴上耳機 進入不一樣的音樂世界！-n98cGaLi6sQ.f140.m4a (pass -k to keep)</span><br></pre></td></tr></table></figure>
<p>使用代理，更新brew，安装ffmpeg，给youtube—dl添加代理 从youtube上下载了一个mv</p>
<hr>
<p>相关链接：</p>
<ol>
<li><a href="http://www.tuicool.com/articles/zuQziir" target="_blank" rel="noopener">http://www.tuicool.com/articles/zuQziir</a></li>
<li><a href="https://portal.shadowsocks.com/clientarea.php?action=products" target="_blank" rel="noopener">https://portal.shadowsocks.com/clientarea.php?action=products</a></li>
<li><a href="https://github.com/shadowsocks/ShadowsocksX-NG" target="_blank" rel="noopener">https://github.com/shadowsocks/ShadowsocksX-NG</a></li>
<li><a href="https://aiguge.xyz/shadowsocksx-ng/" target="_blank" rel="noopener">https://aiguge.xyz/shadowsocksx-ng/</a></li>
<li>chrome-extension://padekgcemlokbadohgkifijomclgjgif/options.html#/profile/proxy</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mac </tag>
            
            <tag> 翻墙 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ListView使用技巧]]></title>
      <url>http://mzeht.com/2016/10/10/ListView%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/</url>
      <content type="html"><![CDATA[<p>本来想跳过的，看了下书，实在是太熟悉了，待办，先占个坑<br><a id="more"></a></p>
<h1 id="常用优化技巧"><a href="#常用优化技巧" class="headerlink" title="常用优化技巧"></a>常用优化技巧</h1><h2 id="使用ViewHolder"><a href="#使用ViewHolder" class="headerlink" title="使用ViewHolder"></a>使用ViewHolder</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NotifyAdapter</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; mData;</span><br><span class="line">    <span class="keyword">private</span> LayoutInflater mInflater;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NotifyAdapter</span><span class="params">(Context context, List&lt;String&gt; data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mData = data;</span><br><span class="line">        mInflater = LayoutInflater.from(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> mData.<span class="title">size</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Object <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> mData.<span class="title">get</span><span class="params">(position)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">long</span> <span class="title">getItemId</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line">        ViewHolder holder = <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 判断是否缓存</span></span><br><span class="line">        <span class="keyword">if</span> (convertView == <span class="keyword">null</span>) &#123;</span><br><span class="line">            holder = <span class="keyword">new</span> ViewHolder();</span><br><span class="line">            <span class="comment">// 通过LayoutInflater实例化布局</span></span><br><span class="line">            convertView = mInflater.inflate(R.layout.notify_item, <span class="keyword">null</span>);</span><br><span class="line">            holder.img = (ImageView) convertView.findViewById(R.id.imageView);</span><br><span class="line">            holder.title = (TextView) convertView.findViewById(R.id.textView);</span><br><span class="line">            convertView.setTag(holder);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 通过tag找到缓存的布局</span></span><br><span class="line">            holder = (ViewHolder) convertView.getTag();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 设置布局中控件要显示的视图</span></span><br><span class="line">        holder.img.setBackgroundResource(R.mipmap.ic_launcher);</span><br><span class="line">        holder.title.setText(mData.get(position));</span><br><span class="line">        <span class="keyword">return</span> convertView;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> ImageView img;</span><br><span class="line">        <span class="keyword">public</span> TextView title;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="UI设置"><a href="#UI设置" class="headerlink" title="UI设置"></a>UI设置</h2><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//分割线</span></span><br><span class="line"><span class="symbol">android:</span>divider=<span class="string">"@android:color/darker_gray"</span></span><br><span class="line"><span class="symbol">android:</span>dividerHeight=<span class="string">"10dp"</span></span><br><span class="line"><span class="comment">//设置为透明</span></span><br><span class="line"><span class="symbol">android:</span>divider=<span class="string">"@null"</span></span><br><span class="line"><span class="comment">//取消滚动条</span></span><br><span class="line"><span class="symbol">android:</span>scrollbars=<span class="string">"none"</span></span><br><span class="line">取消item点击效果</span><br><span class="line"><span class="symbol">android:</span>listSelector=<span class="string">"@android:color/transparent"</span></span><br></pre></td></tr></table></figure>
<h2 id="设置需要显示的Item"><a href="#设置需要显示的Item" class="headerlink" title="设置需要显示的Item"></a>设置需要显示的Item</h2><hr>
<p>第几项置顶显示<br>ListView.setSelection(n);<br>//特殊用法,显示出数据的最后一项<br> mListView.setSelection(mData.size() - 1);<br> <a href="http://blog.csdn.net/szyangzhen/article/details/47972509" target="_blank" rel="noopener">参考</a></p>
<hr>
<p>平滑移动</p>
<figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//        mListView.smoothScrollBy(1000,1000);</span></span><br><span class="line"><span class="comment">//        mListView.smoothScrollByOffset(15);</span></span><br><span class="line"><span class="comment">//        mListView.smoothScrollToPosition(15);</span></span><br></pre></td></tr></table></figure>
<h2 id="动态修改数据"><a href="#动态修改数据" class="headerlink" title="动态修改数据"></a>动态修改数据</h2><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">NotifyTest</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="type">List</span>&lt;<span class="type">String</span>&gt; mData;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">ListView</span> mListView;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">NotifyAdapter</span> mAdapter;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.notify);</span><br><span class="line">        mData = <span class="keyword">new</span> <span class="type">ArrayList</span>&lt;<span class="type">String</span>&gt;();</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++) &#123;</span><br><span class="line">            mData.add(<span class="string">""</span> + i);</span><br><span class="line">        &#125;</span><br><span class="line">        mListView = (<span class="type">ListView</span>) findViewById(<span class="type">R</span>.id.listView);</span><br><span class="line">        mAdapter = <span class="keyword">new</span> <span class="type">NotifyAdapter</span>(<span class="keyword">this</span>, mData);</span><br><span class="line">        mListView.setAdapter(mAdapter);</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; mListView.getChildCount(); i++) &#123;</span><br><span class="line">            <span class="type">View</span> view = mListView.getChildAt(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void btnAdd(<span class="type">View</span> view) &#123;</span><br><span class="line">        mData.add(<span class="string">"new"</span>);</span><br><span class="line">        mAdapter.notifyDataSetChanged();</span><br><span class="line">        mListView.setSelection(mData.size() - <span class="number">1</span>);</span><br><span class="line"><span class="comment">//        mListView.smoothScrollBy(1000,1000);</span></span><br><span class="line"><span class="comment">//        mListView.smoothScrollByOffset(15);</span></span><br><span class="line"><span class="comment">//        mListView.smoothScrollToPosition(15);</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>传入的List对象要一致</strong></p>
<h2 id="遍历所有Item"><a href="#遍历所有Item" class="headerlink" title="遍历所有Item"></a>遍历所有Item</h2><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (int <span class="built_in">i</span> = <span class="number">0</span>; <span class="built_in">i</span> &lt; mListView.getChildCount(); <span class="built_in">i</span>++) &#123;</span><br><span class="line">            View view = mListView.getChildAt(<span class="built_in">i</span>);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<h2 id="处理空ListView"><a href="#处理空ListView" class="headerlink" title="处理空ListView"></a>处理空ListView</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">listView</span><span class="selector-class">.setEmptyView</span>(<span class="selector-tag">findViewById</span>(<span class="selector-tag">R</span><span class="selector-class">.id</span><span class="selector-class">.empty_view</span>))</span><br></pre></td></tr></table></figure>
<h2 id="ListView滑动监听"><a href="#ListView滑动监听" class="headerlink" title="ListView滑动监听"></a>ListView滑动监听</h2><h3 id="OnTouchListener"><a href="#OnTouchListener" class="headerlink" title="OnTouchListener"></a>OnTouchListener</h3><p>有很多事件类型</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">mListView.setOnTouchListener(<span class="keyword">new</span> View.OnTouchListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">boolean</span> onTouch(View v, MotionEvent event) &#123;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">switch</span> (event.getAction()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> MotionEvent.<span class="string">ACTION_DOWN:</span></span><br><span class="line">                        <span class="comment">//触摸时操作</span></span><br><span class="line"></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">case</span> MotionEvent.<span class="string">ACTION_MOVE:</span></span><br><span class="line">                        <span class="comment">//移动时操作</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">                    <span class="keyword">case</span> MotionEvent.<span class="string">ACTION_UP:</span></span><br><span class="line">                        <span class="comment">//移动时操作</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<h3 id="OnScrollListener"><a href="#OnScrollListener" class="headerlink" title="OnScrollListener"></a>OnScrollListener</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">mListView.setOnScrollListener(<span class="keyword">new</span> AbsListView.OnScrollListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="keyword">void</span> onScrollStateChanged(AbsListView view, <span class="keyword">int</span> scrollState) &#123;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">switch</span> (scrollState)&#123;</span><br><span class="line">                   <span class="keyword">case</span> <span class="string">SCROLL_STATE_IDLE:</span></span><br><span class="line">                       <span class="comment">//滑动停止时</span></span><br><span class="line">                       Log.d(<span class="string">"test"</span>,<span class="string">"SCROLL_STATE_IDLE"</span>);</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="string">SCROLL_STATE_TOUCH_SCROLL:</span></span><br><span class="line">                       <span class="comment">// 正在滚动</span></span><br><span class="line">                       Log.d(<span class="string">"test"</span>,<span class="string">"SCROLL_STATE_TOUCH_SCROLL"</span>);</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">                   <span class="keyword">case</span> <span class="string">SCROLL_STATE_FLING:</span></span><br><span class="line">                       <span class="comment">//手指抛动时，即手指用力滑动</span></span><br><span class="line">                       Log.d(<span class="string">"test"</span>,<span class="string">"SCROLL_STATE_FLING"</span>);</span><br><span class="line">                       <span class="keyword">break</span>;</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="comment">/**</span></span><br><span class="line"><span class="comment">            *</span></span><br><span class="line"><span class="comment">            * <span class="doctag">@param</span> view</span></span><br><span class="line"><span class="comment">            * <span class="doctag">@param</span> firstVisibleItem 当前能看见的第一个item的id（从0开始），包括没有完整显示的item</span></span><br><span class="line"><span class="comment">            * <span class="doctag">@param</span> visibleItemCount 当前能看见的item总数</span></span><br><span class="line"><span class="comment">            * <span class="doctag">@param</span> totalItemCount 整个listview的item总数</span></span><br><span class="line"><span class="comment">            */</span></span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="keyword">void</span> onScroll(AbsListView view, <span class="keyword">int</span> firstVisibleItem, <span class="keyword">int</span> visibleItemCount, <span class="keyword">int</span> totalItemCount) &#123;</span><br><span class="line">                   <span class="comment">//滚动时一直调用</span></span><br><span class="line">               Log.d(<span class="string">"test"</span>,<span class="string">"onScroll"</span>);</span><br><span class="line"></span><br><span class="line">               <span class="comment">/**</span></span><br><span class="line"><span class="comment">                * 用法1 当前可视的第一个item的id加上当前可视的item数量等于listview总数的时候，可以判断滚动到了最后一行</span></span><br><span class="line"><span class="comment">                *</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">               <span class="keyword">if</span> (firstVisibleItem+visibleItemCount==totalItemCount&amp;&amp;totalItemCount&gt;<span class="number">0</span>)&#123;</span><br><span class="line">                   <span class="comment">//滚动到了最后一行</span></span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               <span class="comment">/**</span></span><br><span class="line"><span class="comment">                * 判断滚动的方向</span></span><br><span class="line"><span class="comment">                */</span></span><br><span class="line">               Log.d(<span class="string">"判断前"</span>,firstVisibleItem+<span class="string">"/"</span>+lastVisableItemPostion);</span><br><span class="line">               <span class="keyword">if</span> (firstVisibleItem&gt;lastVisableItemPostion)&#123;</span><br><span class="line">                   <span class="comment">//上滑</span></span><br><span class="line">                   Log.d(<span class="string">"test"</span>, <span class="string">"上滑"</span>);</span><br><span class="line">               &#125;<span class="keyword">else</span> <span class="keyword">if</span> (firstVisibleItem&lt;lastVisableItemPostion)&#123;</span><br><span class="line">                   <span class="comment">//下滑</span></span><br><span class="line">                   Log.d(<span class="string">"test"</span>, <span class="string">"下滑"</span>);</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               lastVisableItemPostion=firstVisibleItem;</span><br><span class="line">               Log.d(<span class="string">"判断后"</span>,firstVisibleItem+<span class="string">"/"</span>+lastVisableItemPostion);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>
<h3 id="其他方法"><a href="#其他方法" class="headerlink" title="其他方法"></a>其他方法</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">       * 获得可见的item的位置</span></span><br><span class="line"><span class="comment">       */</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-tag">mListView</span><span class="selector-class">.getFirstVisiblePosition</span>();</span><br><span class="line">      <span class="selector-tag">mListView</span><span class="selector-class">.getLastVisiblePosition</span>();</span><br></pre></td></tr></table></figure>
<h2 id="ListView常用拓展"><a href="#ListView常用拓展" class="headerlink" title="ListView常用拓展"></a>ListView常用拓展</h2><hr>
<h3 id="让ListView具有弹性"><a href="#让ListView具有弹性" class="headerlink" title="让ListView具有弹性"></a>让ListView具有弹性</h3><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FlexibleListView</span> <span class="keyword">extends</span> <span class="title">ListView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> mMaxOverDistance = <span class="number">50</span>;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> FlexibleListView(Context context, AttributeSet attrs,</span><br><span class="line">                            <span class="keyword">int</span> defStyleAttr) &#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FlexibleListView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FlexibleListView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        DisplayMetrics metrics = mContext.getResources().getDisplayMetrics();</span><br><span class="line">        <span class="keyword">float</span> density = metrics.density;</span><br><span class="line">        mMaxOverDistance = (<span class="keyword">int</span>) (density * mMaxOverDistance);</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	</span><br><span class="line">	 <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 滑动到边缘时调用的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> deltaX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> deltaY</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scrollX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scrollY</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scrollRangeX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scrollRangeY</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxOverScrollX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> maxOverScrollY</span></span><br><span class="line"><span class="comment">     * Number of pixels to overscroll by in either direction</span></span><br><span class="line"><span class="comment">     *          along the Y axis.</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> isTouchEvent</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">boolean</span> overScrollBy(<span class="keyword">int</span> deltaX, <span class="keyword">int</span> deltaY,</span><br><span class="line">                                   <span class="keyword">int</span> scrollX, <span class="keyword">int</span> scrollY,</span><br><span class="line">                                   <span class="keyword">int</span> scrollRangeX, <span class="keyword">int</span> scrollRangeY,</span><br><span class="line">                                   <span class="keyword">int</span> maxOverScrollX, <span class="keyword">int</span> maxOverScrollY,</span><br><span class="line">                                   <span class="keyword">boolean</span> isTouchEvent) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.overScrollBy(deltaX, deltaY,</span><br><span class="line">                scrollX, scrollY,</span><br><span class="line">                scrollRangeX, scrollRangeY,</span><br><span class="line">                maxOverScrollX, mMaxOverDistance,</span><br><span class="line">                isTouchEvent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="自动显示，隐藏的ListView"><a href="#自动显示，隐藏的ListView" class="headerlink" title="自动显示，隐藏的ListView"></a>自动显示，隐藏的ListView</h3><p>初始化操作</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">/获取系统认为的最低滑动距离</span><br><span class="line">        mTouchSlop = ViewConfiguration.<span class="keyword">get</span>(<span class="built_in">this</span>).getScaledTouchSlop();</span><br><span class="line">        mToolbar = (Toolbar) findViewById(R.id.toolbar);</span><br><span class="line">        mListView = (ListView) findViewById(R.id.listview);</span><br><span class="line">        <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; mStr.length; i++) &#123;</span><br><span class="line">            mStr[i] = <span class="string">"Item "</span> + i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//Listview添加头部View</span></span><br><span class="line">        View header = <span class="keyword">new</span> <span class="type">View</span>(<span class="built_in">this</span>);</span><br><span class="line">        header.setLayoutParams(<span class="keyword">new</span> <span class="type">AbsListView</span>.LayoutParams(</span><br><span class="line">                AbsListView.LayoutParams.MATCH_PARENT,</span><br><span class="line">                (int) getResources().getDimension(</span><br><span class="line">                        R.dimen.abc_action_bar_default_height_material)));</span><br><span class="line">        mListView.addHeaderView(header);</span><br><span class="line">        mListView.setAdapter(<span class="keyword">new</span> <span class="type">ArrayAdapter</span>&lt;<span class="keyword">String</span>&gt;(</span><br><span class="line">                ScrollHideListView.<span class="built_in">this</span>,</span><br><span class="line">                android.R.layout.simple_expandable_list_item_1,</span><br><span class="line">                mStr));</span><br><span class="line">        mListView.setOnTouchListener(myTouchListener);</span><br></pre></td></tr></table></figure>
<p>设置监听器</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">View.OnTouchListener myTouchListener = <span class="keyword">new</span> View.OnTouchListener() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="function"><span class="keyword">public</span> boolean <span class="title">onTouch</span>(<span class="params">View v, MotionEvent <span class="keyword">event</span></span>)</span> &#123;</span><br><span class="line">            <span class="keyword">switch</span> (<span class="keyword">event</span>.getAction()) &#123;</span><br><span class="line">                <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                    mFirstY = <span class="keyword">event</span>.getY();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">                    mCurrentY = <span class="keyword">event</span>.getY();</span><br><span class="line">                    <span class="keyword">if</span> (mCurrentY - mFirstY &gt; mTouchSlop) &#123;</span><br><span class="line">                        direction = <span class="number">0</span>;<span class="comment">// down</span></span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mFirstY - mCurrentY &gt; mTouchSlop) &#123;</span><br><span class="line">                        direction = <span class="number">1</span>;<span class="comment">// up</span></span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> (direction == <span class="number">1</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (mShow) &#123;</span><br><span class="line">                            toolbarAnim(<span class="number">1</span>);<span class="comment">//hide</span></span><br><span class="line">                            mShow = !mShow;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (direction == <span class="number">0</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (!mShow) &#123;</span><br><span class="line">                            toolbarAnim(<span class="number">0</span>);<span class="comment">//show</span></span><br><span class="line">                            mShow = !mShow;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> MotionEvent.ACTION_UP:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<p>动画控制</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">private</span> ObjectAnimator mAnimator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">toolbarAnim</span><span class="params">(<span class="keyword">int</span> flag)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mAnimator != <span class="keyword">null</span> &amp;&amp; mAnimator.isRunning()) &#123;</span><br><span class="line">            mAnimator.cancel();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (flag == <span class="number">0</span>) &#123;</span><br><span class="line">            mAnimator = ObjectAnimator.ofFloat(mToolbar,</span><br><span class="line">                    <span class="string">"translationY"</span>, mToolbar.getTranslationY(), <span class="number">0</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mAnimator = ObjectAnimator.ofFloat(mToolbar,</span><br><span class="line">                    <span class="string">"translationY"</span>, mToolbar.getTranslationY(),</span><br><span class="line">                    -mToolbar.getHeight());</span><br><span class="line">        &#125;</span><br><span class="line">        mAnimator.start();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h3 id="动态改变Listview布局"><a href="#动态改变Listview布局" class="headerlink" title="动态改变Listview布局"></a>动态改变Listview布局</h3><p>这里以点击某一项listview为例子</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FocusListViewAdapter</span> <span class="keyword">extends</span> <span class="title">BaseAdapter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; mData;</span><br><span class="line">    <span class="keyword">private</span> Context mContext;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mCurrentItem = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">FocusListViewAdapter</span><span class="params">(Context context, List&lt;String&gt; data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mContext = context;</span><br><span class="line">        <span class="keyword">this</span>.mData = data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">getCount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> mData.<span class="title">size</span><span class="params">()</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function">Object <span class="title">getItem</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">return</span> mData.<span class="title">get</span><span class="params">(position)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">long</span> <span class="title">getItemId</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> position;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> position</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> convertView</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> parent</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     * 绘制View的方法中对记录的position进行区别处理</span></span><br><span class="line"><span class="comment">     * 初次绘制时调用</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function">View <span class="title">getView</span><span class="params">(<span class="keyword">int</span> position, View convertView, ViewGroup parent)</span> </span>&#123;</span><br><span class="line">        LinearLayout layout = <span class="keyword">new</span> LinearLayout(mContext);</span><br><span class="line">        layout.setOrientation(LinearLayout.VERTICAL);</span><br><span class="line">        <span class="keyword">if</span> (mCurrentItem == position) &#123;</span><br><span class="line">            layout.addView(addFocusView(position));</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            layout.addView(addNormalView(position));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> layout;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//暴露动态改变记录position的方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">setCurrentItem</span><span class="params">(<span class="keyword">int</span> currentItem)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mCurrentItem = currentItem;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//加载布局1</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function">View <span class="title">addFocusView</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        ImageView iv = <span class="keyword">new</span> ImageView(mContext);</span><br><span class="line">        iv.setImageResource(R.mipmap.ic_launcher);</span><br><span class="line">        <span class="keyword">return</span> iv;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//加载布局2</span></span><br><span class="line">    <span class="keyword">private</span> <span class="function">View <span class="title">addNormalView</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        LinearLayout layout = <span class="keyword">new</span> LinearLayout(mContext);</span><br><span class="line">        layout.setOrientation(LinearLayout.HORIZONTAL);</span><br><span class="line">        ImageView iv = <span class="keyword">new</span> ImageView(mContext);</span><br><span class="line">        iv.setImageResource(R.drawable.in_icon);</span><br><span class="line">        layout.addView(iv, <span class="keyword">new</span> LinearLayout.LayoutParams(</span><br><span class="line">                LinearLayout.LayoutParams.WRAP_CONTENT,</span><br><span class="line">                LinearLayout.LayoutParams.WRAP_CONTENT));</span><br><span class="line">        TextView tv = <span class="keyword">new</span> TextView(mContext);</span><br><span class="line">        tv.setText(mData.get(i));</span><br><span class="line">        layout.addView(tv, <span class="keyword">new</span> LinearLayout.LayoutParams(</span><br><span class="line">                LinearLayout.LayoutParams.WRAP_CONTENT,</span><br><span class="line">                LinearLayout.LayoutParams.WRAP_CONTENT));</span><br><span class="line">        layout.setGravity(Gravity.CENTER);</span><br><span class="line">        <span class="keyword">return</span> layout;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>control</p>
<figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">FocusListViewTest</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> void onCreate(<span class="type">Bundle</span> savedInstanceState) &#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(<span class="type">R</span>.layout.focus);</span><br><span class="line">        <span class="type">ListView</span> listView = (<span class="type">ListView</span>) findViewById(<span class="type">R</span>.id.focus_listView);</span><br><span class="line">        <span class="type">List</span>&lt;<span class="type">String</span>&gt; data = <span class="keyword">new</span> <span class="type">ArrayList</span>&lt;<span class="type">String</span>&gt;();</span><br><span class="line">        data.add(<span class="string">"I am item 1"</span>);</span><br><span class="line">        data.add(<span class="string">"I am item 2"</span>);</span><br><span class="line">        data.add(<span class="string">"I am item 3"</span>);</span><br><span class="line">        data.add(<span class="string">"I am item 4"</span>);</span><br><span class="line">        data.add(<span class="string">"I am item 5"</span>);</span><br><span class="line">        <span class="keyword">final</span> <span class="type">FocusListViewAdapter</span> adapter = <span class="keyword">new</span> <span class="type">FocusListViewAdapter</span>(<span class="keyword">this</span>, data);</span><br><span class="line">        listView.setAdapter(adapter);</span><br><span class="line">        listView.setOnItemClickListener(<span class="keyword">new</span> <span class="type">AdapterView</span>.<span class="type">OnItemClickListener</span>() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            public void onItemClick(<span class="type">AdapterView</span>&lt;?&gt; parent, <span class="type">View</span> view,</span><br><span class="line">                                    int position, long id) &#123;</span><br><span class="line">                adapter.setCurrentItem(position);</span><br><span class="line">                <span class="comment">/**</span></span><br><span class="line"><span class="comment">                 * listView 初次绘制某一项数据时调用geiview方法</span></span><br><span class="line"><span class="comment">                 * 之后需要notifyDataSetChanged才能重绘View</span></span><br><span class="line"><span class="comment">                 */</span></span><br><span class="line">                adapter.notifyDataSetChanged();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> AndroidHero </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> ListView </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android控件架构与自定义控件详解]]></title>
      <url>http://mzeht.com/2016/10/08/Android%E6%8E%A7%E4%BB%B6%E6%9E%B6%E6%9E%84%E4%B8%8E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%E8%AF%A6%E8%A7%A3/</url>
      <content type="html"><![CDATA[<p>#View的测量<br>Android帮助测量View的类–<code>MeasureSpec</code>类<br>MeasureSpec是一个32位的int值，高两位为测量的模式，低30位为测量的大小<br>使用位运算提高并优化效率</p>
<a id="more"></a>
<p>##测量的模式</p>
<ul>
<li><p><code>EXACTLY</code> 精确值模式<br>控件layout_width,layout_height属性指定为具体数值时，或者是match_parent属性时</p>
</li>
<li><p><code>AT_MOST</code> 最大值模式<br>控件layout_width,layout_height属性使用warp_content，控件的大小取不超过父级控件的最大值</p>
</li>
<li><p><code>UNSPECIFIED</code><br>不指定测量模式，可以任意大小，通常自定义View绘制时才用到</p>
</li>
</ul>
<p>##Demo</p>
<ul>
<li><p>View类默认的<code>onMeasure()</code>方法只支持EXACTLY模式，如果该View要支持warp_content属性<br>   就必须要重写onMeasure()方法 指定AT_MOST模式下warp_content时的大小</p>
  <figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">@Override</span></span><br><span class="line"><span class="keyword">protected</span> <span class="function"><span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<pre><code>进入`onMeasure`方法,看源码
可以发现最终调用



<figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setMeasuredDimension(<span class="name">getDefaultSize</span>(<span class="name">getSuggestedMinimumWidth</span>(), widthMeasureSpec),getDefaultSize(<span class="name">getSuggestedMinimumHeight</span>(), heightMeasureSpec))<span class="comment">;</span></span><br></pre></td></tr></table></figure>
</code></pre><ul>
<li><p>setMeasuredDimension(int measuredWidth, int measuredHeight)里面的参数相当于px单位   </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> widthMeasureSpec</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> heightMeasureSpec</span></span><br><span class="line"><span class="comment">     * View类默认的onMeasure()方法只支持EXACTLY模式，如果该View要支持warp_content属性</span></span><br><span class="line"><span class="comment">     * 就必须要重写onMeasure()方法 指定AT_MOSt模式下warp_content时的大小</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        setMeasuredDimension(measure(widthMeasureSpec), measure(heightMeasureSpec));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">measure</span><span class="params">(<span class="keyword">int</span> measureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> specMode = MeasureSpec.getMode(measureSpec);</span><br><span class="line">        <span class="keyword">int</span> specSize = MeasureSpec.getSize(measureSpec);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//精确值模式，参数直接使用</span></span><br><span class="line">        <span class="keyword">if</span> (specMode == MeasureSpec.EXACTLY) &#123;</span><br><span class="line">            result = specSize;</span><br><span class="line"></span><br><span class="line">            <span class="comment">//最大值模式，wrap_content时取不超过父级空间的最大值</span></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (specMode == MeasureSpec.AT_MOST) &#123;</span><br><span class="line">            result = <span class="number">200</span>;</span><br><span class="line">            result = Math.min(result, specSize);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 200PX</span></span><br><span class="line"><span class="comment">         * setMeasuredDimension(int measuredWidth, int measuredHeight)里面的参数相当于px单位</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        canvas.drawColor(Color.GRAY);</span><br><span class="line">        <span class="keyword">int</span> width = getWidth();</span><br><span class="line">        <span class="keyword">int</span> height = getHeight();</span><br><span class="line">        Log.d(<span class="string">"xys"</span>, <span class="string">"width : "</span> + width + <span class="string">" height : "</span> + height);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h1 id="ViewGroup的测量"><a href="#ViewGroup的测量" class="headerlink" title="ViewGroup的测量"></a>ViewGroup的测量</h1><p>ViewGroup大小为warp_content时，需要遍历子View，调用其Measure方法，获得所有子View的大小，以便确定自己的大小;<br>测量完毕后，将子View放到合适的位置，遍历使用子View的Layout方法，指定其显示的具体位置，从而决定其布局的位置；<br>自定义ViewGroup时，通常会重写onLayout()方法来控制子View显示位置的逻辑；<br>如果还要支持warp_content属性，必须重写onMeasure()方法，这点与View相同</p>
<h1 id="ViewGroup的绘制"><a href="#ViewGroup的绘制" class="headerlink" title="ViewGroup的绘制"></a>ViewGroup的绘制</h1><p>ViewGroup通常不需要绘制，如果没有指定ViewGroup的背景颜色，ViewGroup的onDarw()方法不会被调用；<br>ViewGroup会调用dispathchDarw()方法绘制子View，同样遍历子View，调用子View的绘制方法完成绘制；</p>
<h1 id="自定义View"><a href="#自定义View" class="headerlink" title="自定义View"></a>自定义View</h1><ul>
<li>通常重写onDarw方法来绘制View的显示内容；</li>
<li>使用warp_content属性，必须重写onMeasure方法</li>
<li>自定义attrs属性，可以设置新的配置属性</li>
</ul>
<h2 id="一些重要的回调方法"><a href="#一些重要的回调方法" class="headerlink" title="一些重要的回调方法"></a>一些重要的回调方法</h2><ul>
<li>onFinishInflate 从xml加载组件后</li>
<li>onSizeChanged 组件大小改变后</li>
<li>onMeasure 回调此方法进行测量</li>
<li>onLayout 回调此方法确定显示位置</li>
<li>onTouchEvent 触摸事件时回调</li>
</ul>
<p><a href="http://www.jianshu.com/p/744550c02cf1s" target="_blank" rel="noopener">自定义控件常用api</a></p>
<h2 id="自定义View的三种方法"><a href="#自定义View的三种方法" class="headerlink" title="自定义View的三种方法"></a>自定义View的三种方法</h2><ul>
<li>拓展现有控件</li>
<li>组合控件</li>
<li>重写View实现全新控件</li>
</ul>
<h3 id="拓展现有控件"><a href="#拓展现有控件" class="headerlink" title="拓展现有控件"></a>拓展现有控件</h3><p>拓展TextView</p>
<blockquote>
<p>Demo1</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTextView</span> <span class="keyword">extends</span> <span class="title">TextView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mPaint1,mPaint2;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyTextView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyTextView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyTextView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 绘制外层矩形</span></span><br><span class="line">        canvas.drawRect(</span><br><span class="line">                <span class="number">0</span>, <span class="number">0</span>,</span><br><span class="line">                getMeasuredWidth(),</span><br><span class="line">                getMeasuredHeight(),</span><br><span class="line">                mPaint1);</span><br><span class="line">        <span class="comment">// 绘制内层矩形</span></span><br><span class="line">        canvas.drawRect(</span><br><span class="line">                <span class="number">10</span>,</span><br><span class="line">                <span class="number">10</span>,</span><br><span class="line">                getMeasuredWidth() - <span class="number">10</span>,</span><br><span class="line">                getMeasuredHeight() - <span class="number">10</span>,</span><br><span class="line">                mPaint2);</span><br><span class="line">        canvas.save();</span><br><span class="line">        <span class="comment">// 绘制文字前平移10像素</span></span><br><span class="line">        canvas.translate(<span class="number">10</span>, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 父类完成的方法，即绘制文本</span></span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        canvas.restore();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span>  <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span></span>&#123;</span><br><span class="line">        mPaint1=<span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint1.setColor(getResources().getColor(android.R.color.holo_blue_light));</span><br><span class="line">        mPaint1.setStyle(Paint.Style.FILL);</span><br><span class="line">        mPaint2=<span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint2.setColor(Color.YELLOW);</span><br><span class="line">        mPaint2.setStyle(Paint.Style.FILL);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>xml<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span><span class="selector-class">.unit3</span><span class="selector-class">.view</span><span class="selector-class">.MyTextView</span> android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                                                 android:layout_height=<span class="string">"wrap_content"</span></span><br><span class="line">                                                 android:textSize=<span class="string">"20sp"</span></span><br><span class="line">                                                 android:text=<span class="string">"Android hero"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-9/63189918.jpg" alt></p>
<blockquote>
<p>Demo2</p>
</blockquote>
<p>文字添加线性变换效果</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ShineTextView</span> <span class="keyword">extends</span> <span class="title">TextView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> LinearGradient mLinearGradient;</span><br><span class="line">    <span class="keyword">private</span> Matrix mGradientMatrix;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mViewWidth = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mTranslate = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ShineTextView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ShineTextView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ShineTextView</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        <span class="keyword">if</span> (mViewWidth == <span class="number">0</span>) &#123;</span><br><span class="line">            mViewWidth = getMeasuredWidth();</span><br><span class="line">            <span class="keyword">if</span> (mViewWidth &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                mPaint = getPaint();</span><br><span class="line">                mLinearGradient = <span class="keyword">new</span> LinearGradient(</span><br><span class="line">                        <span class="number">0</span>,</span><br><span class="line">                        <span class="number">0</span>,</span><br><span class="line">                        mViewWidth,</span><br><span class="line">                        <span class="number">0</span>,</span><br><span class="line">                        <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;</span><br><span class="line">                                Color.BLUE, <span class="number">0xffffffff</span>,</span><br><span class="line">                                Color.BLUE&#125;,</span><br><span class="line">                        <span class="keyword">null</span>,</span><br><span class="line">                        Shader.TileMode.CLAMP);</span><br><span class="line">                mPaint.setShader(mLinearGradient);</span><br><span class="line">                mGradientMatrix = <span class="keyword">new</span> Matrix();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        <span class="keyword">if</span> (mGradientMatrix != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mTranslate += mViewWidth / <span class="number">5</span>;</span><br><span class="line">            <span class="keyword">if</span> (mTranslate &gt; <span class="number">2</span> * mViewWidth) &#123;</span><br><span class="line">                mTranslate = -mViewWidth;</span><br><span class="line">            &#125;</span><br><span class="line">            mGradientMatrix.setTranslate(mTranslate, <span class="number">0</span>);</span><br><span class="line">            mLinearGradient.setLocalMatrix(mGradientMatrix);</span><br><span class="line">            postInvalidateDelayed(<span class="number">100</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="复合控件"><a href="#复合控件" class="headerlink" title="复合控件"></a>复合控件</h3><ul>
<li>定义自定义属性</li>
</ul>
<p>新建或修改attrs.xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">declare-styleable</span> <span class="attr">name</span>=<span class="string">"TopBar"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"mtitle"</span> <span class="attr">format</span>=<span class="string">"string"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"mtitleTextSize"</span> <span class="attr">format</span>=<span class="string">"dimension"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"mtitleTextColor"</span> <span class="attr">format</span>=<span class="string">"color"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"mleftTextColor"</span> <span class="attr">format</span>=<span class="string">"color"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"mleftBackground"</span> <span class="attr">format</span>=<span class="string">"reference|color"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"mleftText"</span> <span class="attr">format</span>=<span class="string">"string"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"mrightTextColor"</span> <span class="attr">format</span>=<span class="string">"color"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"mrightBackground"</span> <span class="attr">format</span>=<span class="string">"reference|color"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">attr</span> <span class="attr">name</span>=<span class="string">"mrightText"</span> <span class="attr">format</span>=<span class="string">"string"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">declare-styleable</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><a href="http://www.cnblogs.com/jisheng/archive/2013/01/10/2854891.html" target="_blank" rel="noopener">关于format类型</a></p>
<ul>
<li>引入命名空间</li>
</ul>
<figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;RelativeLayout xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">                xmlns:<span class="literal">custom</span>=<span class="string">"http://schemas.android.com/apk/res-auto"</span></span><br><span class="line">                xmlns:tools=<span class="string">"http://schemas.android.com/tools"</span></span><br><span class="line">                android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">                android:layout_height=<span class="string">"match_parent"</span></span><br><span class="line">                android:padding=<span class="string">"5dp"</span></span><br><span class="line">                tools:context=<span class="string">".MainActivity"</span>&gt;</span><br><span class="line">    &lt;com.wpmac.androidhero.unit3.view.TopBar</span><br><span class="line">        android:id=<span class="string">"@+id/topBar"</span></span><br><span class="line">        android:layout_width=<span class="string">"wrap_content"</span></span><br><span class="line">        android:layout_height=<span class="string">"40dp"</span></span><br><span class="line">        <span class="literal">custom</span>:mleftBackground=<span class="string">"@drawable/blue_button"</span></span><br><span class="line">        <span class="literal">custom</span>:mleftText=<span class="string">"Back"</span></span><br><span class="line">        <span class="literal">custom</span>:mleftTextColor=<span class="string">"#FFFFFF"</span></span><br><span class="line">        <span class="literal">custom</span>:mrightBackground=<span class="string">"@drawable/blue_button"</span></span><br><span class="line">        <span class="literal">custom</span>:mrightText=<span class="string">"More"</span></span><br><span class="line">        <span class="literal">custom</span>:mrightTextColor=<span class="string">"#FFFFFF"</span></span><br><span class="line">        <span class="literal">custom</span>:mtitle=<span class="string">"自定义标题"</span></span><br><span class="line">        <span class="literal">custom</span>:mtitleTextColor=<span class="string">"#FFFFFF"</span></span><br><span class="line">        <span class="literal">custom</span>:mtitleTextSize=<span class="string">"10sp"</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/RelativeLayout&gt;</span><br></pre></td></tr></table></figure>
<ul>
<li>获得自定义的属性值</li>
</ul>
<p>注意 <code>ta.recycle()</code></p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过这个方法，将你在atts.xml中定义的declare-styleable</span></span><br><span class="line">        <span class="comment">// 的所有属性的值存储到TypedArray中</span></span><br><span class="line">        TypedArray <span class="keyword">ta</span> = context.obtainStyledAttributes(attrs,</span><br><span class="line">                R.styleable.TopBar);</span><br><span class="line">        <span class="comment">// 从TypedArray中取出对应的值来为要设置的属性赋值</span></span><br><span class="line">        mLeftTextColor = <span class="keyword">ta</span>.getColor(</span><br><span class="line">                R.styleable.TopBar_mleftTextColor, 0);</span><br><span class="line">        mLeftBackground = <span class="keyword">ta</span>.getDrawable(</span><br><span class="line">                R.styleable.TopBar_mleftBackground);</span><br><span class="line">        mLeftText = <span class="keyword">ta</span>.getString(R.styleable.TopBar_mleftText);</span><br><span class="line">....</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取完TypedArray的值后，一般要调用</span></span><br><span class="line">        <span class="comment">// recyle方法来避免重新创建的时候的错误</span></span><br><span class="line">        <span class="keyword">ta</span>.recycle();</span><br></pre></td></tr></table></figure>
<ul>
<li>组合控件</li>
</ul>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 为组件元素设置相应的布局元素</span></span><br><span class="line">        mLeftParams = <span class="keyword">new</span> RelativeLayout.LayoutParams(</span><br><span class="line">                RelativeLayout.LayoutParams.WRAP_CONTENT,</span><br><span class="line">                RelativeLayout.LayoutParams.MATCH_PARENT);</span><br><span class="line">        mLeftParams.addRule(RelativeLayout.ALIGN_PARENT_LEFT, <span class="keyword">TRUE</span>);</span><br><span class="line">        <span class="comment">// 添加到ViewGroup</span></span><br><span class="line">        addView(mLeftButton, mLeftParams);</span><br></pre></td></tr></table></figure>
<ul>
<li>定义回调借口</li>
</ul>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 接口对象，实现回调机制，在回调方法中</span></span><br><span class="line">    <span class="comment">// 通过映射的接口对象调用接口中的方法</span></span><br><span class="line">    <span class="comment">// 而不用去考虑如何实现，具体的实现由调用者去创建</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">interface</span> <span class="title">topbarClickListener</span> &#123;</span><br><span class="line">        <span class="comment">// 左按钮点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">leftClick</span>(<span class="params"></span>)</span>;</span><br><span class="line">        <span class="comment">// 右按钮点击事件</span></span><br><span class="line">        <span class="function"><span class="keyword">void</span> <span class="title">rightClick</span>(<span class="params"></span>)</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>暴露接口，绑定接口</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 映射传入的接口对象</span></span><br><span class="line">    <span class="keyword">private</span> topbarClickListener mListener;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 暴露一个方法给调用者来注册接口回调</span></span><br><span class="line">    <span class="comment">// 通过接口来获得回调者对接口方法的实现</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnTopbarClickListener</span><span class="params">(topbarClickListener mListener)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.mListener = mListener;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 按钮的点击事件，不需要具体的实现，</span></span><br><span class="line">        <span class="comment">// 只需调用接口的方法，回调的时候，会有具体的实现</span></span><br><span class="line">        mRightButton.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                mListener.rightClick();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        mLeftButton.setOnClickListener(<span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line"></span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                mListener.leftClick();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure>
<ul>
<li>实现接口</li>
</ul>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@BindView</span>(R.id.topBar)</span><br><span class="line">   TopBar mTopBar;</span><br><span class="line">  ......</span><br><span class="line"></span><br><span class="line">mTopBar.setOnTopbarClickListener(<span class="keyword">new</span> TopBar.topbarClickListener() &#123;</span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">leftClick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">               Toast.makeText(TopBarTestActivity.<span class="keyword">this</span>,</span><br><span class="line">                       <span class="string">"left"</span>, Toast.LENGTH_SHORT)</span><br><span class="line">                       .show();</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">rightClick</span><span class="params">()</span> </span>&#123;</span><br><span class="line">               Toast.makeText(TopBarTestActivity.<span class="keyword">this</span>,</span><br><span class="line">                       <span class="string">"right"</span>, Toast.LENGTH_SHORT)</span><br><span class="line">                       .show();</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br></pre></td></tr></table></figure>
<h3 id="重写View实现控件"><a href="#重写View实现控件" class="headerlink" title="重写View实现控件"></a>重写View实现控件</h3><ul>
<li>弧线圈<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/55565089.jpg" alt></li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CircleProgressView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mMeasureHeigth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mMeasureWidth;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mCirclePaint;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mCircleXY;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mRadius;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mArcPaint;</span><br><span class="line">    <span class="keyword">private</span> RectF mArcRectF;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mSweepAngle;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mSweepValue = <span class="number">66</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Paint mTextPaint;</span><br><span class="line">    <span class="keyword">private</span> String mShowText;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> mShowTextSize;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleProgressView</span><span class="params">(Context context, AttributeSet attrs,</span></span></span><br><span class="line"><span class="function"><span class="params">                              <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleProgressView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">CircleProgressView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec,</span></span></span><br><span class="line"><span class="function"><span class="params">                             <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class="line">        mMeasureWidth = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class="line">        mMeasureHeigth = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class="line">        setMeasuredDimension(mMeasureWidth, mMeasureHeigth);</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        <span class="comment">// 绘制圆</span></span><br><span class="line">        canvas.drawCircle(mCircleXY, mCircleXY, mRadius, mCirclePaint);</span><br><span class="line">        <span class="comment">// 绘制弧线</span></span><br><span class="line">        canvas.drawArc(mArcRectF, <span class="number">270</span>, mSweepAngle, <span class="keyword">false</span>, mArcPaint);</span><br><span class="line">        <span class="comment">// 绘制文字</span></span><br><span class="line">        canvas.drawText(mShowText, <span class="number">0</span>, mShowText.length(),</span><br><span class="line">                mCircleXY, mCircleXY + (mShowTextSize / <span class="number">4</span>), mTextPaint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">float</span> length = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (mMeasureHeigth &gt;= mMeasureWidth) &#123;</span><br><span class="line">            length = mMeasureWidth;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            length = mMeasureHeigth;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        mCircleXY = length / <span class="number">2</span>;</span><br><span class="line">        mRadius = (<span class="keyword">float</span>) (length * <span class="number">0.5</span> / <span class="number">2</span>);</span><br><span class="line">        mCirclePaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        <span class="comment">//设置防锯齿</span></span><br><span class="line">        mCirclePaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mCirclePaint.setColor(getResources().getColor(</span><br><span class="line">                android.R.color.holo_blue_bright));</span><br><span class="line"></span><br><span class="line">        mArcRectF = <span class="keyword">new</span> RectF(</span><br><span class="line">                (<span class="keyword">float</span>) (length * <span class="number">0.1</span>),</span><br><span class="line">                (<span class="keyword">float</span>) (length * <span class="number">0.1</span>),</span><br><span class="line">                (<span class="keyword">float</span>) (length * <span class="number">0.9</span>),</span><br><span class="line">                (<span class="keyword">float</span>) (length * <span class="number">0.9</span>));</span><br><span class="line">        mSweepAngle = (mSweepValue / <span class="number">100f</span>) * <span class="number">360f</span>;</span><br><span class="line">        mArcPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mArcPaint.setAntiAlias(<span class="keyword">true</span>);</span><br><span class="line">        mArcPaint.setColor(getResources().getColor(</span><br><span class="line">                android.R.color.holo_blue_bright));</span><br><span class="line">        mArcPaint.setStrokeWidth((<span class="keyword">float</span>) (length * <span class="number">0.1</span>));</span><br><span class="line">        mArcPaint.setStyle(Style.STROKE);</span><br><span class="line"></span><br><span class="line">        mShowText = setShowText();</span><br><span class="line">        mShowTextSize = setShowTextSize();</span><br><span class="line">        mTextPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mTextPaint.setTextSize(mShowTextSize);</span><br><span class="line">        mTextPaint.setTextAlign(Paint.Align.CENTER);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">float</span> <span class="title">setShowTextSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="number">50</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">setShowText</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.invalidate();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Android Skill"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">forceInvalidate</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.invalidate();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSweepValue</span><span class="params">(<span class="keyword">float</span> sweepValue)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sweepValue != <span class="number">0</span>) &#123;</span><br><span class="line">            mSweepValue = sweepValue;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            mSweepValue = <span class="number">25</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.invalidate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>动态条形图</li>
</ul>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/97709616.jpg" alt></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">VolumeView</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mRectWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mRectHeight;</span><br><span class="line">    <span class="keyword">private</span> Paint mPaint;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> mRectCount;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> offset = <span class="number">5</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> mRandom;</span><br><span class="line">    <span class="keyword">private</span> LinearGradient mLinearGradient;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">VolumeView</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">VolumeView</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">VolumeView</span><span class="params">(Context context, AttributeSet attrs,</span></span></span><br><span class="line"><span class="function"><span class="params">                      <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        initView();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mPaint = <span class="keyword">new</span> Paint();</span><br><span class="line">        mPaint.setColor(Color.BLUE);</span><br><span class="line">        mPaint.setStyle(Paint.Style.FILL);</span><br><span class="line">        mRectCount = <span class="number">12</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onSizeChanged</span><span class="params">(<span class="keyword">int</span> w, <span class="keyword">int</span> h, <span class="keyword">int</span> oldw, <span class="keyword">int</span> oldh)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class="line">        Log.d(<span class="string">"onSizeChanged"</span>,w+<span class="string">"/"</span>+h+<span class="string">"/"</span>+oldw+<span class="string">"/"</span>+oldh+<span class="string">"/"</span>);</span><br><span class="line">        mWidth = getWidth();</span><br><span class="line">        mRectHeight = getHeight();</span><br><span class="line">        mRectWidth = (<span class="keyword">int</span>) (mWidth * <span class="number">0.6</span> / mRectCount);</span><br><span class="line">        mLinearGradient = <span class="keyword">new</span> LinearGradient(</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                mRectWidth,</span><br><span class="line">                mRectHeight,</span><br><span class="line">                Color.YELLOW,</span><br><span class="line">                Color.BLUE,</span><br><span class="line">                Shader.TileMode.CLAMP);</span><br><span class="line">        mPaint.setShader(mLinearGradient);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDraw(canvas);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; mRectCount; i++) &#123;</span><br><span class="line">            mRandom = Math.random();</span><br><span class="line">            <span class="keyword">float</span> currentHeight = (<span class="keyword">float</span>) (mRectHeight * mRandom);</span><br><span class="line">            canvas.drawRect(</span><br><span class="line">                    (<span class="keyword">float</span>) (mWidth * <span class="number">0.4</span> / <span class="number">2</span> + mRectWidth * i + offset),</span><br><span class="line">                    currentHeight,</span><br><span class="line">                    (<span class="keyword">float</span>) (mWidth * <span class="number">0.4</span> / <span class="number">2</span> + mRectWidth * (i + <span class="number">1</span>)),</span><br><span class="line">                    mRectHeight,</span><br><span class="line">                    mPaint);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//重绘延迟300ms</span></span><br><span class="line">        postInvalidateDelayed(<span class="number">300</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="自定义ViewGroup"><a href="#自定义ViewGroup" class="headerlink" title="自定义ViewGroup"></a>自定义ViewGroup</h1><p>重写onMeasure()测量子View；<br>重写onLayout()确定子View的位置；<br>重写onTouchEvent()等增加响应事件；</p>
<h2 id="实现类似ScrollView的功能"><a href="#实现类似ScrollView的功能" class="headerlink" title="实现类似ScrollView的功能"></a>实现类似ScrollView的功能</h2><figure class="highlight plain"><figcaption><span>class ScrollView extends ViewGroup &#123;</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line">    private int mScreenHeight;</span><br><span class="line">    private Scroller mScroller;</span><br><span class="line">    private int mLastY;</span><br><span class="line">    private int mStart;</span><br><span class="line">    private int mEnd;</span><br><span class="line"></span><br><span class="line">    public ScrollView(Context context) &#123;</span><br><span class="line">        super(context);</span><br><span class="line">        initView(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public ScrollView(Context context, AttributeSet attrs) &#123;</span><br><span class="line">        super(context, attrs);</span><br><span class="line">        initView(context);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public ScrollView(Context context, AttributeSet attrs,</span><br><span class="line">                        int defStyleAttr) &#123;</span><br><span class="line">        super(context, attrs, defStyleAttr);</span><br><span class="line">        initView(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    private void initView(Context context) &#123;</span><br><span class="line">        WindowManager wm = (WindowManager) context.getSystemService(</span><br><span class="line">                Context.WINDOW_SERVICE);</span><br><span class="line">        DisplayMetrics dm = new DisplayMetrics();</span><br><span class="line">        wm.getDefaultDisplay().getMetrics(dm);</span><br><span class="line">        mScreenHeight = dm.heightPixels;</span><br><span class="line">        mScroller = new Scroller(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onLayout(boolean changed,</span><br><span class="line">                            int l, int t, int r, int b) &#123;</span><br><span class="line">        int childCount = getChildCount();</span><br><span class="line">        // 设置ViewGroup的高度</span><br><span class="line">        MarginLayoutParams mlp = (MarginLayoutParams) getLayoutParams();</span><br><span class="line">        mlp.height = mScreenHeight * childCount;</span><br><span class="line">        setLayoutParams(mlp);</span><br><span class="line">        for (int i = 0; i &lt; childCount; i++) &#123;</span><br><span class="line">            View child = getChildAt(i);</span><br><span class="line">            if (child.getVisibility() != View.GONE) &#123;</span><br><span class="line">                child.layout(l, i * mScreenHeight,</span><br><span class="line">                        r, (i + 1) * mScreenHeight);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    protected void onMeasure(int widthMeasureSpec,</span><br><span class="line">                             int heightMeasureSpec) &#123;</span><br><span class="line">        super.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        int count = getChildCount();</span><br><span class="line">        for (int i = 0; i &lt; count; ++i) &#123;</span><br><span class="line">            View childView = getChildAt(i);</span><br><span class="line">            measureChild(childView,</span><br><span class="line">                    widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public boolean onTouchEvent(MotionEvent event) &#123;</span><br><span class="line">        int y = (int) event.getY();</span><br><span class="line">        switch (event.getAction()) &#123;</span><br><span class="line">            case MotionEvent.ACTION_DOWN:</span><br><span class="line">                mLastY = y;</span><br><span class="line">                mStart = getScrollY();</span><br><span class="line">                break;</span><br><span class="line">            case MotionEvent.ACTION_MOVE:</span><br><span class="line">                if (!mScroller.isFinished()) &#123;</span><br><span class="line">                    mScroller.abortAnimation();</span><br><span class="line">                &#125;</span><br><span class="line">                int dy = mLastY - y;</span><br><span class="line">                if (getScrollY() &lt; 0) &#123;</span><br><span class="line">                    dy = 0;</span><br><span class="line">                &#125;</span><br><span class="line">                if (getScrollY() &gt; getHeight() - mScreenHeight) &#123;</span><br><span class="line">                    dy = 0;</span><br><span class="line">                &#125;</span><br><span class="line">                scrollBy(0, dy);</span><br><span class="line">                mLastY = y;</span><br><span class="line">                break;</span><br><span class="line">            case MotionEvent.ACTION_UP:</span><br><span class="line">                int dScrollY = checkAlignment();</span><br><span class="line">                if (dScrollY &gt; 0) &#123;</span><br><span class="line">                    if (dScrollY &lt; mScreenHeight / 3) &#123;</span><br><span class="line">                        mScroller.startScroll(</span><br><span class="line">                                0, getScrollY(),</span><br><span class="line">                                0, -dScrollY);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        mScroller.startScroll(</span><br><span class="line">                                0, getScrollY(),</span><br><span class="line">                                0, mScreenHeight - dScrollY);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125; else &#123;</span><br><span class="line">                    if (-dScrollY &lt; mScreenHeight / 3) &#123;</span><br><span class="line">                        mScroller.startScroll(</span><br><span class="line">                                0, getScrollY(),</span><br><span class="line">                                0, -dScrollY);</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        mScroller.startScroll(</span><br><span class="line">                                0, getScrollY(),</span><br><span class="line">                                0, -mScreenHeight - dScrollY);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                break;</span><br><span class="line">        &#125;</span><br><span class="line">        postInvalidate();</span><br><span class="line">        return true;</span><br><span class="line">    &#125;</span><br><span class="line">    private int checkAlignment() &#123;</span><br><span class="line">        int mEnd = getScrollY();</span><br><span class="line">        boolean isUp = ((mEnd - mStart) &gt; 0) ? true : false;</span><br><span class="line">        int lastPrev = mEnd % mScreenHeight;</span><br><span class="line">        int lastNext = mScreenHeight - lastPrev;</span><br><span class="line">        if (isUp) &#123;</span><br><span class="line">            //向上的</span><br><span class="line">            return lastPrev;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            return -lastNext;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    @Override</span><br><span class="line">    public void computeScroll() &#123;</span><br><span class="line">        super.computeScroll();</span><br><span class="line">        if (mScroller.computeScrollOffset()) &#123;</span><br><span class="line">            scrollTo(0, mScroller.getCurrY());</span><br><span class="line">            postInvalidate();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h1 id="事件拦截机制分析"><a href="#事件拦截机制分析" class="headerlink" title="事件拦截机制分析"></a>事件拦截机制分析</h1><p>xml</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">RelativeLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/activity_view_group"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:tools</span>=<span class="string">"http://schemas.android.com/tools"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingBottom</span>=<span class="string">"@dimen/activity_vertical_margin"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingLeft</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingRight</span>=<span class="string">"@dimen/activity_horizontal_margin"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">"@dimen/activity_vertical_margin"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">tools:context</span>=<span class="string">"com.wpmac.androidhero.unit3.ViewGroupActivity"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">com.wpmac.androidhero.unit3.viewgroup.MyViewGroupA</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@android:color/holo_blue_bright"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">com.wpmac.androidhero.unit3.viewgroup.MyViewGroupB</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"300dp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:background</span>=<span class="string">"@android:color/holo_green_dark"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">com.wpmac.androidhero.unit3.viewgroup.MyView</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_width</span>=<span class="string">"150dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:layout_height</span>=<span class="string">"150dp"</span></span></span><br><span class="line"><span class="tag">                <span class="attr">android:background</span>=<span class="string">"@android:color/darker_gray"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">com.wpmac.androidhero.unit3.viewgroup.MyViewGroupB</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">com.wpmac.androidhero.unit3.viewgroup.MyViewGroupA</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>ViewGroupB-ViewGroupA-View 依次嵌套</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyViewGroupA</span> <span class="keyword">extends</span> <span class="title">LinearLayout</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyViewGroupA</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyViewGroupA</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> MyViewGroupA(Context context, AttributeSet attrs,</span><br><span class="line">                        <span class="keyword">int</span> defStyleAttr) &#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        Log.d(<span class="string">"xys"</span>, <span class="string">"ViewGroupA dispatchTouchEvent"</span> + ev.getAction());</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">dispatchTouchEvent</span><span class="params">(ev)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        Log.d(<span class="string">"xys"</span>, <span class="string">"ViewGroupA onInterceptTouchEvent"</span> + ev.getAction());</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onInterceptTouchEvent</span><span class="params">(ev)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</span><br><span class="line">        Log.d(<span class="string">"xys"</span>, <span class="string">"ViewGroupA onTouchEvent"</span> + event.getAction());</span><br><span class="line">        <span class="function"><span class="keyword">return</span> <span class="keyword">super</span>.<span class="title">onTouchEvent</span><span class="params">(event)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul>
<li>ViewGroup监听dispatchTouchEvent，onTouchEvent，onInterceptTouchEvent方法</li>
<li>View打印dispatchTouchEvent，onTouchEvent方法</li>
<li>ViewGroup比View多一个onInterceptTouchEvent方法</li>
</ul>
<h2 id="一般情况，点击View"><a href="#一般情况，点击View" class="headerlink" title="一般情况，点击View"></a>一般情况，点击View</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">14</span>:<span class="number">17</span>:<span class="number">38.782</span> <span class="number">27002</span>-<span class="number">27002</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">14</span>:<span class="number">17</span>:<span class="number">38.782</span> <span class="number">27002</span>-<span class="number">27002</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onInterceptTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">14</span>:<span class="number">17</span>:<span class="number">38.782</span> <span class="number">27002</span>-<span class="number">27002</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">14</span>:<span class="number">17</span>:<span class="number">38.782</span> <span class="number">27002</span>-<span class="number">27002</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB onInterceptTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">14</span>:<span class="number">17</span>:<span class="number">38.782</span> <span class="number">27002</span>-<span class="number">27002</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: View dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">14</span>:<span class="number">17</span>:<span class="number">38.782</span> <span class="number">27002</span>-<span class="number">27002</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: View onTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">14</span>:<span class="number">17</span>:<span class="number">38.782</span> <span class="number">27002</span>-<span class="number">27002</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB onTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">14</span>:<span class="number">17</span>:<span class="number">38.783</span> <span class="number">27002</span>-<span class="number">27002</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onTouchEvent0</span><br></pre></td></tr></table></figure>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/86008071.jpg" alt><br><a href="https://github.com/mzeht/AndroidHero" target="_blank" rel="noopener">所有Demo地址</a></p>
<hr>
<p>ViewGroupA拦截</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">onInterceptTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">    Log.d(<span class="string">"xys"</span>, <span class="string">"ViewGroupA onInterceptTouchEvent"</span> + ev.getAction());</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>日志</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">16</span>:<span class="number">08</span>:<span class="number">24.717</span> <span class="number">23761</span>-<span class="number">23761</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">16</span>:<span class="number">08</span>:<span class="number">24.717</span> <span class="number">23761</span>-<span class="number">23761</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onInterceptTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">16</span>:<span class="number">08</span>:<span class="number">24.717</span> <span class="number">23761</span>-<span class="number">23761</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onTouchEvent0</span><br></pre></td></tr></table></figure>
<h2 id><a href="#" class="headerlink" title></a><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/6102134.jpg" alt></h2><p>ViewGroupA不拦截，ViewGroupB拦截</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">16</span>:<span class="number">15</span>:<span class="number">49.484</span> <span class="number">28880</span>-<span class="number">28880</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA dispatchTouchEvent0![]()</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">16</span>:<span class="number">15</span>:<span class="number">49.484</span> <span class="number">28880</span>-<span class="number">28880</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onInterceptTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">16</span>:<span class="number">15</span>:<span class="number">49.484</span> <span class="number">28880</span>-<span class="number">28880</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">16</span>:<span class="number">15</span>:<span class="number">49.484</span> <span class="number">28880</span>-<span class="number">28880</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB onInterceptTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">16</span>:<span class="number">15</span>:<span class="number">49.484</span> <span class="number">28880</span>-<span class="number">28880</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB onTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">16</span>:<span class="number">15</span>:<span class="number">49.484</span> <span class="number">28880</span>-<span class="number">28880</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onTouchEvent0</span><br></pre></td></tr></table></figure>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/954580.jpg" alt></p>
<hr>
<p>View onTouchEven设置为true</p>
<p>event.getAction() 获得的返回值：</p>
<p>//触摸屏幕时刻<br>case MotionEvent.ACTION_DOWN:  // = 0</p>
<p>break;<br>//触摸并移动时刻<br>case MotionEvent.ACTION_MOVE:  // = 2</p>
<p>break;</p>
<p>//终止触摸时刻<br>case MotionEvent.ACTION_UP:  // = 1<br>break;</p>
<hr>
<p>仅仅View onTouchEvent设置return true</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">44.984</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">44.984</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onInterceptTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">44.984</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">44.984</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB onInterceptTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">44.984</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: View dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">44.985</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: View onTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">45.012</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA dispatchTouchEvent1</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">45.012</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onInterceptTouchEvent1</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">45.012</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB dispatchTouchEvent1</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">45.012</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB onInterceptTouchEvent1</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">45.012</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: View dispatchTouchEvent1</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">13</span>:<span class="number">45.012</span> <span class="number">27187</span>-<span class="number">27187</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: View onTouchEvent1</span><br></pre></td></tr></table></figure>
<p>ViewGroupB onTouchEvent 设置为true</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.022</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.022</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onInterceptTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.022</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.022</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB onInterceptTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.022</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: View dispatchTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.022</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: View onTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.022</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB onTouchEvent0</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.096</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA dispatchTouchEvent1</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.096</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupA onInterceptTouchEvent1</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.096</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB dispatchTouchEvent1</span><br><span class="line"><span class="number">11</span>-<span class="number">10</span> <span class="number">17</span>:<span class="number">33</span>:<span class="number">53.096</span> <span class="number">5387</span>-<span class="number">5387</span>/com<span class="selector-class">.wpmac</span><span class="selector-class">.androidhero</span> D/xys: ViewGroupB onTouchEvent1</span><br></pre></td></tr></table></figure>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/public/16-11-10/470111.jpg" alt></p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> AndroidHero </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> 自定义控件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[butterknife 8.0.1 AndroidStudio peizhi]]></title>
      <url>http://mzeht.com/2016/09/08/butterknife-8-0-1-AndroidStudio-%E9%85%8D%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>#前言<br>butterknife是一个android上的注解库，升级的很快，在7.0.1版本中只要添加依赖就可以了，但是8.0.1版本中配置稍有不同</p>
<a id="more"></a>
<p>##在project 下的build.gradle文件下配置classpath</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:2.1.3'</span></span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.neenbedankt.gradle.plugins:android-apt:1.8'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>##在moudle下的builde.gradle文件中配置plugin</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apply <span class="string">plugin:</span> <span class="string">'com.android.application'</span></span><br><span class="line">apply <span class="string">plugin:</span> <span class="string">'com.neenbedankt.android-apt'</span></span><br></pre></td></tr></table></figure>
<p>##在moudle下的builde.gradle文件中配置dependencies</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123;</span><br><span class="line">    <span class="keyword">compile</span> <span class="keyword">fileTree</span>(dir: <span class="string">'libs'</span>, <span class="keyword">include</span>: [<span class="string">'*.jar'</span>]</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.jakewharton:butterknife:8.0.1'</span></span><br><span class="line">    apt <span class="string">'com.jakewharton:butterknife-compiler:8.0.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>butterknife之所以配置变化这么大，主要是在于apt，取代了之前的注解实现方法</p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> AndroidStudio </tag>
            
            <tag> Butterknife </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Intellij IDEA Mac OS X KeyMap 中文版]]></title>
      <url>http://mzeht.com/2016/09/07/Intellij-IDEA-Mac-OS-X-KeyMap-%E4%B8%AD%E6%96%87%E7%89%88/</url>
      <content type="html"><![CDATA[<p>#官方版本<br><a href="https://resources.jetbrains.com/assets/products/intellij-idea/IntelliJIDEA_ReferenceCard_mac.pdf" target="_blank" rel="noopener">官方版本</a></p>
<p>#翻译版本预览<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-9-7/44368370.jpg" alt></p>
<p>#翻译版本下载<br><a href="https://www.jianguoyun.com/p/DSblRVAQpN36BRi7jBs" target="_blank" rel="noopener">Word版本下载</a></p>
<p><a href="https://www.jianguoyun.com/p/DSMleAUQpN36BRi9jBs" target="_blank" rel="noopener">PDF版本下载</a></p>
<p><a href="https://www.jianguoyun.com/p/DQuCALMQpN36BRi-jBs" target="_blank" rel="noopener">JPG版本下载</a></p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
            <category> IDE </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Intellij IDEA </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio Gradle 进阶设置]]></title>
      <url>http://mzeht.com/2016/09/07/Android-Studio-Gradle-%E8%BF%9B%E9%98%B6%E8%AE%BE%E7%BD%AE/</url>
      <content type="html"><![CDATA[<p>##配置独立的签名信息<br>一般来说，我们可以直接把签名的信息明文写在gradle配置文件中，但是在多人协作或者开源代码的时候不是很方便，前者可能存放签名文件的位置需要修改，后者则希望隐藏签名信息，在看不少开源项目的时候，发现很多是这样做的</p>
<a id="more"></a>
<p>signingConfigs位置， <code>android的下一级</code></p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">signingConfigs</span> &#123;</span><br><span class="line">        <span class="section">release</span> &#123;</span><br><span class="line">            <span class="attribute">storeFile</span> file(RELEASE_STORE_FILE)</span><br><span class="line">            storePassword RELEASE_STORE_PASSWORD</span><br><span class="line">            keyAlias RELEASE_KEY_ALIAS</span><br><span class="line">            keyPassword RELEASE_KEY_PASSWORD</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p>在对应位置引用常量，在properties中再进行具体赋值<br>在gradle.properties中</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">RELEASE_KEY_PASSWORD</span>=xxxx</span><br><span class="line"><span class="attr">RELEASE_KEY_ALIAS</span>=xxx</span><br><span class="line"><span class="attr">RELEASE_STORE_PASSWORD</span>=xxx</span><br><span class="line"><span class="attr">RELEASE_STORE_FILE</span>=../.keystore/xxx.jks</span><br></pre></td></tr></table></figure>
<p>这样不会直接暴露签名信息，也方便配置</p>
<p>##多渠道打包</p>
<p>在product flavor下定义不同类型, 把AndroiManifest中的channel替换</p>
<p>productFlavors位置： <code>android的下一级</code></p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">android</span> &#123;</span><br><span class="line">      <span class="section">productFlavors</span> &#123;</span><br><span class="line">        <span class="section">fir</span> &#123;</span><br><span class="line">            <span class="attribute">manifestPlaceholders</span> = [UMENG_CHANNEL_VALUE: <span class="string">"fir"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        GooglePlay &#123;</span><br><span class="line">            <span class="attribute">manifestPlaceholders</span> = [UMENG_CHANNEL_VALUE: <span class="string">"GooglePlay"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">        Umeng &#123;</span><br><span class="line">            <span class="attribute">manifestPlaceholders</span> = [UMENG_CHANNEL_VALUE: <span class="string">"Umeng"</span>]</span><br><span class="line">        &#125;</span><br><span class="line">       </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果flavor标识是数字开头，要加以处理，添加””</p>
<p>替换AndroiManifest中的字段</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta-data</span><br><span class="line">    android:<span class="attribute">name</span>=<span class="string">"UMENG_CHANNEL"</span></span><br><span class="line">    android:<span class="attribute">value</span>=<span class="string">"<span class="variable">$&#123;UMENG_CHANNEL_VALUE&#125;</span>"</span>/&gt;</span><br></pre></td></tr></table></figure>
<p>##定制生成apk文件名称</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">buildTime</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> new Date().format(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hostName</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> System.getProperty(<span class="string">"user.name"</span>) + <span class="string">"@"</span> + InetAddress.localHost.hostName</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line"></span><br><span class="line">   /<span class="regexp">/...</span></span><br><span class="line"><span class="regexp">   </span></span><br><span class="line"><span class="regexp">    productFlavors &#123;</span></span><br><span class="line"><span class="regexp">        fir &#123;</span></span><br><span class="line"><span class="regexp">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "fir"]</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        GooglePlay &#123;</span></span><br><span class="line"><span class="regexp">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "GooglePlay"]</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">        Umeng &#123;</span></span><br><span class="line"><span class="regexp">            manifestPlaceholders = [UMENG_CHANNEL_VALUE: "Umeng"]</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">   buildTypes &#123;</span></span><br><span class="line"><span class="regexp">        release &#123;</span></span><br><span class="line"><span class="regexp">            minifyEnabled true</span></span><br><span class="line"><span class="regexp">            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'</span></span><br><span class="line"><span class="regexp">            signingConfig signingConfigs.app1</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    applicationVariants.all &#123; variant -&gt;</span></span><br><span class="line"><span class="regexp">        variant.outputs.each &#123; output -&gt;</span></span><br><span class="line"><span class="regexp">            def outputFile = output.outputFile</span></span><br><span class="line"><span class="regexp">            if (outputFile != null &amp;&amp; outputFile.name.endsWith('.apk')) &#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">                def fileName = "mzeht_v$&#123;defaultConfig.versionName&#125;_$&#123;hostName()&#125;_$&#123;buildTime()&#125;_$&#123;variant.productFlavors[0].name&#125;.apk"</span></span><br><span class="line"><span class="regexp">                output.outputFile = new File(outputFile.parent, fileName)</span></span><br><span class="line"><span class="regexp">            &#125;</span></span><br><span class="line"><span class="regexp">        &#125;</span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">    &#125;</span></span><br></pre></td></tr></table></figure>
<p>同样注意层级关系,在android同级下定义一个时间函数和一个host函数并引用，生成的apk包如下：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-9-7/53721167.jpg" alt></p>
<p>##配置依赖版本号<br>在Maven中我们可以方便的定义spring等核心依赖的版本号，便于统一管理，在Gradle中我们同样可以做到</p>
<p>在看google的架构综合项目时<a href="https://github.com/googlesamples/android-architecture/tree/todo-mvp/" target="_blank" rel="noopener">todo-mvp</a>,看见了一种写法</p>
<p>在根目录下的build.gradle文件中</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">buildscript</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">dependencies</span> &#123;</span><br><span class="line">        <span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:2.1.2'</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// <span class="doctag">NOTE:</span> Do not place your application dependencies here; they belong</span></span><br><span class="line">        <span class="comment">// in the individual module build.gradle files</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">allprojects</span> &#123;</span><br><span class="line">    <span class="keyword">repositories</span> &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> clean(type: <span class="keyword">Delete</span>) &#123;</span><br><span class="line">    <span class="keyword">delete</span> rootProject.buildDir</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Define versions in a single place</span></span><br><span class="line">ext &#123;</span><br><span class="line">    <span class="comment">// Sdk and tools</span></span><br><span class="line">    minSdkVersion = <span class="number">10</span></span><br><span class="line">    targetSdkVersion = <span class="number">22</span></span><br><span class="line">    compileSdkVersion = <span class="number">23</span></span><br><span class="line">    buildToolsVersion = <span class="string">'23.0.2'</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// App dependencies</span></span><br><span class="line">    supportLibraryVersion = <span class="string">'23.4.0'</span></span><br><span class="line">    guavaVersion = <span class="string">'18.0'</span></span><br><span class="line">    junitVersion = <span class="string">'4.12'</span></span><br><span class="line">    mockitoVersion = <span class="string">'1.10.19'</span></span><br><span class="line">    powerMockito = <span class="string">'1.6.2'</span></span><br><span class="line">    hamcrestVersion = <span class="string">'1.3'</span></span><br><span class="line">    runnerVersion = <span class="string">'0.4.1'</span></span><br><span class="line">    rulesVersion = <span class="string">'0.4.1'</span></span><br><span class="line">    espressoVersion = <span class="string">'2.2.1'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在app的build.gradle中</p>
<figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: 'com.android.application'</span><br><span class="line"></span><br><span class="line">android &#123;</span><br><span class="line">    <span class="attribute">compileSdkVersion rootProject.ext.compileSdkVersion</span></span><br><span class="line"><span class="attribute">    buildToolsVersion rootProject.ext.buildToolsVersion</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">    defaultConfig &#123;</span></span><br><span class="line"><span class="attribute">        applicationId "com.example.android.architecture.blueprints.todomvp"</span></span><br><span class="line"><span class="attribute">        minSdkVersion rootProject.ext.minSdkVersion</span></span><br><span class="line"><span class="attribute">        targetSdkVersion rootProject.ext.targetSdkVersion</span></span><br><span class="line"><span class="attribute">        versionCode 1</span></span><br><span class="line"><span class="attribute">        versionName "1.0"</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'</span></span><br><span class="line"><span class="attribute">    &#125;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">    buildTypes &#123;</span></span><br><span class="line"><span class="attribute">        debug &#123;</span></span><br><span class="line"><span class="attribute">            minifyEnabled true</span></span><br><span class="line"><span class="attribute">            // Uses new built-in shrinker http</span>://tools<span class="variable">.android</span><span class="variable">.com</span>/tech-docs/new-build-system/built-in-shrinker</span><br><span class="line">            useProguard false</span><br><span class="line">            proguardFiles getDefaultProguardFile('proguard-android<span class="variable">.txt</span>'), 'proguard-rules<span class="variable">.pro</span>'</span><br><span class="line">            testProguardFiles getDefaultProguardFile('proguard-android<span class="variable">.txt</span>'), 'proguardTest-rules<span class="variable">.pro</span>'</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        release &#123;</span><br><span class="line">            minifyEnabled true</span><br><span class="line">            useProguard true</span><br><span class="line">            proguardFiles getDefaultProguardFile('proguard-android<span class="variable">.txt</span>'), 'proguard-rules<span class="variable">.pro</span>'</span><br><span class="line">            testProguardFiles getDefaultProguardFile('proguard-android<span class="variable">.txt</span>'), 'proguardTest-rules<span class="variable">.pro</span>'</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // If you need to add more flavors, consider using flavor dimensions.</span><br><span class="line">    productFlavors &#123;</span><br><span class="line">        mock &#123;</span><br><span class="line">            applicationIdSuffix = "<span class="variable">.mock</span>"</span><br><span class="line">        &#125;</span><br><span class="line">        prod &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Remove mockRelease as it's not needed.</span><br><span class="line">    android<span class="variable">.variantFilter</span> &#123; variant -&gt;</span><br><span class="line">        if(variant<span class="variable">.buildType</span><span class="variable">.name</span><span class="variable">.equals</span>('release')</span><br><span class="line">                &amp;&amp; variant<span class="variable">.getFlavors</span>()<span class="variable">.get</span>(0)<span class="variable">.name</span><span class="variable">.equals</span>('mock')) &#123;</span><br><span class="line">            variant<span class="variable">.setIgnore</span>(true);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    // Always show the result of every unit test, even if it passes.</span><br><span class="line">    testOptions.unitTests.all &#123;</span><br><span class="line">        testLogging &#123;</span><br><span class="line">            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/*</span><br><span class="line"> Dependency versions are defined in the top level build.gradle file. This helps keeping track of</span><br><span class="line"> all versions in a single place. This improves readability and helps managing project complexity.</span><br><span class="line"> */</span><br><span class="line">dependencies &#123;</span><br><span class="line">    // <span class="attribute">App's dependencies, including test</span></span><br><span class="line"><span class="attribute">    compile "com.android.support</span>:appcompat-v7:$rootProject<span class="variable">.supportLibraryVersion</span>"</span><br><span class="line">    compile "com<span class="variable">.android</span><span class="variable">.support</span>:cardview-v7:$rootProject<span class="variable">.supportLibraryVersion</span>"</span><br><span class="line">    compile "com<span class="variable">.android</span><span class="variable">.support</span>:design:$rootProject<span class="variable">.supportLibraryVersion</span>"</span><br><span class="line">    compile "com<span class="variable">.android</span><span class="variable">.support</span>:recyclerview-v7:$rootProject<span class="variable">.supportLibraryVersion</span>"</span><br><span class="line">    compile "com<span class="variable">.android</span><span class="variable">.support</span>:support-v4:$rootProject<span class="variable">.supportLibraryVersion</span>"</span><br><span class="line">    compile "com<span class="variable">.android</span><span class="variable">.support</span><span class="variable">.test</span><span class="variable">.espresso</span>:espresso-idling-resource:$rootProject<span class="variable">.espressoVersion</span>"</span><br><span class="line">    compile "com<span class="variable">.google</span><span class="variable">.guava</span>:guava:$rootProject<span class="variable">.guavaVersion</span>"</span><br><span class="line"></span><br><span class="line">    // Dependencies for local unit tests</span><br><span class="line">    testCompile "junit:junit:$rootProject<span class="variable">.ext</span><span class="variable">.junitVersion</span>"</span><br><span class="line">    testCompile "org<span class="variable">.mockito</span>:mockito-all:$rootProject<span class="variable">.ext</span><span class="variable">.mockitoVersion</span>"</span><br><span class="line">    testCompile "org<span class="variable">.hamcrest</span>:hamcrest-all:$rootProject<span class="variable">.ext</span><span class="variable">.hamcrestVersion</span>"</span><br><span class="line"></span><br><span class="line">    // Android Testing Support Library's runner and rules</span><br><span class="line">    androidTestCompile "com<span class="variable">.android</span><span class="variable">.support</span><span class="variable">.test</span>:runner:$rootProject<span class="variable">.ext</span><span class="variable">.runnerVersion</span>"</span><br><span class="line">    androidTestCompile "com<span class="variable">.android</span><span class="variable">.support</span><span class="variable">.test</span>:rules:$rootProject<span class="variable">.ext</span><span class="variable">.runnerVersion</span>"</span><br><span class="line"></span><br><span class="line">    // Dependencies for Android unit tests</span><br><span class="line">    androidTestCompile "junit:junit:$rootProject<span class="variable">.ext</span><span class="variable">.junitVersion</span>"</span><br><span class="line">    androidTestCompile "org<span class="variable">.mockito</span>:mockito-core:$rootProject<span class="variable">.ext</span><span class="variable">.mockitoVersion</span>"</span><br><span class="line">    androidTestCompile 'com<span class="variable">.google</span><span class="variable">.dexmaker</span>:dexmaker:1.2'</span><br><span class="line">    androidTestCompile 'com<span class="variable">.google</span><span class="variable">.dexmaker</span>:dexmaker-mockito:1.2'</span><br><span class="line"></span><br><span class="line">    // Espresso UI Testing</span><br><span class="line">    androidTestCompile "com<span class="variable">.android</span><span class="variable">.support</span><span class="variable">.test</span><span class="variable">.espresso</span>:espresso-core:$rootProject<span class="variable">.espressoVersion</span>"</span><br><span class="line">    androidTestCompile ("com<span class="variable">.android</span><span class="variable">.support</span><span class="variable">.test</span><span class="variable">.espresso</span>:espresso-contrib:$rootProject<span class="variable">.espressoVersion</span>")</span><br><span class="line">    androidTestCompile "com<span class="variable">.android</span><span class="variable">.support</span><span class="variable">.test</span><span class="variable">.espresso</span>:espresso-intents:$rootProject<span class="variable">.espressoVersion</span>"</span><br><span class="line"></span><br><span class="line">    // Resolve conflicts between main and test APK:</span><br><span class="line">    androidTestCompile "com<span class="variable">.android</span><span class="variable">.support</span>:support-annotations:$rootProject<span class="variable">.supportLibraryVersion</span>"</span><br><span class="line">    androidTestCompile "com<span class="variable">.android</span><span class="variable">.support</span>:support-v4:$rootProject<span class="variable">.supportLibraryVersion</span>"</span><br><span class="line">    androidTestCompile "com<span class="variable">.android</span><span class="variable">.support</span>:recyclerview-v7:$rootProject<span class="variable">.supportLibraryVersion</span>"</span><br></pre></td></tr></table></figure>
<p>##减少编译错误和忽略lint检查</p>
<figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">packagingOptions</span> &#123;</span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/DEPENDENCIES.txt'</span></span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/LICENSE.txt'</span></span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/NOTICE.txt'</span></span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/NOTICE'</span></span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/LICENSE'</span></span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/DEPENDENCIES'</span></span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/notice.txt'</span></span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/license.txt'</span></span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/dependencies.txt'</span></span><br><span class="line">        <span class="literal">exclude</span> <span class="string">'META-INF/LGPL2.1'</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line">    <span class="keyword">lintOptions</span> &#123;</span><br><span class="line">        abortOnError <span class="keyword">false</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>##结语<br>gralde设置结合AndroidStudio提供的图形界面设置，理解会更快更透彻</p>
<p>File-Project Structure-Modules-app</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-9-7/37008097.jpg" alt></p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> AndroidStudio </tag>
            
            <tag> Gradle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Data Binding Guide]]></title>
      <url>http://mzeht.com/2016/09/04/Data-Binding-Guide/</url>
      <content type="html"><![CDATA[<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-9-4/6040336.jpg" alt></p>
<p>##前言<br>2016的Google IO 大会上，Android 团队发布了一个数据绑定框架（Data Binding Library）。以后可以直接在 layout 布局 xml 文件中绑定数据了，无需再 findViewById 然后手工设置数据了。其语法和使用方式和 JSP 中的 EL 表达式非常类似。</p>
<p>看到google出品的<a href="https://developer.android.com/topic/libraries/data-binding/index.html" target="_blank" rel="noopener">Data Binding Library</a>本来是想边翻译边写写demo，但是csdn上已经有人翻译了，没必要重复劳动，直接拿来链接：<br><a id="more"></a></p>
<h1 id="Data-Binding-Guide——google官方文档翻译（上）"><a href="#Data-Binding-Guide——google官方文档翻译（上）" class="headerlink" title="Data Binding Guide——google官方文档翻译（上）"></a><a href="http://blog.csdn.net/u014486880/article/details/50508133" target="_blank" rel="noopener">Data Binding Guide——google官方文档翻译（上）</a></h1><p>#<a href="http://blog.csdn.net/u014486880/article/details/50531110" target="_blank" rel="noopener"> Data Binding Guide——google官方文档翻译（下）</a></p>
<p>##防坑指南</p>
<p>引入DataBindingLibrary从最初发布开始，已经有了变化，起初是</p>
<p>在项目的 gradle 配置文件中添加依赖项：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">dependencies</span> &#123; <span class="keyword">classpath</span> <span class="string">"com.android.tools.build:gradle:1.2.3"</span> <span class="keyword">classpath</span> <span class="string">"com.android.databinding:dataBinder:1.0-rc0"</span> &#125;</span><br></pre></td></tr></table></figure>
<p>上面的依赖项目前在 jcenter 服务器中，所以确保 repositories 中包含 jcenter。<br>allprojects { repositories { jcenter() }}</p>
<p>在每个需要使用 Data Binding 功能的模块的 gradle 配置文件中启用该插件（添加在 android 插件之后），</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: ‘com<span class="selector-class">.android</span><span class="selector-class">.application</span><span class="string">'apply plugin: '</span>com<span class="selector-class">.android</span><span class="selector-class">.databinding</span><span class="string">'</span></span><br></pre></td></tr></table></figure>
<p>但是现在的google文档中 只要</p>
<ul>
<li><p>To get started with Data Binding, download the library from the Support repository in the Android SDK manager.</p>
</li>
<li><p>To configure your app to use data binding, add the dataBinding element to your build.gradle file in the app module.</p>
</li>
<li><p>Use the following code snippet to configure data binding:</p>
</li>
</ul>
<figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">android</span> &#123;</span><br><span class="line">    ....</span><br><span class="line">    dataBinding &#123;</span><br><span class="line">        <span class="literal">enabled</span> = <span class="keyword">true</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><a href="https://github.com/jingle1267/DataDindingSample" target="_blank" rel="noopener">demo github 地址</a></p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Data Binding </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac/windows下nexus系列产品的刷机官方指南]]></title>
      <url>http://mzeht.com/2016/07/30/Mac:windows%E4%B8%8Bnexus%E7%B3%BB%E5%88%97%E4%BA%A7%E5%93%81%E7%9A%84%E5%88%B7%E6%9C%BA%E5%AE%98%E6%96%B9%E6%8C%87%E5%8D%97/</url>
      <content type="html"><![CDATA[<p>#注意事项<br>1.仅针对官方镜像<br>2.需要下载官方镜像，需要翻墙或者国内寻找搬运资源<br>3.nexus刷入新系统后，开机需要网络验证激活（部分可以跳过），需要网络环境能够翻墙，请自行解决  </p>
<a id="more"></a>
<p>#镜像<br>1.前往<a href="https://developers.google.com/android/nexus/images" target="_blank" rel="noopener">镜像官网</a><br>2.<img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-7-30/11576201.jpg" alt><br>右侧选择对应的设备,同意相关协议，选择下载镜像<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-7-30/27674143.jpg" alt><br>这里以6p为例子，镜像列表从上到下，从旧到新</p>
<p>#环境准备<br>1.fastboot工具  </p>
<p>To flash a device using one of the system images below (or one of your own), you need the latest fastboot tool. You can get it from one of the sources below.</p>
<ul>
<li><p>From a compiled version of the <a href="https://source.android.com/" target="_blank" rel="noopener">Android Open Source Project</a>.  </p>
</li>
<li><p>From the <code>platform-tools/</code> directory in the Android SDK. Be sure that you have the latest version of the <code>Android SDK Platform-tools</code> from the <a href="https://developer.android.com/studio/intro/update.html" target="_blank" rel="noopener">SDK Manager</a>.  </p>
</li>
</ul>
<p>Once you have the <code>fastboot tool</code>, add it to your <code>PATH</code> environment variable (the flash-all script below must be able to find it). Also be certain that you’ve set up USB access for your device, as described in the Using <a href="https://developer.android.com/studio/run/device.html" target="_blank" rel="noopener">Hardware Devices guide</a>.  </p>
<p>Caution: Flashing a new system image deletes all user data. Be certain to first backup any personal data such as photos.</p>
<p>简单来说就是下载fastboot工具 并且添加到系统变量，注意用户数据会被清空</p>
<p>#刷入步骤  </p>
<ol>
<li><p>Download the appropriate system image for your device below, then unzip it to a safe directory.  </p>
</li>
<li><p>Connect your device to your computer over USB.  </p>
</li>
<li><p>Start the device in fastboot mode with one of the following methods:</p>
<ul>
<li><p>Using the <code>adb tool</code>: With the device powered on, execute:</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">adb reboot bootloader</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>Using a key combo: Turn the device off, then turn it on and immediately hold down the relevant<code>key combination</code> for your device. For example, to put a Nexus 5 (“hammerhead”) into fastboot mode, press and hold Volume Up + Volume Down + Power as the device begins booting up.  </p>
</li>
</ul>
</li>
<li><p>If necessary, unlock the device’s bootloader by running:</p>
</li>
</ol>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fastboot flashing unlock</span></span><br></pre></td></tr></table></figure>
<p>or, for older devices, running:</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">fastboot oem unlock</span></span><br></pre></td></tr></table></figure>
<p>The target device will show you a confirmation screen. (This erases all data on the target device.)  </p>
<ol start="5">
<li><p>Open a terminal and navigate to the unzipped system image directory.  </p>
</li>
<li><p>Execute the flash-all script. This script installs the necessary bootloader, baseband firmware(s), and operating system.  </p>
</li>
</ol>
<p>Once the script finishes, your device reboots. You should now lock the bootloader for security:</p>
<ol>
<li>Start the device in fastboot mode again, as described above.</li>
<li>Execute:<br>fastboot flashing lock<br>or, for older devices, running:<br>fastboot oem lock</li>
</ol>
<p>Locking bootloader will wipe the data on some devices. After locking the bootloader, if you want to flash the device again, you must run <code>fastboot oem unlock again</code>, which will wipe the data.</p>
<p>#结语<br>偷懒，直接上官方指南了，一些细节问题，（比如怎么下载fastboot，怎么配置系统变量）,相信能看到这篇文章和有这个意向的人都能解决。  </p>
<p>通过此方法完美利用mac给nexus5手机和nexus7wifi刷好系统,前者网络验证可以跳过，后者不行，采用可以刷入开源固件的路由器，刷入openwrt，设置好socks代理（付费版），即可无线翻墙，顺利激活，windows上可以电脑翻墙后共享热点，期间还尝试了<code>Privoxy</code>将shadowsocks的socks5代理转为http代理,然后验证阶段，连接普通wifi,设备和mac处在同一局域网下，设置代理地址为mac上的socks代理，但是不是很理想，还是硬件翻墙来的粗暴</p>
]]></content>
      
        <categories>
            
            <category> 综合 </category>
            
            <category> 其他 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Mac </tag>
            
            <tag> Nexus </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Synchronize files from ftpserver]]></title>
      <url>http://mzeht.com/2016/06/30/Synchronize-files-from-ftpserver/</url>
      <content type="html"><![CDATA[<p>#项目功能</p>
<ol>
<li>软件为运行于安卓平台的客户端软件。</li>
<li>客户端软件运行于一台19寸屏的安卓媒体机上。</li>
<li>该客户端软件有播放广告视频的功能，广告视频从FTP服务器下载，本地的视频文件每隔三分钟与FTP服务器同步一次，保持本地视频和服务器视频的同步。</li>
<li>FTP服务器的下载目录要求可配置，第一次运行该软件时弹出配置窗口，要求输入服务器IP地址，用户名和密码，以及服务器视频所在的目录路径。配置完成后，以后运行不再需要重新配置。</li>
<li>媒体机主板通过串口外接了一块STM32单片机，STM32单片机会将采集到的PM2.5指数，温湿度信息上传，媒体板通过串口接收，并将数据显示在屏幕的最上方。通信协议见“媒体板和单片机通信协议.docx”文档。</li>
<li>开机播放一段欢迎视频，视频打包在Android程序内部</li>
</ol>
<a id="more"></a>
<p>#功能分析<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/16-6-30/89255535.jpg" alt></p>
<p>工程部分结构图</p>
<p>LaunchActivity:播放欢迎视频</p>
<p>LoginActivity：登录FTP服务器并且下载所有的视频文件</p>
<p>DisplayActivity:播放服务器上最新的文件，并且每个三分钟检查视频的更新和废除，若有更新，则下载下来，不在服务器目录的文件删除掉，否则存储空间占用不断增加</p>
<blockquote>
<ul>
<li>由于设备的网络问题和服务器等造成下载中断，不完整等，必须要有重试下载和检查下载完整的机制</li>
<li>每播放完一组视频，若有更新，刷新播放队列，若无更新，循环播放该组视频</li>
<li>服务器上的文件信息要实时保存到数据库，以供对比</li>
<li>需要下载服务器指定目录下的一类文件</li>
</ul>
</blockquote>
<p>#依赖包<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">compile</span> <span class="keyword">fileTree</span>(<span class="keyword">include</span>: [<span class="string">'*.jar'</span>], dir: <span class="string">'libs'</span>)</span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:recyclerview-v7:23.4.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.android.support:leanback-v17:23.4.0'</span></span><br><span class="line"><span class="comment">//    compile files('libs/commons-net-3.0.1.jar')</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'com.jakewharton:butterknife:7.0.0'</span></span><br><span class="line">    <span class="keyword">compile</span> <span class="string">'org.xutils:xutils:3.3.26'</span></span><br><span class="line">    <span class="keyword">compile</span> files(<span class="string">'libs/commons-net-3.3.jar'</span>)</span><br></pre></td></tr></table></figure></p>
<p>##v17 Leanback Library<br><a href="https://developer.android.com/topic/libraries/support-library/features.html#v17-leanback" target="_blank" rel="noopener">https://developer.android.com/topic/libraries/support-library/features.html#v17-leanback</a><br>内置了对TV设备的支持</p>
<p>##org.xutils:xutils:3.3.26<br>开源框架 这里主要是用到数据库模块</p>
<p>##commons-net-3.3.jar<br>apache出品的与FTP服务器交互的jar包</p>
<p>#技术实现</p>
<p>##数据库的实时更新<br>创建:在LoginActivity</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> DbManager.DaoConfig daoConfig = <span class="keyword">new</span> DbManager.DaoConfig()</span><br><span class="line">            .setDbName(<span class="string">"addisplay.db"</span>)</span><br><span class="line">            .setTableCreateListener(<span class="keyword">new</span> DbManager.TableCreateListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onTableCreated</span><span class="params">(DbManager db, TableEntity&lt;?&gt; table)</span> </span>&#123;</span><br><span class="line">                    Log.i(<span class="string">"mzeht"</span>, <span class="string">"onTableCreated&lt;&lt;"</span> + table.getName());</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line"><span class="comment">//            .setAllowTransaction(true)</span></span><br><span class="line"><span class="comment">//            .setDbDir(new File("/mnt/sdcard/"))</span></span><br><span class="line"><span class="comment">//            .setDbVersion(1)</span></span><br><span class="line">            .setDbUpgradeListener(<span class="keyword">new</span> DbManager.DbUpgradeListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onUpgrade</span><span class="params">(DbManager db, <span class="keyword">int</span> oldVersion, <span class="keyword">int</span> newVersion)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;)</span><br><span class="line">            .setDbOpenListener(<span class="keyword">new</span> DbManager.DbOpenListener() &#123;</span><br><span class="line">                <span class="meta">@Override</span></span><br><span class="line">                <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onDbOpened</span><span class="params">(DbManager db)</span> </span>&#123;</span><br><span class="line">                    db.getDatabase().enableWriteAheadLogging();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">    DbManager db = x.getDb(daoConfig);</span><br></pre></td></tr></table></figure>
<p>我们需要一个NewFile</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Table</span>(name=<span class="string">"mp4file_info"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NewFile</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Column</span>(name=<span class="string">"id"</span>,isId = <span class="keyword">true</span>,autoGen = <span class="keyword">true</span>,property = <span class="string">""</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"file_Name"</span>)</span><br><span class="line">    <span class="keyword">private</span> String fileName;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"file_Size"</span>)</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> fileSize;</span><br><span class="line">    <span class="meta">@Column</span>(name = <span class="string">"file_Path"</span>)</span><br><span class="line">    <span class="keyword">private</span> String filePath;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NewFile</span><span class="params">(String fileName, <span class="keyword">long</span> fileSize, String filePath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">        <span class="keyword">this</span>.fileSize = fileSize;</span><br><span class="line">        <span class="keyword">this</span>.filePath = filePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NewFile</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFileName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileName</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileName = fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getFileSize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> fileSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFileSize</span><span class="params">(<span class="keyword">long</span> fileSize)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.fileSize = fileSize;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getFilePath</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> filePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFilePath</span><span class="params">(String filePath)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.filePath = filePath;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"NewFile&#123;"</span> +</span><br><span class="line">                <span class="string">"fileName='"</span> + fileName + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", fileSize="</span> + fileSize +<span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", filePath="</span> + filePath +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在下载工具类中：</p>
<figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">NewFile <span class="keyword">new</span><span class="type">File</span> = <span class="keyword">new</span> <span class="type">NewFile</span>(file.getName(), file.getSize(), LocalSavePath + fileName);</span><br><span class="line">                           <span class="keyword">new</span><span class="type">Files</span>.add(<span class="keyword">new</span><span class="type">File</span>);</span><br><span class="line">                       &#125;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">//退出登陆FTP，关闭ftpCLient的连接</span></span><br><span class="line">           ftpClient.logout();</span><br><span class="line">           ftpClient.disconnect();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">           DbManager db = x.getDb(LoginActivity.daoConfig);</span><br><span class="line">           db.delete(NewFile.class);</span><br><span class="line">           db.save(<span class="keyword">new</span><span class="type">Files</span>);</span><br><span class="line">           Log.i(<span class="string">"数据库保存实时服务器文件信息"</span>, <span class="keyword">new</span><span class="type">Files</span>.toString());</span><br></pre></td></tr></table></figure>
<p>##视频的循环播放<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="keyword">void</span> loadView(String path) &#123;</span><br><span class="line"></span><br><span class="line">        Uri uri = Uri.parse(path);</span><br><span class="line">        <span class="keyword">final</span> String fileinfo = path + <span class="string">""</span>;</span><br><span class="line">        mVideoView.setVideoURI(uri);</span><br><span class="line">        mVideoView.start();</span><br><span class="line"></span><br><span class="line">        mVideoView.setOnPreparedListener(<span class="keyword">new</span> MediaPlayer.OnPreparedListener() &#123;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> onPrepared(MediaPlayer mp) &#123;</span><br><span class="line"></span><br><span class="line">                mp.start();<span class="comment">// 播放</span></span><br><span class="line">                Log.i(<span class="string">"开始播放"</span>, <span class="string">"服务器的第"</span> + <span class="keyword">count</span> + <span class="string">"个文件&gt;&gt;&gt;&gt;&gt;&gt;"</span> + playFile.getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        mVideoView.setOnCompletionListener(<span class="keyword">new</span> MediaPlayer.OnCompletionListener() &#123;</span><br><span class="line"></span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> onCompletion(MediaPlayer mp) &#123;</span><br><span class="line">                android.util.Log.i(<span class="string">"播放完成"</span>, <span class="string">"服务器的第"</span> + <span class="keyword">count</span> + <span class="string">"个文件&gt;&gt;&gt;&gt;&gt;&gt;"</span> + playFile.getName());</span><br><span class="line">                <span class="keyword">count</span>++;</span><br><span class="line">                <span class="keyword">if</span> (<span class="keyword">count</span> &lt; displaySize) &#123;</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="keyword">count</span> = <span class="number">0</span>;</span><br><span class="line">                    playendFlag = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                Log.i(<span class="string">""</span>, <span class="string">"count:"</span> + <span class="keyword">count</span> + <span class="string">"dispalysize:"</span> + displaySize);</span><br><span class="line">                playFile = mp4Files.get(<span class="keyword">count</span>);</span><br><span class="line">                Uri uri = Uri.parse(playFile.getAbsolutePath());</span><br><span class="line"><span class="comment">//                Log.i("setOnCompletionListener",playFile.getAbsolutePath());</span></span><br><span class="line">                mVideoView.setVideoURI(uri);</span><br><span class="line">                mVideoView.start();<span class="comment">// 播放</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>主要是对mVideoView的两个监听</p>
<p>##从数据库刷新播放列表<br><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> initData() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">boolean</span> sdCardExist = Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED);</span><br><span class="line">        <span class="keyword">String</span> pathdir;</span><br><span class="line">        <span class="keyword">if</span> (!sdCardExist) &#123;</span><br><span class="line">            pathdir = getFilesDir().getAbsolutePath();<span class="comment">//新建一级主目录</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            pathdir = FileUtils.CacheDir[<span class="number">3</span>];<span class="comment">//新建一级主目录</span></span><br><span class="line">        &#125;</span><br><span class="line">        DbManager db = x.getDb(LoginActivity.daoConfig);</span><br><span class="line">        <span class="keyword">String</span> sql = <span class="string">"select id,file_Name,file_Size,file_Path from mp4file_info "</span>;</span><br><span class="line">        List&lt;DbModel&gt; dbModelAll = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            dbModelAll = db.findDbModelAll(<span class="keyword">new</span> SqlInfo(sql));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (DbException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;<span class="keyword">String</span>&gt; pathList = <span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">        <span class="keyword">for</span> (DbModel dbmodel : dbModelAll) &#123;</span><br><span class="line">            <span class="keyword">String</span> id = dbmodel.getString(<span class="string">"id"</span>);</span><br><span class="line">            <span class="keyword">String</span> file_Nanme = dbmodel.getString(<span class="string">"file_Name"</span>);</span><br><span class="line">            <span class="keyword">String</span> file_path = dbmodel.getString(<span class="string">"file_Path"</span>);</span><br><span class="line">            <span class="keyword">long</span> file_Size = dbmodel.getLong(<span class="string">"file_Size"</span>);</span><br><span class="line">            pathList.<span class="built_in">add</span>(file_path);</span><br><span class="line">            Log.i(<span class="string">"需要播放:"</span>, <span class="string">" file_Nanme&lt;&lt;"</span> + file_Nanme + <span class="string">" file_Size&lt;&lt;"</span> + file_Size + <span class="string">" file_path&lt;&lt;"</span> + file_path);</span><br><span class="line">        &#125;</span><br><span class="line">        mp4Files.<span class="built_in">clear</span>();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">String</span> path : pathList) &#123;</span><br><span class="line">            File file = <span class="keyword">new</span> File(path);</span><br><span class="line">            mp4Files.<span class="built_in">add</span>(file);</span><br><span class="line">        &#125;</span><br><span class="line">        DeletediscardedFile();</span><br><span class="line"><span class="comment">//        File file = new File(pathdir);</span></span><br><span class="line"><span class="comment">//        mp4Files = file.listFiles(getFileExtensionFilter(".mp4"));</span></span><br><span class="line">        displaySize = mp4Files.<span class="built_in">size</span>();</span><br><span class="line">        initFlag = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>##删除无用的文件<br><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">void</span> DeletediscardedFile() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">String</span> loaclpath = getVideoFilePathStr();</span><br><span class="line">        <span class="built_in">File</span> localfiles = <span class="keyword">new</span> <span class="built_in">File</span>(loaclpath);</span><br><span class="line">        <span class="built_in">File</span>[] localfile = localfiles.listFiles();</span><br><span class="line">        <span class="keyword">boolean</span> flag = false;</span><br><span class="line">        <span class="built_in">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; localfile.length; i++) &#123;</span><br><span class="line">            flag = false;</span><br><span class="line">            <span class="built_in">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; mp4Files.<span class="built_in">size</span>(); j++) &#123;</span><br><span class="line">                <span class="comment">//如果文件名称相同则不删除</span></span><br><span class="line">                <span class="keyword">String</span> name1 = localfile[i].getAbsolutePath();</span><br><span class="line">                <span class="keyword">String</span> name2 = mp4Files.<span class="built_in">get</span>(j).getAbsolutePath();</span><br><span class="line">                <span class="built_in">if</span> (name1.equals(name2)) &#123;</span><br><span class="line">                    flag = true;</span><br><span class="line">                &#125; <span class="built_in">else</span> &#123;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">if</span> (flag == false) &#123;</span><br><span class="line">                <span class="built_in">File</span> deletefile = <span class="keyword">new</span> <span class="built_in">File</span>(localfile[i].getAbsolutePath());</span><br><span class="line">                deletefile.<span class="keyword">delete</span>();</span><br><span class="line">                Log.i(<span class="string">"deletefile:&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>, localfile[i].getName());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p>
<p>#Thread和Hanler实现循环线程<br>在LoginActivity中有network和download两个线程，一个连接，一个下载，连接失败则会重试连接，成功则开启下载，下载成功则跳转展示页面，失败则重新连接</p>
<p>在DisplayActivity中有三个线程，network，download，initdata，多出一个刷新播放队列的线程</p>
<p>都是通过Therad和Hanler实现，循环线程，确保下载成功</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line">Runnable initDataTask = <span class="literal">new</span> Runnable() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="literal">void</span> run() &#123;</span><br><span class="line">            initData();</span><br><span class="line">            Message msg = <span class="literal">new</span> Message();</span><br><span class="line">            Bundle <span class="built_in">data</span> = <span class="literal">new</span> Bundle();</span><br><span class="line">            <span class="built_in">data</span>.putBoolean(<span class="string">"value"</span>, initFlag);</span><br><span class="line">            msg.setData(<span class="built_in">data</span>);</span><br><span class="line">            ihandler.sendMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    Handler ihandler = <span class="literal">new</span> Handler() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="literal">void</span> handleMessage(Message msg) &#123;</span><br><span class="line">            super.handleMessage(msg);</span><br><span class="line">            Bundle <span class="built_in">data</span> = msg.getData();</span><br><span class="line">            flag = <span class="built_in">data</span>.getBoolean(<span class="string">"value"</span>);</span><br><span class="line">            <span class="keyword">if</span> (flag &amp;&amp; playendFlag) &#123;</span><br><span class="line">                playFile = mp4Files.get(count);</span><br><span class="line">                playendFlag = <span class="literal">false</span>;</span><br><span class="line">                loadView(playFile.getAbsolutePath());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// TODO</span></span><br><span class="line">            <span class="comment">// UI界面的更新等相关操作</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Runnable networkTask = <span class="literal">new</span> Runnable() &#123;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="literal">void</span> run() &#123;</span><br><span class="line">            <span class="comment">// TODO</span></span><br><span class="line">            <span class="comment">// 在这里进行 http request.网络请求相关操作</span></span><br><span class="line">            ftpUtils = FTPUtils.getInstance();</span><br><span class="line">            flag = ftpUtils.initFTPSetting(ip, <span class="built_in">Integer</span>.valueOf(port), name, password);</span><br><span class="line">            Message msg = <span class="literal">new</span> Message();</span><br><span class="line">            Bundle <span class="built_in">data</span> = <span class="literal">new</span> Bundle();</span><br><span class="line">            <span class="built_in">data</span>.putBoolean(<span class="string">"value"</span>, flag);</span><br><span class="line">            msg.setData(<span class="built_in">data</span>);</span><br><span class="line">            chandler.sendMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    Handler chandler = <span class="literal">new</span> Handler() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="literal">void</span> handleMessage(Message msg) &#123;</span><br><span class="line">            super.handleMessage(msg);</span><br><span class="line">            Bundle <span class="built_in">data</span> = msg.getData();</span><br><span class="line">            flag = <span class="built_in">data</span>.getBoolean(<span class="string">"value"</span>);</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="literal">new</span> <span class="keyword">Thread</span>(downloadTask).start();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// TODO</span></span><br><span class="line">            <span class="comment">// UI界面的更新等相关操作</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    Runnable downloadTask = <span class="literal">new</span> Runnable() &#123;</span><br><span class="line"></span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="literal">void</span> run() &#123;</span><br><span class="line">            <span class="comment">// TODO</span></span><br><span class="line">            <span class="comment">// 在这里进行 http request.网络请求相关操作</span></span><br><span class="line">            <span class="built_in">String</span> savePath = getVideoFilePathStr();</span><br><span class="line">                downlodFlag = ftpUtils.downLoadTypeFile(dir, savePath, <span class="string">"mp4"</span>);</span><br><span class="line"></span><br><span class="line">            Message msg = <span class="literal">new</span> Message();</span><br><span class="line">            Bundle <span class="built_in">data</span> = <span class="literal">new</span> Bundle();</span><br><span class="line">            <span class="built_in">data</span>.putBoolean(<span class="string">"value"</span>, downlodFlag);</span><br><span class="line">            msg.setData(<span class="built_in">data</span>);</span><br><span class="line">            dhandler.sendMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    Handler dhandler = <span class="literal">new</span> Handler() &#123;</span><br><span class="line">        @Override</span><br><span class="line">        <span class="keyword">public</span> <span class="literal">void</span> handleMessage(Message msg) &#123;</span><br><span class="line">            super.handleMessage(msg);</span><br><span class="line">            Bundle <span class="built_in">data</span> = msg.getData();</span><br><span class="line">            flag = <span class="built_in">data</span>.getBoolean(<span class="string">"value"</span>);</span><br><span class="line">            <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">                <span class="literal">new</span> <span class="keyword">Thread</span>(initDataTask).run();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="literal">void</span> checkUpdateVideo() &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//        Intent intent= new Intent(this, UpdateService.class);</span></span><br><span class="line"><span class="comment">//        startService(intent);</span></span><br><span class="line">        mHandler = <span class="literal">new</span> Handler();</span><br><span class="line"></span><br><span class="line">        mHandler.post(<span class="literal">new</span> Runnable() &#123;</span><br><span class="line">            @Override</span><br><span class="line">            <span class="keyword">public</span> <span class="literal">void</span> run() &#123;</span><br><span class="line">                <span class="literal">new</span> <span class="keyword">Thread</span>(networkTask).start();</span><br><span class="line">                mHandler.postDelayed(this, Constants.checkViedoTime);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 综合 </category>
            
            <category> 项目 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> FTP </tag>
            
            <tag> 线程 </tag>
            
            <tag> 同步文件 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MongoDB]]></title>
      <url>http://mzeht.com/2016/03/22/MongoDB/</url>
      <content type="html"><![CDATA[<p>#简单介绍</p>
<p>##简介<br>MongoDB是一个基于分布式文件存储的数据库，由C++语言编写，旨在为WEB应用提供可扩展的高性能数据存储解决方案。</p>
<p>MongoDB是一个高性能，开源，无模式的文档型数据库，官方给自己的定义是Key-value存储(高性能和高扩展)和传统RDBMS(丰富的查询和功能)之间的一座桥梁</p>
<a id="more"></a>
<p>##Document和BSON<br>MongoDB中保存的数据格式为BSON，如：。<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/bson.jpg" alt></p>
<p>MongoDB中数据的基本单元称为文档(Document)，它是MongoDB的核心概念，由多个键极其关联的值有序的放置在一起组成，数据库中它对应于关系型数据库的行。</p>
<p>数据在MongoDB中以BSON（Binary-JSON）文档的格式存储在磁盘上。</p>
<p>BSON（Binary Serialized Document Format）是一种类json的一种二进制形式的存储格式，简称Binary JSON，BSON和JSON一样，支持内嵌的文档对象和数组对象，但是BSON有JSON没有的一些数据类型，如Date和BinData类型。</p>
<p>BSON的优点是灵活性高，但它的缺点是空间利用率不是很理想，BSON有三个特点：轻量性、可遍历性、高效性。</p>
<p>#文档的增删查改</p>
<p>##简单插入文档<br>在数据库中，数据插入是最基本的操作，在MongoDB使用db.collection.insert(document)语句来插入文档，如下图：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/insert1.png" alt></p>
<p>document是文档数据，collection是存放文档数据的集合。</p>
<p>例如：所有用户的信息存放在users集合中，每个用户的信息为一个user文档，插入数据:</p>
<p>db.users.insert(user);<br>如果collection存在，document会添加到collection目录下， 如果collection不存在，数据库会先创建collection，然后再保存document。</p>
<p>练习一下：把自己的姓名(name)和年龄(age)保存到person集合中！<br>如果想要查看已插入的person文档，可以使用：db.person.find()查看当前库中person集合里的数据。</p>
<p>如果想要查看当前数据库中的集合列表，可以使用：show collections。</p>
<p>db.person.insert({name:’阿牛’, age:28});</p>
<p>##批量插入文档<br>insert语句不但可以插入单个文档，还可以一次性插入多个文档。</p>
<p>插入多个文档时，insert命令的参数为一个数组，数组元素为BSON格式的文档。</p>
<p>多个文档可以放在一个数组内，一次插入多条数据，例如：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db<span class="selector-class">.users</span><span class="selector-class">.insert</span>([&#123;name:<span class="string">"tommy"</span>&#125;,&#123;name:<span class="string">"xiaoming"</span>&#125;])</span><br></pre></td></tr></table></figure>
<p>文档批量插入非常方便，但是使用批量插入时也有一些问题需要注意，因为BSON格式的限制，一次插入的数据量不能超过16M，在一个insert命令中插入多条数据时，MongoDB不保证完全成功或完全失败。</p>
<p>使用insert命令将以下数据一次性插入person集合中。</p>
<p>文／Te_Lee（简书作者）<br>原文链接：<a href="http://www.jianshu.com/p/1e402922ee32/" target="_blank" rel="noopener">http://www.jianshu.com/p/1e402922ee32/</a><br>著作权归作者所有，转载请联系作者获得授权，并标注“简书作者”。</p>
<table>
<thead>
<tr>
<th>name</th>
<th style="text-align:center">age</th>
<th style="text-align:center">status</th>
</tr>
</thead>
<tbody>
<tr>
<td>mary</td>
<td style="text-align:center">21</td>
<td style="text-align:center">A</td>
</tr>
<tr>
<td>Lucy</td>
<td style="text-align:center">89</td>
<td style="text-align:center">A</td>
</tr>
<tr>
<td>Jacky</td>
<td style="text-align:center">30</td>
<td style="text-align:center">A</td>
</tr>
</tbody>
</table>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.person.insert([</span><br><span class="line"> &#123;<span class="string">name:</span><span class="string">"Mary"</span>,  <span class="string">age:</span><span class="number">21</span>, <span class="string">status:</span><span class="string">"A"</span>&#125;,</span><br><span class="line"> &#123;<span class="string">name:</span><span class="string">"Lucy"</span>,  <span class="string">age:</span><span class="number">89</span>, <span class="string">status:</span><span class="string">"A"</span>&#125;,</span><br><span class="line"> &#123;<span class="string">name:</span><span class="string">"Jacky"</span>, <span class="string">age:</span><span class="number">30</span>, <span class="string">status:</span><span class="string">"A"</span>&#125; </span><br><span class="line">]);</span><br></pre></td></tr></table></figure>
<p>##查询文档<br>在MongoDB中，查询指向特定的文档集合，查询设定条件，指明MongoDB需要返回的文档；查询也可以包含一个投影，指定返回的字段。</p>
<p>如下图，在查询过程指定了一个查询条件和一个排序修饰。</p>
]]></content>
      
        <categories>
            
            <category> 数据库 </category>
            
            <category> MongoDb </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MongoDb </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[nodejs + mongodb实现简单购物网站]]></title>
      <url>http://mzeht.com/2016/03/21/nodejs-mongodb%E5%AE%9E%E7%8E%B0%E7%AE%80%E5%8D%95%E8%B4%AD%E7%89%A9%E7%BD%91%E7%AB%99/</url>
      <content type="html"><![CDATA[<p>#需求与设计</p>
<p>##功能介绍</p>
<ol>
<li><p>用户可以完成注册、登录然后登录后对商品的浏览。</p>
</li>
<li><p>登录之后，用户可以对相关商品进行选购并添加到购物车。</p>
</li>
<li><p>用户可以对购物车里面的商品进行增加、减少、删除操作。</p>
</li>
<li><p>用户可对购物车商品进行结算操作。</p>
</li>
</ol>
<a id="more"></a>
<p>##技术选型<br>本项目涉及使用到NodeJS、Express框架、MongoDB数据库、Mongoose对象模型库，详细介绍如下：</p>
<p>NodeJS：Node.js采用Google Chrome浏览器的V8引擎，一个后端的Javascript运行环境，提供很多系统级的API，如文件操作、网络编程等。</p>
<p>MongoDB：MongoDB是一个基于分布式文件存储的一个高性能，开源，无模式的文档型数据库，数据以BSON文档的格式存储在磁盘上。</p>
<p>Express：一个简洁、灵活的基于Node.js的Web应用开发框架, 支持Ejs、jade等多种模板，并且提供一系列强大的功能，比如：模板解析、静态文件服务、中间件、路由控制等等。</p>
<p>Mongoose：一个针对MongoDB操作的对象模型库，封装了MongoDB对文档的的一些增删改查等常用方法。</p>
<p>##结构划分<br>项目主要分为以下几大模块：注册模块，登录模块，商品模块、购物车模块、结算模块。</p>
<ol>
<li><p>用户注册模块：填写用户名、密码、确认密码后，实现成功注册，然后进行登录。</p>
</li>
<li><p>用户登录模块：填写已注册的用户名称，填写正确的密码，进入商品展示页面。</p>
</li>
<li><p>商品模块：用户选择相关产品加入购物车。</p>
</li>
<li><p>购物车模块：对相关商品进行增加、减少、删除操作。</p>
</li>
<li><p>结算模块：对购物车内已选择商品进行结算。</p>
</li>
</ol>
<p>模块结构如下图所示：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/module.jpg" alt="image"></p>
<p>##流程设计<br>此流程图显示用户可以进行登录和注册操作，如果用户已经注册，则可以直接登录，若未注册则必须先注册成功后才能进行登录，登录成功后可以进入商品页浏览商品，也可以选择相关商品并可加入购物车，在购物车页面内可以对购物车商品进行相关操作，最后结选择相关商品进行结算。</p>
<p>其流程如下图所示：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/process.jpg" alt></p>
<p>#数据库设计</p>
<p>##数据库介绍<br>数据库的使用呢，我们这里选择了MongoDB。</p>
<p>MongoDB的简单介绍如下：</p>
<p>MongoDB是一个开源的NoSQL数据库，相比MySQL那样的关系型数据库，它更显得轻巧、灵活， 非常适合在数据规模很大、事务性不强的场合下使用。同时它也是一个对象数据库，没有表、行等概念，也没有固定的模式和结构，所有的数据以文档的形式存储，数据格式就是JSON。</p>
<p>MongoDB —— 是一个对象数据库，没有表、行等概念，也没有固定的模式和结构，所有的数据以Document(以下简称文档)的形式存储(Document，就是一个关联数组式的对象，它的内部由属性组成，一个属性对应的值可能是一个数、字符串、日期、数组，甚至是一个嵌套的文档。)</p>
<p>我们一共要创建三个集合，分别是user(用户)集合、commodity(商品)集合、cart(购物车)集合，后面我们会一一介绍。</p>
<p>##user集合属性值展示<br>关于user集合，我们设计的属性有name(用户名)、password(密码)， 如下所示：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/c_user.jpg" alt></p>
<p>##commodity集合属性值展示<br>关于commodity集合，我们设计的属性有name(商品名称)、price(商品价格)、imgSrc(商品展示图片路径)， 如下所示：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/c_commodity.jpg" alt></p>
<p>##carts集合属性值展示<br>关于cart集合，我们设计的属性有uId(用户ID)、cId(商品ID)、cName(商品名称)、cPrice(商品价格)、cImgSrc(商品展示图片路径)、cQuantity(商品数量)、cStatus(商品结算状态，未结算为false,已结算为true)， 如下所示：<br>![](<a href="http://7xqtsx.com1.z0.glb.clouddn.com/c_cart.jpg" target="_blank" rel="noopener">http://7xqtsx.com1.z0.glb.clouddn.com/c_cart.jpg</a></p>
<p>#详细设计</p>
<p>##注册模块功能设计介绍<br>功能：本模块主要用于新用户注册，用户通过表单提供用户名和密码信息，系统根据用户提供的注册信息对用户进行具体操作。</p>
<p>输入操作：用户名、密码、确认密码。</p>
<p>对应处理：</p>
<ol>
<li>输入注册信息：在页面提供的表单处输入用户的用户名和密码信息，点击“注册”按钮提交表单数据信息。已注册用户，可点击“登录”按钮，进入登录页面。</li>
</ol>
<p>(2) 用户注册身份验证：连接数据库，以输入的“用户名”数据为查询条件来查看输入用户名是否已存在，如果用户名未注册，则提示注册成功并转到登录页进行登录，如果用户已注册，则给出用户已存在提示并重新注册。</p>
<p>##注册界面<br>用户注册界面草图如下：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Register.jpg" alt></p>
<p>##登录模块设计与实现<br>功能：本模块主要用于对用户身份进行鉴别。用户通过表单提供用户名和密码信息，系统根据用户提供的登录信息对用户进行查询鉴别。 如果身份合法，则用户可进入商品页面。</p>
<p>输入操作：用户名、密码。</p>
<p>对应处理：</p>
<ol>
<li><p>输入用户的登录信息：在页面提供的表单处输入用户的用户名和密码信息，点击“登录”按钮提交表单数据信息。 也可点击“注册”按钮，注册新用户。</p>
</li>
<li><p>用户身份进行验证：连接数据库，打开user集合，检验用户登录信息。以输入的“用户名”数据为查询条件来查看用户是否存在，如果存在，继续检验其输入密码是否正确，密码和用户名都正确，则进入商品展示页面；如果用户名不存在或密码不正确，则给出相应的提示。</p>
</li>
</ol>
<p>##登录界面草图<br>用户登录界面草图如下：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Login.jpg" alt></p>
<p>##商品页面介绍<br>商品页呢，我们主要要来展示商品，用户登录成功之后将会跳入商品页，可对所有商品进行查看， 每个商品信息的内容包括：商品名称、商品图片、商品价格，用户可浏览也可将其加入购物车。</p>
<p>页面草图如下所示：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Commodity.jpg" alt></p>
<p>##商品页面介绍<br>关于购物车页面，主要展示用户已购买的商品，包括商品的信息、价格、数量，当然用户可以对其中商品进行增加、减少、删除操作，最后，用户可选择对其中商品进行结算，选择结算后，会提示相应的付款金额。</p>
<p>页面草图如下所示：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Cart.jpg" alt></p>
<p>#实现注册</p>
<p>##简单启动<br>首先呢，我们先新建一个项目工程目录，然后在目录下创建启动文件app.js，开始我们的第一步。</p>
<p>这里我们会用到Express框架来实现相关功能，所以，需要先安装它，具体安装方法这里就不在做介绍了。</p>
<p>在启动文件添加如下内容，来测试Express框架是否引用成功。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;  </span><br><span class="line">   res.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>浏览器查看结果，如收到响应信息则表明我们项目的第一步已经成功搞定。</p>
<p>##创建目录<br>项目已经启动成功，下面我们开始创建相关目录，用于存储不同的文件。</p>
<p>说明：右侧栏”文件管理”中可添加相应目录和文件。</p>
<ol>
<li><p>public目录：存放静态文件。</p>
</li>
<li><p>routes目录：存放路由文件。</p>
</li>
<li><p>views目录： 存放页面文件。</p>
</li>
<li><p>common目录：存放公共文件。</p>
</li>
<li><p>public目录(可不选)，新建javascripts、stylesheets、images三个目录用以存储js、css、img相关文件。</p>
</li>
</ol>
<p>这里我们内置了一些js、css文件来实现简单页面样式和操作，在页面视图中直接使用即可，引用方法如下：</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;link <span class="attribute">href</span>=<span class="string">"example/css/bootstrap.min.css"</span> <span class="attribute">rel</span>=<span class="string">"stylesheet"</span> &gt;</span><br><span class="line"> </span><br><span class="line">&lt;script <span class="attribute">src</span>=<span class="string">"example/js/jquery.min.js"</span> <span class="attribute">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">&lt;script <span class="attribute">src</span>=<span class="string">"example/js/bootstrap.min.js"</span> <span class="attribute">type</span>=<span class="string">"text/javascript"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure>
<p>##添加文件<br>有了目录，我们开始添加文件，先来添加一个登录页面register.html，便于管理和开发我们统一把视图页面放到views目录下。</p>
<p>views目录，添加register.html注册视图页，如下简单效果图：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Register.jpg" alt></p>
<p>有了视图页面，我们就可以访问它了，那要如何访问呢，这里就要使用到ejs模板了，安装方法不在阐述，直接如下引用：</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="built_in">set</span>( <span class="string">'view engine'</span>, <span class="string">'html'</span> );</span><br><span class="line">app.engine( <span class="string">'.html'</span>, <span class="keyword">require</span>( <span class="string">'ejs'</span> ).__express );</span><br></pre></td></tr></table></figure>
<p>使用engine函数注册模板引擎并指定处理后缀名为html的文件。</p>
<p>设定视图存放的目录</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="built_in">set</span>(<span class="string">'views'</span>, <span class="keyword">require</span>(<span class="string">'path'</span>).<span class="keyword">join</span>(__dirname, <span class="string">'views'</span>));</span><br></pre></td></tr></table></figure>
<p>如果是在本地项目中，我们还要指定本地静态资源访问的路径,如下设置：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="keyword">use</span>(express.<span class="keyword">static</span>(<span class="keyword">require</span>(<span class="string">'path'</span>).join(__dirname, <span class="string">'public'</span>)));</span><br></pre></td></tr></table></figure>
<p>##访问注册页<br>有了视图页面，下面我们就开始访问它，app.js文件部分内容，引入相关模块资源，然后简单访问如下：</p>
<p>app.get(‘/‘, function (req, res) {<br>    res.render(‘register’);<br>});<br>app.listen(80);<br>本节启动访问80端口，如成功看到注册页面则表示项目已经运行成功，如未看到，查看相关错误信息，是否缺少相关模块，安装和引用即可。</p>
<p>##定义Schema<br>首先在common目录内添加models.js文件用来保存各个集合的Schema文件(集合属性)，也便于我们查看和访问，具体内容如下所示：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">module.exports</span> <span class="string">=</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">    user:</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">        name:</span> <span class="string">&#123;</span> <span class="attr">type:</span> <span class="string">String,</span> <span class="attr">required:</span> <span class="literal">true</span> <span class="string">&#125;,</span></span><br><span class="line"><span class="attr">        password:</span> <span class="string">&#123;</span> <span class="attr">type:</span> <span class="string">String,</span> <span class="attr">required:</span> <span class="literal">true</span> <span class="string">&#125;,</span></span><br><span class="line"><span class="attr">        gender:</span> <span class="string">&#123;</span> <span class="attr">type:</span> <span class="string">Boolean,</span> <span class="attr">default:</span> <span class="literal">true</span> <span class="string">&#125;</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br></pre></td></tr></table></figure>
<p>有了集合的Schema文件，如何访问呢，接着我们会介绍如何使用Model模型操作这些属性。</p>
<p>##创建公共方法<br>还是common目录，我们在新建一个公共方法 —— dbHelper.js文件，来操作这些Schema，因为后面还会涉及此问题，所以我们写成一个公共的方法，dbHelper文件内容如下：</p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> mongoose = <span class="built_in">require</span>(<span class="string">'mongoose'</span>),</span><br><span class="line">    Schema = mongoose.Schema,</span><br><span class="line">    models = <span class="built_in">require</span>(<span class="string">'./models'</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> m <span class="keyword">in</span> models) &#123;</span><br><span class="line">    mongoose.model(m, <span class="keyword">new</span> Schema(models[m]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    getModel: <span class="function"><span class="keyword">function</span> (<span class="params"><span class="keyword">type</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> _getModel(<span class="keyword">type</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> _getModel = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="keyword">type</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> mongoose.model(<span class="keyword">type</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>如上所示我们通过getModel可获取集合的Model模型就可以对数据库有实质性的操作了</p>
<p>关于Model，简单介绍：由Schema构造生成的模型，具有数据库操作的行为。</p>
<p>##添加函数<br>关于dbHelper.js文件里方法的访问很简单，如下所示：</p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">global</span>.dbHelper = <span class="built_in">require</span>( <span class="string">'./common/dbHelper'</span> );</span><br></pre></td></tr></table></figure>
<p>这里我们使用globa来定义全局变量dbHelper，那么dbHelper就可以在任何模块内调用了。</p>
<p>然后我们就开始修改register视图页面，添加单击事件，例如：</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="attribute">type</span>=<span class="string">"button"</span>  <span class="attribute">onclick</span>=<span class="string">"register()"</span> <span class="attribute">value</span>=<span class="string">"注 册"</span> /&gt;</span><br></pre></td></tr></table></figure>
<p>对应register()函数，大致如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">register</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="comment">//通过serialize()方法进行序列化表单值，创建文本字符串。</span></span><br><span class="line">   <span class="keyword">var</span> data = $(<span class="string">"form"</span>).serialize();</span><br><span class="line">   <span class="comment">//例如："username=张三&amp;password=12345"</span></span><br><span class="line">   $.ajax(&#123;</span><br><span class="line">       url:<span class="string">'/register'</span>,</span><br><span class="line">       type:<span class="string">'POST'</span>,</span><br><span class="line">       data:data,</span><br><span class="line">       success:<span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(status == <span class="string">'success'</span>)&#123;</span><br><span class="line">               location.href=<span class="string">'register'</span>;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;,</span><br><span class="line">       error:<span class="function"><span class="keyword">function</span>(<span class="params">res,err</span>)</span>&#123;</span><br><span class="line">           location.href=<span class="string">'register'</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>##添加路由<br>这里我们需要新建一个文件register.js，专门用来处理来之register页面的post请求， 在后面的学习中还会有多个不同处理文件，万所以我们统一管理在routes目录下，在实际开发中我们可能需要针对不同文件请求给出相应文件的处理，所以我们就做分开处理。</p>
<p>这里贴出register.js文件处理get和post请求的相关代码以供参考，如下：</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">// app：express对象</span><br><span class="line">module.exports = <span class="function"><span class="keyword">function</span> <span class="params">( app )</span></span> &#123;</span><br><span class="line">  app.get(<span class="string">'/register'</span>, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span></span> &#123;</span><br><span class="line">      res.render(<span class="string">'register'</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">  app.post(<span class="string">'/register'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span></span> &#123;</span><br><span class="line">     var User = global.dbHelper.getModel(<span class="string">'user'</span>),</span><br><span class="line">     uname = req.body.uname;</span><br><span class="line">     User.findOne(&#123;name: uname&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(error, doc)</span></span> &#123;</span><br><span class="line">       <span class="keyword">if</span> (doc) &#123;</span><br><span class="line">            req.session.<span class="built_in">error</span> = <span class="string">'用户名已存在！'</span>;</span><br><span class="line">            res.send(<span class="number">500</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            User.<span class="built_in">create</span>(&#123;</span><br><span class="line">                name: uname,</span><br><span class="line">                password: req.body.upwd</span><br><span class="line">            &#125;, <span class="function"><span class="keyword">function</span> <span class="params">(error, doc)</span></span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">error</span>) &#123;</span><br><span class="line">                    res.send(<span class="number">500</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    req.session.<span class="built_in">error</span> = <span class="string">'用户名创建成功！'</span>;</span><br><span class="line">                    res.send(<span class="number">200</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>##模块的加载和引用<br>register的post请求处理中，我们使用了session(express-session模块)还有处理post请求数据的body属性(body-parser和multer模块)，需先安装他们，然后引用即可，如下参考：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;pre&gt;</span><br><span class="line"><span class="comment">//引用模块</span></span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="keyword">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">var</span> multer = <span class="keyword">require</span>(<span class="string">'multer'</span>);</span><br><span class="line"><span class="keyword">var</span> session = <span class="keyword">require</span>(<span class="string">'express-session'</span>);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"><span class="comment">//调用中间件使用</span></span><br><span class="line">app.<span class="keyword">use</span>(bodyParser.json());</span><br><span class="line">app.<span class="keyword">use</span>(bodyParser.urlencoded(&#123; extended: <span class="keyword">true</span> &#125;));</span><br><span class="line">app.<span class="keyword">use</span>(multer());</span><br></pre></td></tr></table></figure>
<p>后面我们还会再次添加多个路由记录，所以便于管理和访问，我们可以把他们统一放到一起，比如routes目录下新建index.js文件专门用来存放添加的文件，代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params"> app </span>) </span>&#123;</span><br><span class="line">    <span class="built_in">require</span>(<span class="string">'./register'</span>)(app);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>那么我们在app.js文件中直接引用index.js文件就可以访问这些文件了，如下所示：</p>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">require</span>(<span class="string">'./routes'</span>)(app); <span class="regexp">//app</span><span class="symbol">:express</span>对象。;</span><br></pre></td></tr></table></figure>
<p>##中间件传递信息<br>这里我们就一步到位，在register的post请求处理中我们使用了express-session模块来保存相关信息，这里我们就使用中间件来传递这些提示信息，中间件内容如下所示：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">app</span>.<span class="keyword">use</span>(function(req, res, next)&#123;</span><br><span class="line">    res.locals.user = req.session.user; <span class="comment">//保存用户信息</span></span><br><span class="line">    <span class="keyword">var</span> <span class="keyword">err</span> = req.session.<span class="keyword">error</span>;  <span class="comment">//保存结果响应信息</span></span><br><span class="line">    res.locals.message = '';  <span class="comment">// 保存html标签</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">err</span>) res.locals.message = '&lt;div <span class="keyword">class</span>=<span class="string">"alert alert-danger"</span> style=<span class="string">"margin-bottom: 20px;color:red;"</span>&gt;' + <span class="keyword">err</span> + '&lt;/div&gt;';</span><br><span class="line">    next();</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>这里注意中间件的安放位置，还有我们设置了变量message并为其简单添加了样式，这里我们在register视图里就用它来作为操作结果的信息提示，直接添加&lt;%- message %&gt;到视图第一个div内即可。</p>
<p>关于注册我们基本已经准备就绪，开始打开连接数据库并设置用户过期时间(注意执行顺序，应放置在首个中间件位置)，app.js条件内容如下：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">mongoose</span><span class="selector-class">.connect</span>(<span class="string">"mongodb://127.0.0.1:27017/test"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">app</span><span class="selector-class">.use</span>(session(&#123;</span><br><span class="line">    <span class="attribute">secret</span>:<span class="string">'secret'</span>,</span><br><span class="line">    <span class="attribute">cookie</span>:&#123;</span><br><span class="line">        <span class="attribute">maxAge</span>:<span class="number">1000</span>*<span class="number">60</span>*<span class="number">30</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;));</span><br></pre></td></tr></table></figure>
<p>到这里，注册功能已经完毕，在用户注册的信息录入中，我们没有进行相关的为空、两次密码的不匹配等等验证等等(可自行添加)，赶紧注册试试吧，本地的话可以通过MongoVUE(可视化客户端)来查看数据是否成功写入数据库。</p>
<p>#登陆和浏览</p>
<p>##添加视图<br>前面我们已经实现了注册功能，用户可以成功注册，接着我们就开始让用户登录了，此节我们就实现用户的登录功能，并且登录成功后跳转商品页面查看商品。</p>
<p>首先，我们还是在views目录下添加登录视图页面 —— login.html，效果图如下：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Login.jpg" alt></p>
<p>##访问视图<br>有了登录页面，那么注册页面(register)的登录按钮添加指向登陆页面的链接，相应的登陆页的注册按钮也是如此。</p>
<p>这里我们还是添加一个相对应的文件用来处理login页面的请求，routes目录下新建名为login.js的文件，先来增加一个处理get请求的方法，代码参考如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params"> app </span>) </span>&#123;</span><br><span class="line">    app.get(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        res.render(<span class="string">'login'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>和register文件一样添加到index.js中，如下：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">require</span>(<span class="string">'./login'</span>)(app);</span><br></pre></td></tr></table></figure>
<p>register视图页的register()函数的回调中，当注册成功时我们就可以跳转到登陆页面了，如下：</p>
<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">location.href</span>=<span class="string">'login'</span>;</span><br></pre></td></tr></table></figure>
<p>好，赶紧试试登陆、注册按钮能否成功跳转吧！</p>
<p>##实现登陆<br>我们为登陆按钮增加单击事件和对应函数login()，参考如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="comment">//通过serialize()方法获取form表单内输入框用户名、密码的值</span></span><br><span class="line">  <span class="comment">//如："username=张三&amp;password=12345"</span></span><br><span class="line">  <span class="keyword">var</span> data = $(<span class="string">"form"</span>).serialize();</span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">      url:<span class="string">'/login'</span>,</span><br><span class="line">      type:<span class="string">'POST'</span>,</span><br><span class="line">      data:data,</span><br><span class="line">      success:<span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">          <span class="keyword">if</span>(status == <span class="string">'success'</span>)&#123;</span><br><span class="line">              location.href=<span class="string">'home'</span>;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;,</span><br><span class="line">      error:<span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(status == <span class="string">"error"</span>)&#123;</span><br><span class="line">              location.href=<span class="string">'login'</span></span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>在相应的login.js文件中，我们还得添加相对应的post请求处理方法，接着我们会讲述。</p>
<p>##登陆处理<br>关于login视图页的post请求处理，我们需要判断用户所输入用户名是否存在，密码是否正确，并使用变量保存相应提示信息，当用户名和密码全部正确时，则返回成功并保存用户的个人信息，用作来判断用户的登陆状态，具体可参考register视图页的post请求。</p>
<p>login.js文件的post请求处理代码，参考如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">'/login'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> User = <span class="keyword">global</span>.dbHelper.getModel(<span class="string">'user'</span>),uname = req.body.uname;</span><br><span class="line">  User.findOne(&#123;name: uname&#125;, <span class="function"><span class="keyword">function</span> <span class="params">(error, doc)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">if</span> (用户不存在) &#123;</span><br><span class="line">                req.session.error = <span class="string">'用户名不存在！'</span>;</span><br><span class="line">                res.send(<span class="number">404</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(用户存在，密码错误) &#123;</span><br><span class="line">                   req.session.error = <span class="string">"密码错误!"</span>;</span><br><span class="line">                   res.send(<span class="number">404</span>);</span><br><span class="line">               &#125;<span class="keyword">else</span>&#123; <span class="comment">//用户名、密码正确</span></span><br><span class="line">                   req.session.user=doc;</span><br><span class="line">                   res.send(<span class="number">200</span>);</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>还记得我们登陆的本地变量message嘛，用来保存html标签并包含相应提示信息，这里在登陆页面我们也可以使用，用法：&lt;%- message %&gt;，指定到相应位置即可。</p>
<p>##商品页视图<br>用户登录成功之后则跳转至home视图页面(商品主页)，就可以进行对商品的浏览和选择了。</p>
<p>还是views目录，添加home商品视图页，如下简单效果图：</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Commodity.jpg" alt></p>
<p>用户成功登录之后跳转至home页，这里我们还是做分开处理，routes目录下新建home.js文件用来处理来之home也的get请求。</p>
<p>这里我们假设如果用户未登录将不能查看商品主页，所以，在请求处理中我们还需要判断用户的登陆状态，这个可以使用我们在登录处理时所保存的用户个人信息。</p>
<p>关于商品页的视图展示我们只需要有其名称、价格、图片，这里使用ejs模板循环展示，可参考如下方式：</p>
<p>注：Commodity：商品集合所有数据，内置图片路径为“/example/img”</p>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/home_refer.jpg" alt></p>
<p>##请求处理<br>在home的get请求处理中，我们需要首先判断用户的登陆状态，只有用户登录了方可跳转到商品页，如果为登陆呢则跳转到登录页，而且在进入商品页的时候并传入Commodity集合的所有数据数据在页面展示。</p>
<p>首先呢，在models.js文件中定义Commodity集合的Schema属性，共包括商品名称、商品价格、商品图片，这里简单定义如下：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">commodity</span>: &#123;</span><br><span class="line">   <span class="attribute">name</span>: String,</span><br><span class="line">   price: Number,</span><br><span class="line">   imgSrc: String</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>routes目录下添加home.js文件(index.js文件中引用)。</p>
<p>具体处理方式可参考如下代码：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params"> app </span>) </span>&#123;</span><br><span class="line">    app.get(<span class="string">'/home'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(req.session.user)&#123;</span><br><span class="line">            <span class="keyword">var</span> Commodity = global.dbHelper.getModel(<span class="string">'commodity'</span>);</span><br><span class="line">            Commodity.find(&#123;&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">error, docs</span>) </span>&#123;</span><br><span class="line">               <span class="comment">//将Commoditys变量传入home模板</span></span><br><span class="line">               res.render(<span class="string">'home'</span>,&#123;<span class="attr">Commoditys</span>:docs&#125;);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            req.session.error = <span class="string">"请先登录"</span></span><br><span class="line">            res.redirect(<span class="string">'/login'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>##添加商品<br>添加商品，views目录下添加addcommodity视图页面用来对商品的添加，这里简单样式参考如下：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Addcommodity.jpg" alt></p>
<p>相对应的addcommodity函数参考代码如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//imgSrc表示图片路径)，这里内置了5张图片，格式为：xmsz-X.jpg(X为1-5数字)。</span></span><br><span class="line"><span class="keyword">var</span> data = $(<span class="string">"form"</span>).serialize()+<span class="string">"&amp;imgSrc="</span> + <span class="string">"xmsz-"</span>+<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random()*<span class="number">5</span>+<span class="number">1</span>)+<span class="string">".jpg"</span>;</span><br><span class="line">$.ajax(&#123;</span><br><span class="line">     url:<span class="string">'/addcommodity'</span>,</span><br><span class="line">     type:<span class="string">'POST'</span>,</span><br><span class="line">     data:data,</span><br><span class="line">     success:<span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">         <span class="keyword">if</span>(status == <span class="string">'success'</span>)&#123;</span><br><span class="line">            alert(<span class="string">'添加成功！'</span>)</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;,</span><br><span class="line">     error:<span class="function"><span class="keyword">function</span>(<span class="params">data,err</span>)</span>&#123;</span><br><span class="line">         alert(<span class="string">'添加失败！'</span>)</span><br><span class="line">     &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>##商品添加处理<br>这里我们就直接在home.js文件中添加保存商品的处理方法，如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/addcommodity'</span>, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">    res.render(<span class="string">'addcommodity'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.post(<span class="string">'/addcommodity'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> Commodity = <span class="keyword">global</span>.dbHelper.getModel(<span class="string">'commodity'</span>);</span><br><span class="line">    Commodity.create(&#123;</span><br><span class="line">        name: req.body.name,</span><br><span class="line">        price: req.body.price,</span><br><span class="line">        imgSrc: req.body.imgSrc</span><br><span class="line">    &#125;, <span class="function"><span class="keyword">function</span> <span class="params">(error, doc)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (doc) &#123;</span><br><span class="line">            res.send(<span class="number">200</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.send(<span class="number">404</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>到这里关于商品页的展示和添加就完成了</p>
<p>#购物车结算</p>
<p>##添加商品链接<br>上节课程里我们已经实现了商品的添加和展示，接下来我们开始进行对商品的操作——加入购物车。</p>
<p>首先，商品页的加入购物车按钮、购物车查看按钮添加链接，如下所示：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/addToCart/&lt;%=Commoditys[i]._id%&gt;"</span>&gt;</span>加入购物车<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>我们先定义购物车(cart)集合的Schema属性，包含：uId(用户ID)、cId(商品ID)、cName(商品名称)、cPrice(商品价格)、cImgSrc(商品展示图片路径)、cQuantity(商品数量)、cStatus(商品结算状态，默认为false)，参考如下：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">cart</span>:&#123;</span><br><span class="line">       <span class="attribute">uId</span>: &#123; type: String &#125;,</span><br><span class="line">       <span class="selector-tag">cId</span>: &#123; <span class="attribute">type</span>: String &#125;,</span><br><span class="line">       <span class="selector-tag">cName</span>: &#123; <span class="attribute">type</span>: String &#125;,</span><br><span class="line">       <span class="selector-tag">cPrice</span>: &#123; <span class="attribute">type</span>: String &#125;,</span><br><span class="line">       <span class="selector-tag">cImgSrc</span>: &#123; <span class="attribute">type</span>:String &#125; ,</span><br><span class="line">       <span class="selector-tag">cQuantity</span>: &#123; <span class="attribute">type</span>: Number &#125;,</span><br><span class="line">       <span class="selector-tag">cStatus</span> : &#123; <span class="attribute">type</span>: Boolean, default: false  &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>
<p>以上属性定义我们还是统一放到models.js文件中以方便管理和操作。<br>接着views目录下添加购物车(cart.html)视图页面，参考如下：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/Cart.jpg" alt></p>
<p>购物车页面的展示实现可参考如下贴图：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/cart_refer.jpg" alt></p>
<p>##访问视图<br>接着在routes目录添加cart.js文件(index.js文件中引用)，来定义路由处理规则。</p>
<ol>
<li>比如cart路径的处理，如下：</li>
</ol>
<p>1.1 检测登陆用户是否过期，已过期则跳转login页同时给出提示信息。<br>1.2 通过global.dbHelper.getModel方法获取cart模型。<br>1.3 通过find查询用户所有商品并传入模板，条件：用户ID，结算状态。<br>1.4 贴出部分代码：</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/cart'</span>, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span></span> &#123;</span><br><span class="line">     ......</span><br><span class="line">   Cart.<span class="built_in">find</span>(&#123;<span class="string">"uId"</span>:用户ID,<span class="string">"cStatus"</span>:<span class="literal">false</span>&#125;,<span class="function"><span class="keyword">function</span> <span class="params">(error, docs)</span></span> &#123;</span><br><span class="line">       res.render(<span class="string">'cart'</span>,&#123;carts:docs&#125;);</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>加入购物车按钮链接所对应路径的处理，如：/addToCart/:商品id</li>
</ol>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">"/addToCart/:id"</span>, function(req, res) <span class="meta">&#123;...&#125;</span>);</span><br></pre></td></tr></table></figure>
<p>2.1 通过req.params.id获取商品ID号并检测登陆用户状态。<br>2.2 通过global.dbHelper.getModel方法获取购物车(cart)、商品(commodity)模型。<br>2.3 商品已存在则进行更新操作，贴出部分参考代码：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Cart.<span class="keyword">update</span>(&#123;<span class="string">"uId"</span>:用户ID,<span class="string">"cId"</span>:商品ID&#125;,&#123;$<span class="keyword">se</span><span class="variable">t:</span>&#123;cQuantity:已有数量+<span class="number">1</span>&#125;&#125;</span><br></pre></td></tr></table></figure></p>
<p>2.4商品未存在则进行添加操作，贴出部分代码：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Commodity.findOne(&#123;<span class="string">"_id"</span>: 商品ID&#125;, <span class="keyword">function</span> <span class="built_in">(error</span>,<span class="built_in"> doc</span>) &#123;</span><br><span class="line">        Cart.create(&#123;</span><br><span class="line">            uId: 用户ID,</span><br><span class="line">            cId: 商品ID,</span><br><span class="line">            cName:<span class="built_in"> doc</span><span class="built_in">.name</span>,</span><br><span class="line">            cPrice:<span class="built_in"> doc</span>.price,</span><br><span class="line">            cImgSrc:<span class="built_in"> doc</span>.imgSrc,</span><br><span class="line">            cQuantity : <span class="number">1</span></span><br><span class="line">        &#125;,<span class="keyword">function</span><span class="built_in">(error</span><span class="built_in">,doc</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span><span class="built_in">(doc</span>)&#123;</span><br><span class="line">                res.redirect(<span class="string">'/home'</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>##商品的单选和全选<br>在购物车页面展示还是使用ejs模板(具体实现可参考贴图)来实现用户购物车商品的展示，现期间我们用到了checkbox，这里我们就来简单的实现商品的全选和单选。</p>
<p>首先，简单介绍实现步骤：</p>
<ol>
<li>用户选中全选按钮时，列表内选框全部变为勾选状态。</li>
<li>用户取消全选按钮选中状态时，列表内选框全部取消勾选状态。</li>
<li>列表内选框为全部勾选状态时，全选按钮为选中状态，反之不勾选。</li>
<li>全选按钮未选中情况下，当列表内按钮全部选中则全选按钮也要被选中。<br>对于checkbox按钮如下图所示：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/checkbox.jpg" alt></li>
</ol>
<p>注：data-index属性存储索引值用来获取商品数量，data=id存储商品ID，data-price存储商品价格。</p>
<p>实现全选：为全选框(如id为CheckAll)添加单击事件，这里我们使用prop方法设置checkbox状态、is方法判断checkbox状态，如下参考示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#CheckAll'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> self = $(<span class="keyword">this</span>);</span><br><span class="line">      $(<span class="string">'input[name="chkItem"]'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">         $(<span class="keyword">this</span>).prop(<span class="string">"checked"</span>,self.is(<span class="string">':checked'</span>));</span><br><span class="line">      &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>实现单选：单选框(如name为chkItem)添加单击事件，这里我们使用prop方法设置checkbox状态、not方法判断checkbox状态，如下参考示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'input[name="chkItem"]:checkbox'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> isCheck = $(<span class="string">'input[name="chkItem"]:not(:checked)'</span>).length?<span class="literal">false</span>:<span class="literal">true</span>;</span><br><span class="line">   $(<span class="string">'#CheckAll'</span>).prop(<span class="string">"checked"</span>,isCheck);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>到这里我们就简单实现了按钮的全选和单选，以上方法可供参考也可以自行思路去实现。</p>
<p>##商品的增加和减少<br>前面我们实现了对于商品的单选和全选功能，下面我们就开始实现商品数量的加减。</p>
<p>对于+、-按钮如下图所示：<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/add-subtr.jpg" alt></p>
<p>简单实现步骤如下：</p>
<ol>
<li>定义data-type属性用于区分+、-按钮。</li>
<li>a标签添加单击事件。并同时改变显示框的值。</li>
<li>使用siblings()方法改变同级标签的数量值。<br>具体实现可参考如下方法：</li>
</ol>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'.li-quantity a'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = $(<span class="keyword">this</span>);</span><br><span class="line">    <span class="keyword">var</span> <span class="keyword">type</span> = self.attr(<span class="string">'data-type'</span>),</span><br><span class="line">        num = <span class="built_in">parseFloat</span>(self.siblings(<span class="string">'input'</span>).val());</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">type</span> == <span class="string">'add'</span>)&#123;</span><br><span class="line">          num += <span class="number">1</span>;</span><br><span class="line">     &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">type</span> == <span class="string">'subtr'</span>)&#123;</span><br><span class="line">          <span class="keyword">if</span>(num &gt; <span class="number">1</span>)&#123;</span><br><span class="line">             num -= <span class="number">1</span>;</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">             <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">     &#125;</span><br><span class="line">    self.siblings(<span class="string">'input'</span>).val(num);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>到这里对于商品数量的加、减也实现了，接着我们开始实现用户选中商品的总价格计算功能。</p>
<p>##计算总金额<br>商品的状态选择和数量的加减功能我们已经实现了，选择我们就开始实现当用户选择相关商品时总金额的计算功能。</p>
<p>实现步骤如下：</p>
<ol>
<li>定义公共方法，用于用户不同加、减、全选等操作时皆可调用。</li>
<li>循环列表内所有被选中的checkbox(假设name为chkItem)。</li>
<li>使用checkbox的相应属性值，来获取价格和数量。</li>
<li>定义全局变量(假设为sum)存储总金额并赋值显示。<br>具体方法实现可参考如下内容：</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sum = <span class="number">0</span>;</span><br><span class="line">$(<span class="string">'input[name="chkItem"]:checked'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = $(<span class="keyword">this</span>),</span><br><span class="line">     price = self.attr(<span class="string">'data-price'</span>),</span><br><span class="line">     index = self.attr(<span class="string">'data-index'</span>);</span><br><span class="line">     <span class="keyword">var</span> quantity = $(<span class="string">'#Q'</span>+index).val();</span><br><span class="line">     sum +=(<span class="built_in">parseFloat</span>(price)*<span class="built_in">parseFloat</span>(quantity));</span><br><span class="line"> &#125;);</span><br><span class="line"> $(<span class="string">"金额标签"</span>).html(<span class="string">'￥'</span>+ sum +<span class="string">'.00'</span>);</span><br></pre></td></tr></table></figure>
<p>到这里，选中商品的价格总计功能也就简单实现了。</p>
<p>##商品结算<br>关于结算功能，这里就做简单介绍，当用户点击结算按钮时，计算出被选商品的总金额，给予alert出总金额，数据库则更新相应商品的结算状态和数量，当然你也可以在购物车集合中添加一个用户消费金额的属性来保存所消费的金额总数更好，这里就简单处理了。</p>
<p>具体功能实现这里简单介绍如下：</p>
<ol>
<li>定义公共方法，用于用户不同加、减、全选等操作时皆可调用。</li>
<li>循环列表内所有被选中的checkbox(假设name为chkItem)。</li>
<li>使用checkbox的相应属性值，来获取价格和数量。</li>
<li>定义全局变量(假设为sum)存储总金额并赋值显示。<br>这里贴出部分实现代码，如下：</li>
</ol>
<p>//结算方法内容</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'input[name="chkItem"]:checked'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">     <span class="keyword">var</span> self = $(<span class="keyword">this</span>),</span><br><span class="line">         <span class="comment">//通过data-index属性，获取索引值</span></span><br><span class="line">         index = self.attr(<span class="string">'data-index'</span>),</span><br><span class="line">        <span class="comment">//通过data-id属性，获取对应ID</span></span><br><span class="line">         ID= self.attr(<span class="string">'data-id'</span>);</span><br><span class="line">     <span class="keyword">var</span> 数量= $(<span class="string">'#Q'</span>+index).val();</span><br><span class="line">     <span class="keyword">var</span> data = &#123; <span class="string">"cid"</span>: ID, <span class="string">"cnum"</span>:数量&#125;;</span><br><span class="line">     <span class="comment">//发送数据请求</span></span><br><span class="line">     ...   </span><br><span class="line">&#125;);</span><br><span class="line">alert(<span class="string">'所付金额为：￥'</span>+sum);</span><br><span class="line">location.href = <span class="string">"cart"</span>;</span><br></pre></td></tr></table></figure>
<p>cart.js文件添加对应路由处理如下：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">"路径"</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">   <span class="keyword">var</span> Cart = <span class="keyword">global</span>.dbHelper.getModel(<span class="string">'cart'</span>);</span><br><span class="line">   Cart.update(&#123;<span class="string">"_id"</span>:req.body.ID&#125;,&#123;$set : &#123; cQuantity : req.body.数量,cStatus:<span class="keyword">true</span> &#125;&#125;,<span class="function"><span class="keyword">function</span><span class="params">(error,doc)</span></span>&#123; </span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>##商品删除<br>关于商品的删除功能就简单多了，我们只需获取其ID即可实现对于购物车内商品的删除操作</p>
<p>在购物车商品的展示功能实现时，我们就可以获取其ID，如下参考：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=<span class="string">"/delFromCart/&lt;%=carts[i]._id%&gt;"</span> &gt;删除&lt;/a&gt;</span><br><span class="line">cart.js文件，添加对应路径处理方法，这里简单实现参考如下：</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">"/delFromCart/:id"</span>, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">   <span class="comment">//req.params.id 获取ID号</span></span><br><span class="line">   <span class="keyword">var</span> Cart = <span class="keyword">global</span>.dbHelper.getModel(<span class="string">'cart'</span>);</span><br><span class="line">   Cart.remove(&#123;<span class="string">"_id"</span>:req.params.id&#125;,<span class="function"><span class="keyword">function</span><span class="params">(error,doc)</span></span>&#123;</span><br><span class="line">       <span class="comment">//成功返回1  失败返回0</span></span><br><span class="line">       <span class="keyword">if</span>(doc &gt; <span class="number">0</span>)&#123;</span><br><span class="line">           res.redirect(<span class="string">'/cart'</span>);</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>好，到这里所有功能都已经实现了，赶快好好回味回味所学所悟吧！</p>
<p>附：项目源码下载地址：<a href="https://github.com/hubwiz/example-node" target="_blank" rel="noopener">https://github.com/hubwiz/example-node</a></p>
]]></content>
      
        <categories>
            
            <category> 综合 </category>
            
            <category> 项目 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> MongoDb </tag>
            
            <tag> Nodejs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[ConnectManager网络请求的三层封装（模块－转换－底层）]]></title>
      <url>http://mzeht.com/2016/03/18/ConnectManager%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E7%9A%84%E4%B8%89%E5%B1%82%E5%B0%81%E8%A3%85%EF%BC%88%E6%A8%A1%E5%9D%97%EF%BC%8D%E8%BD%AC%E6%8D%A2%EF%BC%8D%E5%BA%95%E5%B1%82%EF%BC%89/</url>
      <content type="html"><![CDATA[<p>基于httpclient，java封装一套Android网络请求框架<br><a id="more"></a><br>调用层－数据解析层－底层</p>
<p>##调用层</p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">void</span> <span class="title">getSystemToken</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        GetSystemTokenParam param = <span class="keyword">new</span> GetSystemTokenParam();</span><br><span class="line">        param.loginId=Constants.LOGINID;</span><br><span class="line">        String password=mPasswordView.getText().toString();</span><br><span class="line">        String encpwd=PasswordUtil.getEncPwd(Constants.LOGINID, password);</span><br><span class="line">        param.password= encpwd;</span><br><span class="line"><span class="comment">//        param.password= password;</span></span><br><span class="line">        L.i(<span class="string">"systemID"</span>,mUsernameView.getText().toString());</span><br><span class="line">        L.i(<span class="string">"明文密码"</span>,mPasswordView.getText().toString());</span><br><span class="line">        L.i(<span class="string">"loginID"</span>,Constants.LOGINID);</span><br><span class="line">        L.i(<span class="string">"password 加密结果为"</span>,encpwd);</span><br><span class="line">        L.i(<span class="string">"password 解密结果为"</span>,PasswordUtil.getDecPwd(Constants.LOGINID,encpwd));</span><br><span class="line">        ConnectManager.getInstance().getSystemToken(param,Tokencallback);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> AbstractRequestListener&lt;GetSystemTokenBean&gt; Tokencallback = <span class="keyword">new</span> AbstractRequestListener&lt;GetSystemTokenBean&gt;() &#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onComplete</span><span class="params">(GetSystemTokenBean bean)</span> </span>&#123;</span><br><span class="line">            tokenBean = bean;</span><br><span class="line">            tHandler.sendEmptyMessage(ActivityForResultUtil.REQUEST_DATA_SUCCESS);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onError</span><span class="params">(CustomError customError)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            Message msg = tHandler.obtainMessage();</span><br><span class="line">            msg.obj = customError;</span><br><span class="line">            msg.what = ActivityForResultUtil.REQUEST_DATA_ERROR;</span><br><span class="line">            tHandler.sendMessage(msg);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">onFault</span><span class="params">(CustomError fault)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">            Message msg = tHandler.obtainMessage();</span><br><span class="line">            msg.obj = fault;</span><br><span class="line">            msg.what = ActivityForResultUtil.REQUEST_DATA_FAULT;</span><br><span class="line">            tHandler.sendMessage(msg);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;;</span><br></pre></td></tr></table></figure>
<p>##数据转化层<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 请求systemToken</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> params</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> callback</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> getSystemToken(<span class="keyword">final</span> GetSystemTokenParam params,</span><br><span class="line">                            <span class="keyword">final</span> AbstractRequestListener&lt;GetSystemTokenBean&gt; callback) &#123;</span><br><span class="line">       exector.execute(<span class="keyword">new</span> Runnable() &#123;</span><br><span class="line"></span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   String method = params.getParam().getString(<span class="string">"method"</span>);</span><br><span class="line">                   String response = HttpConnectionUtil.openUrl(</span><br><span class="line">                           Constants.SERVER_URL + method, <span class="string">"GET"</span>,</span><br><span class="line">                           params.getParam(),<span class="keyword">false</span>);</span><br><span class="line">                   GetSystemTokenBean bean = GetSystemTokenBean.getSystemTokenBean(response);</span><br><span class="line">                   <span class="keyword">if</span> (callback != <span class="keyword">null</span>) &#123;</span><br><span class="line">                       callback.onComplete(bean);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">catch</span> (RuntimeException e) &#123;</span><br><span class="line">                   e.printStackTrace();</span><br><span class="line">                   <span class="keyword">if</span> (callback != <span class="keyword">null</span>) &#123;</span><br><span class="line">                       callback.onFault(<span class="keyword">new</span> CustomError(network_error));</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">catch</span> (JSONException e) &#123;</span><br><span class="line">                   e.printStackTrace();</span><br><span class="line">                   <span class="keyword">if</span> (callback != <span class="keyword">null</span>) &#123;</span><br><span class="line">                       callback.onError(<span class="keyword">new</span> CustomError(json_error));</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<p>##网络底层<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 发送http请求</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * @param url</span></span><br><span class="line"><span class="comment">    * @param method</span></span><br><span class="line"><span class="comment">    *            GET 或 POST</span></span><br><span class="line"><span class="comment">    * @param params</span></span><br><span class="line"><span class="comment">    * @return</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> openUrl(<span class="keyword">String</span> url, <span class="keyword">String</span> method, Bundle params,boolean Token) &#123;</span><br><span class="line">       <span class="keyword">if</span> (method.equals(<span class="string">"GET"</span>)) &#123;</span><br><span class="line">           <span class="keyword">if</span> (params != <span class="literal">null</span>) &#123;</span><br><span class="line">               url = url + <span class="string">"?"</span> + encodeUrl(params);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">String</span> response = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">           L.i(method + <span class="string">" URL: "</span> + url);</span><br><span class="line">           HttpClient httpClient = HttpConnectionUtil.getNewHttpClient();</span><br><span class="line">           HttpGet httpGet = <span class="keyword">new</span> <span class="type">HttpGet</span>(url);</span><br><span class="line">           <span class="keyword">if</span>(Token==<span class="literal">false</span>)&#123;</span><br><span class="line"></span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"></span><br><span class="line">               httpGet.setHeader(<span class="string">"systemToken"</span>, Constants.SYSTEMTOKEN);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">//连接超时</span></span><br><span class="line">           httpClient.getParams().setParameter(CoreConnectionPNames.CONNECTION_TIMEOUT, <span class="number">20000</span>);</span><br><span class="line">           <span class="comment">// 读取超时</span></span><br><span class="line">           httpClient.getParams().setParameter(CoreConnectionPNames.SO_TIMEOUT, <span class="number">20000</span>);</span><br><span class="line"></span><br><span class="line">           HttpResponse resp = httpClient.execute(httpGet);</span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (resp.getStatusLine().getStatusCode() != HttpStatus.SC_OK) &#123;</span><br><span class="line">               L.i(LOG_TAG, <span class="string">"httpGet fail, status code = "</span> + resp.getStatusLine().getStatusCode());</span><br><span class="line"></span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               response = EntityUtils.toString(resp.getEntity());</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line">       &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">           <span class="keyword">throw</span> <span class="keyword">new</span> <span class="type">RuntimeException</span>(e.getMessage(), e);</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       L.i(<span class="string">"LOG_TAG"</span>+response);</span><br><span class="line">       <span class="keyword">return</span> response;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure></p>
<p>#具体封装</p>
<p>##AbstractRequestListener<br>public abstract class AbstractRequestListener<t extends object>{</t></p>
<pre><code>/**
 * 将response请求解析为针对具体请求的bean
 *
 * @param response
 *             请求完成后的响应字符串
 * @return
 *             若解析成功，返回解析后的对象，否则返回null
 */
@SuppressWarnings(&quot;unchecked&quot;)
public T parse(String response) {
    Class&lt;?&gt; c = this.getGenericType();
    try {
        Constructor&lt;T&gt; constructor = (Constructor&lt;T&gt;) c.getDeclaredConstructor(String.class);
        T result = constructor.newInstance(response);
        return result;
    } catch (Exception e) {
        e.printStackTrace();
    }
    return null;
}

/**
 * 获取T的类型
 * @param
 * @return
 */
private Class&lt;?&gt; getGenericType() {
    Type genType = getClass().getGenericSuperclass();
    if (!(genType instanceof ParameterizedType)) {
        return Object.class;
    }
    Type[] params = ((ParameterizedType) genType).getActualTypeArguments();
    if (params.length &lt; 1) {
        throw new RuntimeException(&quot;Index outof bounds&quot;);
    }
    if (!(params[0] instanceof Class)) {
        return Object.class;
    }
    return (Class&lt;?&gt;) params[0];
}

 /**
 * 请求完成后以对象形式返回服务器的响应的结果
 *
 * @param bean
 *             服务器返回的响应字符串解析后得到的对象
 *        
 */
public abstract void onComplete(T bean);

/**
 * 服务器返回了错误结果，已经正确的链接上了服务器但有错误如：缺少参数.等
 *
 * @param customError
 */
public abstract void onError(CustomError customError);

/**
 * 在请求期间发生了严重问题（如：网络故障、访问的地址不存在等）
 *
 * @param fault
 */
public abstract void onFault(CustomError fault);
</code></pre><p>}</p>
<p>##CustomError<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomError</span> <span class="keyword">extends</span> <span class="title">RuntimeException</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 错误码</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">	<span class="keyword">private</span> <span class="keyword">int</span> mErrorCode;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/** 原始响应URL */</span></span><br><span class="line">	<span class="keyword">private</span> String mResponse;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">CustomError</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">CustomError</span><span class="params">(String errorMessage)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(errorMessage);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">CustomError</span><span class="params">(<span class="keyword">int</span> errorCode, String errorMessage, String orgResponse)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">super</span>(errorMessage);</span><br><span class="line">		<span class="keyword">this</span>.mErrorCode = errorCode;</span><br><span class="line">		<span class="keyword">this</span>.mResponse = orgResponse;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getOrgResponse</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> mResponse;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">int</span>  <span class="title">getErrorCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> mErrorCode;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="string">"errorCode:"</span> + <span class="keyword">this</span>.mErrorCode + <span class="string">"\nerrorMessage:"</span></span><br><span class="line">				+ <span class="keyword">this</span>.getMessage() + <span class="string">"\norgResponse:"</span> + <span class="keyword">this</span>.mResponse;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 将服务器返回的errorMessage转换成定义的易于理解的字符串</span></span><br><span class="line"><span class="comment">	 *</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> errorCode</span></span><br><span class="line"><span class="comment">	 * 			服务器返回的错误代码</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> errorMessage</span></span><br><span class="line"><span class="comment">	 * 			服务器返回的错误字符串，和错误代码一一对应</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">interpretErrorMessage</span><span class="params">(<span class="keyword">int</span> errorCode, String errorMessage)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">switch</span> (errorCode)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">/**</span></span><br><span class="line"><span class="comment">			 * 错误处理</span></span><br><span class="line"><span class="comment">			 */</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">return</span> errorMessage;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>##RequestParam<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> */</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">RequestParam</span> &#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 设置请求参数</span></span><br><span class="line"><span class="comment">	 * @return</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">abstract</span> Bundle <span class="title">getParam</span>(<span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>##ResponseBean<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title">ResponseBean</span> <span class="title">implements</span> <span class="title">Serializable</span> &#123;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">public</span> String response;</span><br><span class="line">	<span class="comment">//</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ResponseBean</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>	&#123;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="title">ResponseBean</span>(<span class="params">String response</span>) throws JSONException</span> &#123;</span><br><span class="line">		<span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">if</span>(response == <span class="literal">null</span> || response.<span class="keyword">equals</span>(<span class="string">""</span>) ||response.<span class="keyword">equals</span>(<span class="string">"null"</span>))</span><br><span class="line">			<span class="keyword">throw</span> <span class="keyword">new</span> JSONException(<span class="string">"数据解析异常"</span>);</span><br><span class="line"></span><br><span class="line">		<span class="keyword">this</span>.response = response;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setResponse</span>(<span class="params">String response</span>)</span>&#123;</span><br><span class="line">		<span class="keyword">this</span>.response = response;</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">getResponse</span>(<span class="params"></span>)</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> response;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 保存</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">saveModel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>	&#123;</span><br><span class="line">		   L.i(<span class="string">"save_model"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 更新</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span>  <span class="keyword">void</span> <span class="title">updateModel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>	&#123;</span><br><span class="line">		 L.i(<span class="string">"update_model"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 删除</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">protected</span>   <span class="keyword">void</span> <span class="title">deleteModel</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>	&#123;</span><br><span class="line">		 L.i(<span class="string">"delete_model"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>#用法<br>参见Demo，给别人做的毕业设计。</p>
<p>Demo地址<a href="https://github.com/mzeht/ZhiHuiYun" target="_blank" rel="noopener">https://github.com/mzeht/ZhiHuiYun</a></p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> 设计模式 </tag>
            
            <tag> 网络通讯 </tag>
            
            <tag> 封装 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[express框架]]></title>
      <url>http://mzeht.com/2016/03/17/express%E6%A1%86%E6%9E%B6/</url>
      <content type="html"><![CDATA[<p>#基础知识</p>
<p>##Express介绍<br>　　npm提供了大量的第三方模块，其中不乏许多Web框架，比如我们本章节要讲述的一个轻量级的Web框架 ——— Express。</p>
<p>　　Express是一个简洁、灵活的node.js Web应用开发框架, 它提供一系列强大的功能，比如：模板解析、静态文件服务、中间件、路由控制等等,并且还可以使用插件或整合其他模块来帮助你创建各种 Web和移动设备应用,是目前最流行的基于Node.js的Web开发框架，并且支持Ejs、jade等多种模板，可以快速地搭建一个具有完整功能的网站。</p>
<a id="more"></a>
<p>　　好，下面我们就开始吧！</p>
<p>NPM安装</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> express</span><br></pre></td></tr></table></figure>
<p>获取、引用</p>
<figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">var express</span> = require(<span class="string">'express'</span>);</span><br><span class="line"><span class="attribute">var app</span> = express();</span><br></pre></td></tr></table></figure>
<p>通过变量“app”我们就可以调用express的各种方法了，好戏刚刚开始，继续加油吧！</p>
<p>##创建应用<br>　　认识了Express框架，我们开始创建我们的第一个express应用。</p>
<p>　　在我们的默认项目主文件app.js添加如下内容：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">request, response</span>) </span>&#123;  </span><br><span class="line">   response.send(<span class="string">'Hello World!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>　　说明：在后面课程学习中，我们会统一使用80端口用于监听请求。</p>
<p>　　添加完毕之后，通过右侧栏的“测试地址”来查看浏览器内容，当看到“Hello World!”内容就表明一个简单的express应用已经创建成功了。
　　</p>
<p>##get请求<br>　前面我们实现了一个简单的express应用，下面我们就开始具体讲述它的具体实现，首先我们先来学习Express的常用方法。</p>
<p>　　get方法 —— 根据请求路径来处理客户端发出的GET请求。</p>
<p>　　格式：app.get(path,function(request, response));</p>
<p>　　path为请求的路径，第二个参数为处理请求的回调函数，有两个参数分别是request和response，代表请求信息和响应信息。</p>
<p>如下示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">   response.send(<span class="string">'Welcome to the homepage!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">'/about'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">   response.send(<span class="string">'Welcome to the about page!'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">"*"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">request, response</span>) </span>&#123;</span><br><span class="line">    response.send(<span class="string">"404 error!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>　　上面示例中，指定了about页面路径、根路径和所有路径的处理方法。并且在回调函数内部，使用HTTP回应的send方法，表示向浏览器发送一个字符串。</p>
<p>　　参照以上代码，试试自己设定一个get请求路径，然后浏览器访问该地址是否可以请求成功。
　　</p>
<p>##all函数的基本用法<br>　　和get函数不同app.all()函数可以匹配所有的HTTP动词，也就是说它可以过滤所有路径的请求，如果使用all函数定义中间件，那么就相当于所有请求都必须先通过此该中间件。</p>
<p>格式：app.all(path,function(request, response));</p>
<p>如下所示，我们使用all函数在请求之前设置响应头属性。</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">var express = <span class="built_in">require</span>(<span class="string">"express"</span>);</span><br><span class="line">var app = express();</span><br><span class="line"> </span><br><span class="line">app.all(<span class="string">"*"</span>, <span class="function"><span class="keyword">function</span><span class="params">(request, response, next)</span></span> &#123;</span><br><span class="line">    response.writeHead(<span class="number">200</span>, &#123; <span class="string">"Content-Type"</span>: <span class="string">"text/html;charset=utf-8"</span> &#125;);      //设置响应头属性值</span><br><span class="line">    <span class="built_in">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">"/"</span>, <span class="function"><span class="keyword">function</span><span class="params">(request, response)</span></span> &#123;</span><br><span class="line">    response.<span class="keyword">end</span>(<span class="string">"欢迎来到首页!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">"/about"</span>, <span class="function"><span class="keyword">function</span><span class="params">(request, response)</span></span> &#123;</span><br><span class="line">    response.<span class="keyword">end</span>(<span class="string">"欢迎来到about页面!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">"*"</span>, <span class="function"><span class="keyword">function</span><span class="params">(request, response)</span></span> &#123;</span><br><span class="line">    response.<span class="keyword">end</span>(<span class="string">"404 - 未找到!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>　　上面代码参数中的“*”表示对所有路径有效，这个方法在给特定前缀路径或者任意路径上处理时会特别有用，不管我们请求任何路径都会事先经过all函数。
　　</p>
<p>##use基本用法1<br>use是express调用中间件的方法，它返回一个函数。</p>
<p>格式：app.use([path], function(request, response, next){});</p>
<p>可选参数path默认为”/“。</p>
<p>1.使用中间件</p>
<p>app.use(express.static(path.join(__dirname, ‘/‘)));<br>如上呢，我们就使用use函数调用express中间件设定了静态文件目录的访问路径(这里假设为根路径)。</p>
<p>2.如何连续调用两个中间件呢，如下示例：</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">var express = require(<span class="comment">'express');</span></span><br><span class="line">var app = express();</span><br><span class="line"> </span><br><span class="line">app.use(<span class="keyword">function</span>(<span class="built_in">request</span>, <span class="built_in">response</span>, <span class="keyword">next</span>)&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(<span class="string">"method："</span>+<span class="built_in">request</span>.method+<span class="string">" ==== "</span>+<span class="string">"url："</span>+<span class="built_in">request</span>.url);</span><br><span class="line">    <span class="keyword">next</span>();</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.use(<span class="keyword">function</span>(<span class="built_in">request</span>, <span class="built_in">response</span>)&#123;</span><br><span class="line">    <span class="built_in">response</span>.writeHead(<span class="number">200</span>, &#123; <span class="string">"Content-Type"</span>: <span class="string">"text/html;charset=utf-8"</span> &#125;);</span><br><span class="line">    <span class="built_in">response</span>.<span class="keyword">end</span>(<span class="comment">'示例：连续调用两个中间件');</span></span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>回调函数的next参数，表示接受其他中间件的调用，函数体中的next()，表示将请求数据传递给下一个中间件。</p>
<p>上面代码先调用第一个中间件，在控制台输出一行信息，然后通过next()，调用第二个中间件，输出HTTP回应。由于第二个中间件没有调用next方法，所以req对象就不再向后传递了。</p>
<p>##use基本用法2<br>use方法不仅可以调用中间件，还可以根据请求的网址，返回不同的网页内容，如下示例：</p>
<figure class="highlight vbscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">var express = require(<span class="string">"express"</span>);</span><br><span class="line">var app = express();</span><br><span class="line"> </span><br><span class="line">app.use(<span class="keyword">function</span>(<span class="built_in">request</span>, <span class="built_in">response</span>, <span class="keyword">next</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span>(<span class="built_in">request</span>.url == <span class="string">"/"</span>) &#123;</span><br><span class="line">      <span class="built_in">response</span>.send(<span class="string">"Welcome to the homepage!"</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">next</span>();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.use(<span class="keyword">function</span>(<span class="built_in">request</span>, <span class="built_in">response</span>, <span class="keyword">next</span>) &#123;</span><br><span class="line">   <span class="keyword">if</span>(<span class="built_in">request</span>.url == <span class="string">"/about"</span>) &#123;</span><br><span class="line">     <span class="built_in">response</span>.send(<span class="string">"Welcome to the about page!"</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">     <span class="keyword">next</span>();</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.use(<span class="keyword">function</span>(<span class="built_in">request</span>, <span class="built_in">response</span>) &#123;</span><br><span class="line">  <span class="built_in">response</span>.send(<span class="string">"404 error!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>上面代码通过request.url属性，判断请求的网址，从而返回不同的内容。</p>
<p>##回调函数<br>　　Express回调函数有两个参数，分别是request(简称req)和response(简称res)，request代表客户端发来的HTTP请求，response代表发向客户端的HTTP回应，这两个参数都是对象。示例如下:</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span><span class="params">(req, res)</span> </span>&#123;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>##获取主机名、路径名<br>　　今天我们就先来学习如何使用req对象来处理客户端发来的HTTP请求。</p>
<p>1.req.host返回请求头里取的主机名(不包含端口号)。</p>
<p>2.req.path返回请求的URL的路径名。</p>
<p>如下示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">8000</span>);</span><br><span class="line"></span><br><span class="line">app.get(<span class="string">"*"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.path);</span><br><span class="line">    <span class="comment">//console.log(req.host);</span></span><br><span class="line">    res.send(<span class="string">"req.host获取主机名，req.path获取请求路径名!"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>试一试在浏览器中输入任意一个请求路径，通过req查看主机名或请求路径。</p>
<p><a href="http://localhost:8000/about" target="_blank" rel="noopener">http://localhost:8000/about</a></p>
<figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">/about</span></span><br><span class="line"><span class="string">/favicon.ico</span></span><br></pre></td></tr></table></figure>
<p>##query基本用法<br>　　query是一个可获取客户端get请求路径参数的对象属性，包含着被解析过的请求参数对象，默认为{}。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">"*"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.query.参数名);</span><br><span class="line">    res.send(<span class="string">"测试query属性!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>通过req.query获取get请求路径的对象参数值。</p>
<p>格式：req.query.参数名；请求路径如下示例：</p>
<blockquote>
<p>例1： /search?n=Lenka</p>
</blockquote>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">req<span class="selector-class">.query</span><span class="selector-class">.n</span>  <span class="comment">// "Lenka"</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>例2： /shoes?order=desc&amp;shoe[color]=blue&amp;shoe[type]=converse</p>
</blockquote>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">req<span class="selector-class">.query</span><span class="selector-class">.order</span>  <span class="comment">// "desc"</span></span><br><span class="line"> </span><br><span class="line">req<span class="selector-class">.query</span><span class="selector-class">.shoe</span><span class="selector-class">.color</span>  <span class="comment">// "blue"</span></span><br><span class="line"> </span><br><span class="line">req<span class="selector-class">.query</span><span class="selector-class">.shoe</span><span class="selector-class">.type</span>  <span class="comment">// "converse"</span></span><br></pre></td></tr></table></figure>
<p>试一试get请求一个带参数路径，使用“req.query.参数名”方法获取请求参数值。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">app</span>.<span class="built_in">get</span>('/<span class="keyword">about</span>',function(req,res)&#123;</span><br><span class="line">    console.<span class="built_in">log</span>(req.<span class="keyword">query</span>.name);</span><br><span class="line">    res.send(<span class="string">"name="</span>+req.<span class="keyword">query</span>.name);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><a href="http://localhost:8000/about?name=mzeht&amp;name=jj" target="_blank" rel="noopener">http://localhost:8000/about?name=mzeht&amp;name=jj</a></p>
<p>name=mzeht,jj</p>
<p>##param基本用法<br>和属性query一样，通过req.param我们也可以获取被解析过的请求参数对象的值。</p>
<p>格式：req.param(“参数名”)；请求路径如下示例：</p>
<p>例1： 获取请求根路径的参数值，如/?n=Lenka，方法如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">"/"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.param(<span class="string">"n"</span>)); <span class="comment">//Lenka</span></span><br><span class="line">    res.send(<span class="string">"使用req.param属性获取请求根路径的参数对象值!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>例2：我们也可以获取具有相应路由规则的请求对象，假设路由规则为 /user/:name/，请求路径/user/mike,如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">"/user/:name/"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.param(<span class="string">"name"</span>)); <span class="comment">//mike</span></span><br><span class="line">    res.send(<span class="string">"使用req.param属性获取具有路由规则的参数对象值!"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>PS：所谓“路由”，就是指为不同的访问路径，指定不同的处理方法。<br>如果没有相应参数的数据 req.param 返回值为undefined;</p>
<p>看了上面的示例，试一试使用req.param属性解析一个请求路径对象，并获取请求参数值。</p>
<p>##params基本用法<br>和param相似，但params是一个可以解析包含着有复杂命名路由规则的请求对象的属性。</p>
<p>格式：req.params.参数名；</p>
<p>例1. 如上课时请求根路径的例子，我们就可以这样获取，如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">"/user/:name/"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.params.name); <span class="comment">//mike</span></span><br><span class="line">    res.send(<span class="string">"使用req.params属性获取具有路由规则的参数对象值!"</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>查看运行结果，和param属性功能是一样的，同样获取name参数值。</p>
<p>例2：当然我们也可以请求复杂的路由规则，如/user/:name/:id，假设请求地址为：/user/mike/123，如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">"/user/:name/:id"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(req.params.id); <span class="comment">//"123"</span></span><br><span class="line">    res.send(<span class="string">"使用req.params属性复杂路由规则的参数对象值!"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>对于请求地址具有路由规则的路径来说，属性params比param属性是不是又强大了那么一点点呢！</p>
<p>##send基本用法<br>send()方法向浏览器发送一个响应信息，并可以智能处理不同类型的数据。格式如下：</p>
<p>res.send([body|status], [body]);<br>1.当参数为一个String时，Content-Type默认设置为”text/html”。</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">res</span><span class="selector-class">.send</span>(<span class="string">'Hello World'</span>); <span class="comment">//Hello World</span></span><br></pre></td></tr></table></figure>
<p>2.当参数为Array或Object时，Express会返回一个JSON。</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">res.send(&#123; user: <span class="string">'tobi'</span> &#125;); <span class="regexp">//</span>&#123;<span class="string">"user"</span>:<span class="string">"tobi"</span>&#125;</span><br><span class="line">res.send([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]); <span class="regexp">//</span>[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br></pre></td></tr></table></figure>
<p>3.当参数为一个Number时，并且没有上面提到的任何一条在响应体里，Express会帮你设置一个响应体，比如：200会返回字符”OK”。</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">res</span><span class="selector-class">.send</span>(<span class="number">200</span>); <span class="comment">// OK</span></span><br><span class="line"><span class="selector-tag">res</span><span class="selector-class">.send</span>(<span class="number">404</span>); <span class="comment">// Not Found</span></span><br><span class="line"><span class="selector-tag">res</span><span class="selector-class">.send</span>(<span class="number">500</span>); <span class="comment">// Internal Server Error</span></span><br></pre></td></tr></table></figure>
<p>send方法在输出响应时会自动进行一些设置，比如HEAD信息、HTTP缓存支持等等。</p>
<p>ps:</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Fri</span>, 18 <span class="selector-tag">Mar</span> 2016 11<span class="selector-pseudo">:02</span><span class="selector-pseudo">:43</span> <span class="selector-tag">GMT</span> <span class="selector-tag">express</span> <span class="selector-tag">deprecated</span> <span class="selector-tag">req</span><span class="selector-class">.param</span>(<span class="selector-tag">name</span>): <span class="selector-tag">Use</span> <span class="selector-tag">req</span><span class="selector-class">.params</span>, <span class="selector-tag">req</span><span class="selector-class">.body</span>, <span class="selector-tag">or</span> <span class="selector-tag">req</span><span class="selector-class">.query</span> <span class="selector-tag">instead</span> <span class="selector-tag">at</span> <span class="selector-tag">app</span><span class="selector-class">.js</span><span class="selector-pseudo">:37</span><span class="selector-pseudo">:21</span></span><br><span class="line"><span class="selector-tag">Fri</span>, 18 <span class="selector-tag">Mar</span> 2016 11<span class="selector-pseudo">:02</span><span class="selector-pseudo">:43</span> <span class="selector-tag">GMT</span> <span class="selector-tag">express</span> <span class="selector-tag">deprecated</span> <span class="selector-tag">req</span><span class="selector-class">.param</span>(<span class="selector-tag">name</span>): <span class="selector-tag">Use</span> <span class="selector-tag">req</span><span class="selector-class">.params</span>, <span class="selector-tag">req</span><span class="selector-class">.body</span>, <span class="selector-tag">or</span> <span class="selector-tag">req</span><span class="selector-class">.query</span> <span class="selector-tag">instead</span> <span class="selector-tag">at</span> <span class="selector-tag">app</span><span class="selector-class">.js</span><span class="selector-pseudo">:38</span><span class="selector-pseudo">:21</span></span><br><span class="line"><span class="selector-tag">Fri</span>, 18 <span class="selector-tag">Mar</span> 2016 11<span class="selector-pseudo">:02</span><span class="selector-pseudo">:43</span> <span class="selector-tag">GMT</span> <span class="selector-tag">express</span> <span class="selector-tag">deprecated</span> <span class="selector-tag">res</span><span class="selector-class">.send</span>(<span class="selector-tag">status</span>): <span class="selector-tag">Use</span> <span class="selector-tag">res</span><span class="selector-class">.sendStatus</span>(<span class="selector-tag">status</span>) <span class="selector-tag">instead</span> <span class="selector-tag">at</span> <span class="selector-tag">app</span><span class="selector-class">.js</span><span class="selector-pseudo">:42</span><span class="selector-pseudo">:9</span></span><br></pre></td></tr></table></figure>
<p>#准备登陆</p>
<p>##模板引擎<br>　　从本节课程开始我们要使用express框架实现一个简单的用户登陆功能，让我们先准备一下相关资源。</p>
<p>　　在nodejs中使用express框架，它默认的是ejs和jade渲染模板，今天我们就以ejs模板为例，讲述模板渲染网页模板的基础功能。</p>
<p>1.ejs模板安装方法</p>
<p>npm install ejs<br>2.目录下安装好了之后，如何调用呢，如下所示：</p>
<p>//指定渲染模板文件的后缀名为ejs<br>app.set(‘view engine’, ‘ejs’);<br>默认ejs模板只支持渲染以ejs为扩展名的文件，可能在使用的时候会觉得它的代码书写方式很不爽还是想用html的形式去书写，该怎么办呢，这时就得去修改模板引擎了，也就会用到express的engine函数。</p>
<p>engine注册模板引擎的函数，处理指定的后缀名文件。</p>
<p>// 修改模板文件的后缀名为html<br>app.set( ‘view engine’, ‘html’ );<br>// 运行ejs模块<br>app.engine( ‘.html’, require( ‘ejs’ ).<strong>express );<br>“</strong>express”，ejs模块的一个公共属性，表示要渲染的文件扩展名。</p>
<p>##静态资源<br>由于环境的限制，这里我们就不使用静态资源了，但是实际开发中我们肯定会用到，具体使用规则已在下面列出，可参考。</p>
<p>如果要在网页中加载静态文件（css、js、img），就需要另外指定一个存放静态文件的目录，当浏览器发出非HTML文件请求时，服务器端就会到这个目录下去寻找相关文件。</p>
<p>1.项目目录下添加一个存放静态文件的目录为public。</p>
<p>2.在public目录下在添加三个存放js、css、img的目录，相应取名为javascripts、stylesheets、images。</p>
<p>3.然后就可以把相关文件放到相应的目录下了。</p>
<p>4.比如，浏览器发出如下的样式表请求：</p>
<p> <link href="/stylesheets/bootstrap.min.css" rel="stylesheet" media="screen"><br>服务器端就到public/stylesheets/目录中寻找bootstrap.min.css文件。</p>
<p>有了静态目录文件，我们还得在启动文件里告诉它这个静态文件路径，需要指定一下，如下所示：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="keyword">use</span>(express.<span class="keyword">static</span>(<span class="keyword">require</span>(<span class="string">'path'</span>).join(__dirname, <span class="string">'public'</span>)));</span><br></pre></td></tr></table></figure>
<p>PS：express.static —— 指定静态文件的查找目录。</p>
<p>使用use函数调用中间件指定express静态访问目录，’public’就是我们我们新建的用来存放静态文件的总目录。</p>
<p>##添加视图<br>好，下面我们就来添加网页模板了，项目中我们会新建一个目录用来单独存放模板文件，这里我们就统一放到根路径上了。</p>
<p>下面开始新建index.html、login.html、home.html三个页面。</p>
<p>index.html页面参考内容如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height:400px;width:550px;margin:50px auto;margin-left:auto;border:solid 1px;background: rgb(246, 246, 253);"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-left: 35px;"</span>&gt;</span></span><br><span class="line"># 首页</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span>  <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">style</span>=<span class="string">"margin-top: 90px;margin-left: 60px;"</span>&gt;</span></span><br><span class="line"># 欢迎进入首页！</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-top: 145px;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"登 陆"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>login.html页面参考内容如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>用户登录<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"http://code.jquery.com/jquery-2.1.1.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">...</span><br><span class="line"> </span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height:300px;width:350px;margin:100px auto;margin-left:auto;border:solid 1px;background: rgb(246, 246, 253);"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"width:200px;margin:auto;margin-top:50px;"</span>&gt;</span></span><br><span class="line"># 用户登录</span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span>  <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"post"</span> &gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">style</span>=<span class="string">"margin: 20px 0px;"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-top:30px;margin-left:125px;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"登 陆"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>home.html页面参考内容如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height:400px;width:550px;margin:50px auto;margin-left:auto;border:solid 1px;background: rgb(246, 246, 253);"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-left: 45px;"</span>&gt;</span></span><br><span class="line"># 主页</span><br><span class="line">        <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"#"</span>  <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">style</span>=<span class="string">"margin-top: 90px;"</span>&gt;</span></span><br><span class="line"># 登陆成功！</span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"margin-top: 145px;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"退 出"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>和静态文件一样，我们也要设置views存放的目录，如下：<br>// 设定views变量，意为视图存放的目录</p>
<figure class="highlight sqf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app.<span class="built_in">set</span>(<span class="string">'views'</span>, <span class="variable">__dirname</span>);</span><br></pre></td></tr></table></figure>
<p>有了网页模板和指定目录，下面就可以访问它们了。</p>
<p>##访问视图<br>我们要如何对网页模板进行访问呢，这就要用到res对象的render函数了。</p>
<p>1.render函数，对网页模板进行渲染。</p>
<p>2.格式：res.render(view, [locals], callback);</p>
<p>3.参数view就是模板的文件名callback用来处理返回的渲染后的字符串，options、callback可省略，在渲染模板时locals可为其模板传入变量值，在模板中就可以调用所传变量了，在后面我们会讲述具体使用方法，也可先自行使用看其效果。</p>
<p>4.比如渲染我们刚刚添加的index.html页面，我们就可以在app.js中写入如下内容：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</span><br><span class="line"> </span><br><span class="line">app.set(<span class="string">'views'</span>, __dirname);</span><br><span class="line"> </span><br><span class="line">app.set( <span class="string">'view engine'</span>, <span class="string">'html'</span> );</span><br><span class="line">app.engine( <span class="string">'.html'</span>, <span class="built_in">require</span>( <span class="string">'ejs'</span> ).__express );</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>) </span>&#123;</span><br><span class="line">    res.render(<span class="string">'index'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">8000</span>);</span><br></pre></td></tr></table></figure>
<p>运行之后在测试地址我们就可以看到所渲染的index页面了，试一试其他页面是否也可渲染成功？</p>
<p>##redirect基本用法<br>redirect方法允许网址的重定向，跳转到指定的url并且可以指定status，默认为302方式。</p>
<p>格式：res.redirect([status], url);</p>
<p>例1：使用一个完整的url跳转到一个完全不同的域名。</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.redirect(<span class="string">"http://www.hubwiz.com"</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>例2：跳转指定页面，比如登陆页，如下：</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">res.redirect(<span class="string">"login"</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>后面我们开始实现登陆功能，先试一下redirect重定向，跳转到我们网站如何？</p>
<p>#实现登陆</p>
<p>##访问视图<br>前面我们已经添加了视图模板并学习了访问视图的方法，那我们就先回顾一下。</p>
<p>1.参考以下代码，地址栏访问这几个请求路径查看是否可以成功。</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">    res.render(<span class="string">'index'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">    res.render(<span class="string">'login'</span>);</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">'/home'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">    res.render(<span class="string">'home'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>当浏览器看到了相应的视图页面就说明我们的代码是没有问题的，继续加油吧！</p>
<p>##用户登陆<br>前面我们学习了express的get请求方法，今天我们就学习它的post请求方法。</p>
<p>1.post方法 —— 根据请求路径来处理客户端发出的Post请求。</p>
<p>2.格式：app.post(path,function(req, res));</p>
<p>3.和get方法一样，path为请求的路径，第二个参数为处理请求的回调函数，req和res分别代表请求信息和响应信息。</p>
<p>4.例如处理login的post请求，如下示例</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>了解了post方法，下面我们就开始使用post来实现简单的用户登陆功能。</p>
<p>##body基本用法<br>实现登陆之前我们先来了解一个属性 —— body。</p>
<p>body属性解析客户端的post请求参数，通过它可获取请求路径的参数值。</p>
<p>格式：req.body.参数名；</p>
<p>下面我们就来测试body属性的功能，做一些准备工作。</p>
<p>修改login.html，为登陆按钮增加登陆事件。</p>
<figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;input <span class="keyword">type</span>=<span class="string">"button"</span> onclick=<span class="string">"login();"</span> value=<span class="string">"登 陆"</span>&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> username = $(<span class="string">'#username'</span>).val();</span><br><span class="line">   <span class="keyword">var</span> data = &#123; <span class="string">"username"</span>: username &#125;;</span><br><span class="line">   $.ajax(&#123;</span><br><span class="line">           url:<span class="string">'/login'</span>,</span><br><span class="line">           <span class="keyword">type</span>:<span class="string">'POST'</span>,</span><br><span class="line">           data:data</span><br><span class="line">          &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>要想使用body属性解析post请求参数值，我们需要先安装和引用express的两个中间件body-parser和multer，具体方法如下：。<br>2.1安装</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install </span><span class="keyword">body-parser</span></span><br><span class="line"><span class="keyword">npm </span><span class="keyword">install </span><span class="keyword">multer</span></span><br></pre></td></tr></table></figure>
<p>2.2引用和调用</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> bodyParser = <span class="keyword">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">var</span> multer = <span class="keyword">require</span>(<span class="string">'multer'</span>);</span><br><span class="line">   ......</span><br><span class="line">app.<span class="keyword">use</span>(bodyParser.json());</span><br><span class="line">app.<span class="keyword">use</span>(bodyParser.urlencoded(&#123; extended: <span class="keyword">true</span> &#125;));</span><br><span class="line">app.<span class="keyword">use</span>(multer());</span><br></pre></td></tr></table></figure>
<p>中间件body-parser和multer用于处理和解析post请求的数据。</p>
<p>##body基本用法(2)<br>到这里我们就可以测试post请求的body属性的简单用法了。</p>
<p>1.修改好之后的完整的文件app.js如下所示：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="keyword">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="keyword">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">var</span> multer = <span class="keyword">require</span>(<span class="string">'multer'</span>);</span><br><span class="line">app.set(<span class="string">'views'</span>, __dirname);</span><br><span class="line">app.set( <span class="string">'view engine'</span>, <span class="string">'html'</span> );</span><br><span class="line">app.engine( <span class="string">'.html'</span>, <span class="keyword">require</span>( <span class="string">'ejs'</span> ).__express );</span><br><span class="line">app.<span class="keyword">use</span>(bodyParser.json());</span><br><span class="line">app.<span class="keyword">use</span>(bodyParser.urlencoded(&#123; extended: <span class="keyword">true</span> &#125;));</span><br><span class="line">app.<span class="keyword">use</span>(multer());</span><br><span class="line">app.get(<span class="string">'/'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">    res.render(<span class="string">'login'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.post(<span class="string">"/login"</span>, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">    console.log(<span class="string">"用户名称为："</span> + req.body.username);</span><br><span class="line">&#125;);</span><br><span class="line">app.listen(<span class="number">8000</span>);</span><br></pre></td></tr></table></figure>
<p>通过测试地址访问浏览器，试试录入任意一个用户名登录，查看通过body属性是否可以成功获取？</p>
<p>##准备登陆<br>接下来我们就开始实现登陆功能，让我们要先做一些准备工作，为相关按钮添加点击事件、链接。</p>
<p>1.修改index.html，增加登陆链接。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">登 录</span>](<span class="link">login</span>)</span><br></pre></td></tr></table></figure></p>
<p>2.强化login页面的login方法，实现一个简单的post请求：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">   <span class="keyword">var</span> username = $(<span class="string">'#username'</span>).val();</span><br><span class="line">   <span class="keyword">var</span> password = $(<span class="string">'#password'</span>).val();</span><br><span class="line">   <span class="keyword">var</span> data = &#123; <span class="string">"username"</span>: username, <span class="string">"password"</span>:password&#125;;</span><br><span class="line">   $.ajax(&#123;</span><br><span class="line">            url:<span class="string">'login'</span>,</span><br><span class="line">            type:<span class="string">'POST'</span>,</span><br><span class="line">            data:data,</span><br><span class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">data,status</span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">if</span>(status == <span class="string">'success'</span>)&#123;</span><br><span class="line">                     location.href=<span class="string">'home'</span>;</span><br><span class="line">                   &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            error:<span class="function"><span class="keyword">function</span>(<span class="params">data,status,e</span>)</span>&#123;</span><br><span class="line">                 <span class="keyword">if</span>(status == <span class="string">"error"</span>)&#123;</span><br><span class="line">                      location.href=<span class="string">'login'</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                  &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">      &#125;</span><br></pre></td></tr></table></figure>
<p>网页模板准备已经就绪，下面我们开始修改启动文件app.js的内容。</p>
<p>##准备登陆<br>下面我们就开始修改app启动文件的内容。</p>
<p>1.修改post方法，这里假设数据库中用户名的名字为admin、密码为admin。</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> user=&#123;</span><br><span class="line">        username:<span class="string">'admin'</span>,</span><br><span class="line">        password:<span class="string">'admin'</span></span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">if</span>(req.body.username==user.username&amp;&amp;req.body.password==user.password)</span><br><span class="line">    &#123; </span><br><span class="line">       res.send(<span class="number">200</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       res.send( <span class="number">404</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="number">2.</span>一个完整的启动文件app.js如下所示：</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> express = <span class="keyword">require</span>(<span class="string">'express'</span>);</span><br><span class="line"><span class="keyword">var</span> app = express();</span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="keyword">require</span>(<span class="string">'body-parser'</span>);</span><br><span class="line"><span class="keyword">var</span> multer = <span class="keyword">require</span>(<span class="string">'multer'</span>);</span><br><span class="line"> </span><br><span class="line">app.set(<span class="string">'views'</span>, __dirname);</span><br><span class="line">app.set( <span class="string">'view engine'</span>, <span class="string">'html'</span> );</span><br><span class="line">app.engine( <span class="string">'.html'</span>, <span class="keyword">require</span>( <span class="string">'ejs'</span> ).__express );</span><br><span class="line"> </span><br><span class="line">app.<span class="keyword">use</span>(bodyParser.json());</span><br><span class="line">app.<span class="keyword">use</span>(bodyParser.urlencoded(&#123; extended: <span class="keyword">true</span> &#125;));</span><br><span class="line">app.<span class="keyword">use</span>(multer());</span><br><span class="line"> </span><br><span class="line">app.get(<span class="string">'/'</span>, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">    res.render(<span class="string">'index'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">'/home'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">    res.render(<span class="string">'home'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">    res.render(<span class="string">'login'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.post(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> user=&#123;</span><br><span class="line">        username:<span class="string">'admin'</span>,</span><br><span class="line">        password:<span class="string">'admin'</span></span><br><span class="line">    &#125;</span><br><span class="line"> <span class="keyword">if</span>(req.body.username==user.username&amp;&amp;req.body.password==user.password)      &#123;</span><br><span class="line">      res.send(<span class="number">200</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      res.send( <span class="number">404</span> );</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br><span class="line"> </span><br><span class="line">app.listen(<span class="number">80</span>);</span><br></pre></td></tr></table></figure>
<p>到这里，一个简单的Post登录就完成了，使用浏览器运行本地端口试试效果吧！</p>
<p>##访问控制<br>简单登陆部分按照我们的求已经完成了，但网站好些并不安全，反复测试我们发现，home.html页面本来是登陆以后才访问的，现在我们不需登陆，直接在浏览器输入也可访问，这样肯定是不能被允许的，那么我们还得再次对登陆功能进行强化。</p>
<p>1.login.html页面增加EJS模板变量&lt;%- message %&gt;保存登陆提示信息。</p>
<figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line">    &lt;<span class="comment">%- message %&gt;</span></span><br><span class="line"># 用户登录</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>2.home.html页面，登陆成功后跳转并传入用户名：</p>
<figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># 恭喜<span class="keyword">_</span>&lt;%= user.username %&gt;<span class="keyword">_</span>，登陆成功！</span><br></pre></td></tr></table></figure>
<p>PS：使用EJS模板变量值使用&lt;%= variable_name %&gt;输出方式，字符串输出时默认经过escape转义编码。 当我们想要输出一些动态生成的HTML标签时可使用&lt;%- variable_nam %&gt;输出方式，这种方式不会被escape转义编码。</p>
<p>3.home.html页面添加退出链接，如下：<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">退 出</span>](<span class="link">logout</span>)</span><br></pre></td></tr></table></figure></p>
<p>##访问控制<br>修改好了模板页，下面开始修改启动文件app.js的内容。</p>
<p>1.安装模块express-session并引用，安装、引用不在讲述。</p>
<p>2.使用新模块进行访问时间限制，如下：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">var</span> <span class="string">session</span> <span class="string">=</span> <span class="string">require('express-session');</span></span><br><span class="line"><span class="string">...</span></span><br><span class="line"><span class="string">app.use(session(&#123;</span></span><br><span class="line"><span class="attr">    secret:</span><span class="string">'secret'</span><span class="string">,</span></span><br><span class="line"><span class="attr">    resave:</span><span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">    saveUninitialized:</span><span class="literal">false</span><span class="string">,</span></span><br><span class="line"><span class="attr">    cookie:</span><span class="string">&#123;</span></span><br><span class="line"><span class="attr">        maxAge:</span><span class="number">1000</span><span class="string">*60*10</span>  <span class="string">//过期时间设置(单位毫秒)</span></span><br><span class="line">    <span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;));</span></span><br></pre></td></tr></table></figure>
<p>3.app.js文件新增中间件并设置模板变量值，如下：</p>
<figure class="highlight hsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">app.use(function(req, res, <span class="keyword">next</span>)&#123;</span><br><span class="line">    res.locals.user = req.session.user<span class="comment">;</span></span><br><span class="line">    var <span class="keyword">err</span> = req.session.error<span class="comment">;</span></span><br><span class="line">    res.locals.message = <span class="string">''</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">err</span>) res.locals.message = <span class="string">'&lt;div style="margin-bottom: 20px;color:red;"&gt;'</span> + <span class="keyword">err</span> + <span class="string">'&lt;/div&gt;'</span><span class="comment">;</span></span><br><span class="line">    <span class="keyword">next</span>()<span class="comment">;</span></span><br><span class="line">&#125;)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>res.locals对象保存在一次请求范围内的响应体中的本地变量值。</p>
<p>PS：注意，中间件的放置顺序很重要，等同于执行顺序。而且，中间件必须放在HTTP动词方法之前，否则不会执行。</p>
<p>4.增加logout路径处理(用户登陆退出)和index路径请求处理，如下：</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/logout'</span>, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span></span>&#123;</span><br><span class="line">    req.session.user = <span class="literal">null</span>;</span><br><span class="line">    req.session.error = <span class="literal">null</span>;</span><br><span class="line">    res.redirect(<span class="string">'index'</span>);</span><br><span class="line">&#125;);</span><br><span class="line">app.get(<span class="string">'/index'</span>, <span class="function"><span class="keyword">function</span><span class="params">(req, res)</span> </span>&#123;</span><br><span class="line">    res.render(<span class="string">'index'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>5.修改home路径请求处理，如下：</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">app.get(<span class="string">'/home'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(req.session.user)&#123;</span><br><span class="line">        res.render(<span class="string">'home'</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        req.session.<span class="built_in">error</span> = <span class="string">"请先登录"</span></span><br><span class="line">        res.redirect(<span class="string">'login'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>5.修改路径为login的Post请求</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">app.post(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span><span class="params">(req,res)</span></span>&#123;</span><br><span class="line">    <span class="keyword">var</span> user=&#123;</span><br><span class="line">        username:<span class="string">'admin'</span>,</span><br><span class="line">        password:<span class="string">'admin'</span></span><br><span class="line">    &#125;</span><br><span class="line"> <span class="keyword">if</span>(req.body.username==user.username&amp;&amp;req.body.password==user.password)&#123;</span><br><span class="line">        req.session.user = user;</span><br><span class="line">        res.send(<span class="number">200</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        req.session.error = <span class="string">"用户名或密码不正确"</span>;</span><br><span class="line">        res.send( <span class="number">404</span> );</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>好，全部修改完毕，再次访问测试地址试试效果吧！</p>
<p>#路由登陆</p>
<p>##路由介绍<br>路由 ————为不同的访问路径，指定不同的处理方法。 在app.js中我们指定了app.get、app.post的不同路径的多个路由规则，在实际开发应用中，也会碰到具有多个路由记录的情况，针对这个问题，我们就要对这些路由记录做分开处理，以便于管理。</p>
<p>我们还是在登陆例子的基础上做如下修改。</p>
<p>1.添加三个js文件，名称分别为login、home、logout。</p>
<p>2.login.js文件，添加如下内容：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params"> app </span>) </span>&#123;</span><br><span class="line">    app.get(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        res.render(<span class="string">'login'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"> </span><br><span class="line">    app.post(<span class="string">'/login'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> user=&#123;</span><br><span class="line">            username:<span class="string">'admin'</span>,</span><br><span class="line">            password:<span class="string">'admin'</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(req.body.username==user.username&amp;&amp;req.body.password==user.password)&#123;</span><br><span class="line">            req.session.user = user;</span><br><span class="line">            res.send(<span class="number">200</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            req.session.error = <span class="string">"用户名或密码不正确"</span></span><br><span class="line">            res.send( <span class="number">404</span> );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>3.home.js文件，添加如下内容：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params"> app </span>) </span>&#123;</span><br><span class="line">    app.get(<span class="string">'/home'</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(req.session.user)&#123;</span><br><span class="line">            res.render(<span class="string">'home'</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            req.session.error = <span class="string">"请先登录"</span></span><br><span class="line">            res.redirect(<span class="string">'login'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>##使用路由2<br>4.logout.js文件，添加如下内容：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = <span class="function"><span class="keyword">function</span> (<span class="params"> app </span>) </span>&#123;</span><br><span class="line">    app.get(<span class="string">'/logout'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res</span>)</span>&#123;</span><br><span class="line">        req.session.user = <span class="literal">null</span>;</span><br><span class="line">        req.session.error = <span class="literal">null</span>;</span><br><span class="line">        res.redirect(<span class="string">'index'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>5.app.js文件中请求路径为logout、home、login的代码就可以删除了</p>
<p>6.新增的三个文件我们改如何使用呢，很简单，如下所示：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">require</span>(<span class="string">'./login'</span>)(app);</span><br><span class="line"><span class="selector-tag">require</span>(<span class="string">'./home'</span>)(app);</span><br><span class="line"><span class="selector-tag">require</span>(<span class="string">'./logout'</span>)(app);</span><br></pre></td></tr></table></figure>
<p>对，就是这么简单，我们只需引用路由的目录即可。</p>
<p>到这里我们的用户登陆功能就安全了，现学现用赶快试试效果吧！</p>
]]></content>
      
        <categories>
            
            <category> Web前端 </category>
            
            <category> Nodejs </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Express </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nodejs入门]]></title>
      <url>http://mzeht.com/2016/03/15/Nodejs%E5%85%A5%E9%97%A8/</url>
      <content type="html"><![CDATA[<p>总结<a href="http://www.hubwiz.com/course/5359f6f6ec7452081a7873d8/" target="_blank" rel="noopener">http://www.hubwiz.com/course/5359f6f6ec7452081a7873d8/</a></p>
<p>#快速入门</p>
<p>##hello world<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">console.<span class="built_in">log</span>('hello world');</span><br></pre></td></tr></table></figure></p>
<p>输出</p>
<figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; hello world</span></span><br></pre></td></tr></table></figure>
<p>##回调函数<br>由于node是一个异步事件驱动的平台，所以在代码中我们经常需要使用回调函数。下面是回调函数应用的经典示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'callback is called'</span>);</span><br><span class="line">&#125;,<span class="number">2000</span>);</span><br></pre></td></tr></table></figure>
<p>我们传给setTimeout函数传入了一个匿名函数和一个调用时间2000(毫秒)，运行程序后等待2秒，可以看到输出了”callback is called”。</p>
<p>##标准回调函数</p>
<p>node.js中回调函数格式是约定俗成的，它有两个参数，第一个参数为err，第二个参数为data，顾名思义，err是错误信息，data则是返回的数据，示例如下:</p>
<figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span><span class="params">(err,data)</span></span>&#123;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>为了养成良好的编码习惯，在以后的课程示例或练习中，回调函数格式都将采用这样的格式。</p>
<p>##获取模块<br>为了支持快速开发，node平台上提供了大量的模块，封装了各自不同的功能，那么我们将如何调获取想要的模块呢，下来我们就来介绍。 在node中，我们可以使用require函数，具体语法如下：</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">require(<span class="string">"模块"</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>怎么样，是不是很简单很方便，通过require函数我们就可以获取相应模块进而使用它的任意功能了。</p>
<p>##使用模块<br>os模块可提供操作系统的一些基本信息，它的一些常用方法如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> os = <span class="built_in">require</span>(<span class="string">"os"</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> result = os.platform(); <span class="comment">//查看操作系统平台</span></span><br><span class="line">           <span class="comment">//os.release(); 查看操作系统版本</span></span><br><span class="line">           <span class="comment">//os.type();  查看操作系统名称</span></span><br><span class="line">           <span class="comment">//os.arch();  查看操作系统CPU架构</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure>
<p>#进程管理</p>
<p>##简介<br>process是一个全局内置对象，可以在代码中的任何位置访问此对象，这个对象代表我们的node.js代码宿主的操作系统进程对象。</p>
<p>使用process对象可以截获进程的异常、退出等事件，也可以获取进程的当前目录、环境变量、内存占用等信息，还可以执行进程退出、工作目录切换等操作。</p>
<p>下面我们一起来学习一下process对象的一些常用方法。</p>
<p>##cwd函数的基本用法<br>当我们想要查看应用程序当前目录时，可以使用cwd函数，使用语法如下：</p>
<figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">process.cwd()<span class="comment">;</span></span><br></pre></td></tr></table></figure>
<p>##chdir函数的基本用法<br>如果需要改变应用程序目录，就要使用chdir函数了，它的用法如下：</p>
<p>process.chdir(“目录”);</p>
<p>##stdout的基本用法<br>stdout是标准输出流，它是干什么的呢？请下看下面的示例：</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">console.<span class="built_in">log</span> = <span class="function"><span class="keyword">function</span><span class="params">(d)</span></span>&#123;</span><br><span class="line">    process.<span class="built_in">stdout</span>.<span class="built_in">write</span>(d+<span class="string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>没错，它的作用就是将内容打印到输出设备上，console.log就是封装了它。</p>
<p>##stderr的基本用法<br>stderr是标准错误流，和stdout的作用差不多，不同的是它是用来打印错误信息的，我们可以通过它来捕获错误信息，基本使用方法如下：</p>
<figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">process</span>.stderr.<span class="built_in">write</span>(输入内容);</span><br></pre></td></tr></table></figure>
<p>##stdin的基本用法<br>stdin是进程的输入流,我们可以通过注册事件的方式来获取输入的内容，如下：</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">process.<span class="built_in">stdin</span>.on(<span class="string">'readable'</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span></span> &#123;</span><br><span class="line">  var chunk = process.<span class="built_in">stdin</span>.<span class="built_in">read</span>();</span><br><span class="line">  <span class="keyword">if</span> (chunk !== null) &#123;</span><br><span class="line">    process.<span class="built_in">stdout</span>.<span class="built_in">write</span>(<span class="string">'data: '</span> + chunk);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>示例中的chunk就是输入流中的内容。</p>
<p>##exit函数的基本用法<br>如果你需要在程序内杀死进程，退出程序，可以使用exit函数，示例如下：</p>
<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">process.<span class="keyword">exit</span>(code);</span><br></pre></td></tr></table></figure>
<p>参数code为退出后返回的代码，如果省略则默认返回0；</p>
<p>##注册事件<br>前面讲到如何在输入流中打印信息，当我们需要获取stdout内容的时候应该怎么做呢？请看如下的示例：</p>
<figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">process.<span class="built_in">stdout</span>.on(<span class="string">'data'</span>,<span class="function"><span class="keyword">function</span><span class="params">(data)</span></span>&#123;</span><br><span class="line">   console.<span class="built_in">log</span>(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>为stdout注册data事件，我们就可以拿到它输出的内容了。</p>
<p>##设置编码<br>在我们的输入输出的内容中有中文的时候，可能会乱码的问题，这是因为编码不同造成的，所以在这种情况下需要为流设置编码，如下示例：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">process</span><span class="selector-class">.stdin</span><span class="selector-class">.setEncoding</span>(编码);</span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">process</span><span class="selector-class">.stdout</span><span class="selector-class">.setEncoding</span>(编码);</span><br><span class="line"> </span><br><span class="line"><span class="selector-tag">process</span><span class="selector-class">.stderr</span><span class="selector-class">.setEncoding</span>(编码);</span><br></pre></td></tr></table></figure>
<p>##课程小结<br>process的常用方法就讲到这里了，如果你想了解更多可以参考以下地址：</p>
<p><a href="http://nodejs.cn/api/process" target="_blank" rel="noopener">http://nodejs.cn/api/process</a><br><a href="http://nodeapi.ucdok.com/#/api/process.html" target="_blank" rel="noopener">http://nodeapi.ucdok.com/#/api/process.html</a></p>
<p>#文件I/O fs模块的基本用法</p>
<p>开发中我们经常会有文件I/O的需求，node.js中提供一个名为fs的模块来支持I/O操作，fs模块的文件I/O是对标准POSIX函数的简单封装。</p>
<p>##writeFile函数的基本用法<br>文件I/O，写入是必修课之一。fs模块提供writeFile函数，可以异步的将数据写入一个文件, 如果文件已经存在则会被替换。用法如下：</p>
<blockquote>
<p>例：fs.writeFile(filename, data, callback)</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs= <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"> </span><br><span class="line">fs.writeFile(<span class="string">'test.txt'</span>, <span class="string">'Hello Node'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'Saved successfully'</span>); <span class="comment">//文件被保存</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>数据参数可以是string或者是Buffer,编码格式参数可选，默认为”utf8”，回调函数只有一个参数err。</p>
<p>##appendFile函数的基本用法<br>writeFile函数虽然可以写入文件，但是如果文件已经存在，我们只是想添加一部分内容，它就不能满足我们的需求了，很幸运，fs模块中还有appendFile函数，它可以将新的内容追加到已有的文件中，如果文件不存在，则会创建一个新的文件。使用方法如下：</p>
<blockquote>
<p>例：fs.appendFile(文件名,数据,编码,回调函数(err));</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs= <span class="built_in">require</span>(<span class="string">"fs"</span>);</span><br><span class="line"> </span><br><span class="line">fs.appendFile(<span class="string">'test.txt'</span>, <span class="string">'data to append'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//数据被添加到文件的尾部</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'The "data to append" was appended to file!'</span>); </span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>编码格式默认为”utf8”</p>
<p>##exists函数的基本用法<br>如何检查一个文件是否存在呢？我想exists函数可以帮助你，用法如下：</p>
<blockquote>
<p>例：fs.exists(文件，回调函数(exists));</p>
</blockquote>
<figure class="highlight scilab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exists</span>的回调函数只有一个参数，类型为布尔型，通过它来表示文件是否存在。</span><br><span class="line"></span><br><span class="line">var fs= require(<span class="string">"fs"</span>);</span><br><span class="line"> </span><br><span class="line">fs.<span class="built_in">exists</span>(<span class="string">'/etc/passwd'</span>, <span class="function"><span class="keyword">function</span> <span class="params">(exists)</span> &#123;</span></span><br><span class="line">  console.<span class="built_in">log</span>(<span class="built_in">exists</span> ? <span class="string">"存在"</span> : <span class="string">"不存在!"</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>##rename函数的基本用法<br>修改文件名称是我们经常会遇见的事情，rename函数提供修改名称服务：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs= require(<span class="string">"fs"</span>);</span><br><span class="line"> </span><br><span class="line">fs.<span class="keyword">rename</span>(旧文件，新文件，回调函数(<span class="keyword">err</span>)&#123;</span><br><span class="line">   <span class="keyword">if</span> (<span class="keyword">err</span>) throw <span class="keyword">err</span>;</span><br><span class="line">   console.<span class="built_in">log</span>('Successful modification,');</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>##rename函数的基本用法<br>移动文件也是我们经常会遇见的，可是fs没有专门移动文件的函数，但是我们可以通过rename函数来达到移动文件的目的，示例如下。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"> </span><br><span class="line">fs.rename(oldPath,newPath,<span class="function"><span class="keyword">function</span> (<span class="params">err</span>) </span>&#123;</span><br><span class="line">   <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">   <span class="built_in">console</span>.log(<span class="string">'renamed complete'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>##readFile函数的基本用法<br>读取文件是最常用到的功能之一，使用fs模块读取文件语法如下：</p>
<blockquote>
<p>例：fs.readFile(文件,编码,回调函数);</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"> </span><br><span class="line">fs.readFile(文件名, <span class="function"><span class="keyword">function</span> (<span class="params">err, data</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>回调函数里面的data,就是读取的文件内容。</p>
<p>##unlink函数的基本用法<br>面对一堆垃圾的文件总是有想删除的冲动，我有强迫症？你才有呢。</p>
<p>好在有unlink函数，终于得救了，示例如下：</p>
<blockquote>
<p>例：fs.unlink(文件,回调函数(err));</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"> </span><br><span class="line">fs.unlink(文件, <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (err) <span class="keyword">throw</span> err;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'successfully deleted'</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>##mkdir函数的基本用法<br>除了针对文件的操作，目录的创建、删除也经常遇到的，下面我们来看看node.js中如何创建目录：</p>
<blockquote>
<p>fs.mkdir(路径，权限，回调函数(err));<br>参数</p>
</blockquote>
<p>路径：新创建的目录。<br>权限：可选参数，只在linux下有效，表示目录的权限，默认为0777，表示文件所有者、文件所有者所在的组的用户、所有用户，都有权限进行读、写、执行的操作。<br>回调函数：当发生错误时，错误信息会传递给回调函数的err参数。</p>
<p>##rmdir函数的基本用法<br>删除目录也是必不可少的功能，rmdir函数可以删除指定的目录：</p>
<blockquote>
<p>例：fs.rmdir(路径，回调函数(err));</p>
</blockquote>
<p>var fs = require(‘fs’);</p>
<p>fs.rmdir(path, function(err) {<br>  if (err) throw err;<br>  console.log(‘ok’);<br>});</p>
<p>##readdir函数的基本用法<br>如果要读取目录下所有的文件应该怎么办呢？readdir函数可以读取到指定目录下所有的文件，示例如下：</p>
<figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var <span class="built_in">fs</span> = require('<span class="built_in">fs</span>');</span><br><span class="line"> </span><br><span class="line"><span class="built_in">fs</span>.readdir(目录,回调函数(err,files));</span><br></pre></td></tr></table></figure>
<p>回调函数 (callback) 接受两个参数 (err, files) 其中 files 是一个存储目录中所包含的文件名称的数组，数组中不包括 ‘.’ 和 ‘..’。</p>
<p>##课程小结<br>文件I/O是最基本的操作，应该熟悉掌握。</p>
<p>fs模块不但提供异步的文件操作，还提供相应的同步操作方法，需要指出的是，nodejs采用异步I/O正是为了避免I/O时的等待时间，提高CPU的利用率，所以在选择使用异步或同步方法的时候需要权衡取舍。</p>
<p>本节课程讲解了fs模块常用的一些功能，当然它还有更多强大的功能，如果你想了解更多，可以参考以下资料：</p>
<p><a href="http://nodejs.cn/api/fs" target="_blank" rel="noopener">http://nodejs.cn/api/fs</a></p>
<p><a href="http://nodeapi.ucdok.com/#/api/fs.html" target="_blank" rel="noopener">http://nodeapi.ucdok.com/#/api/fs.html</a></p>
<p>#url处理 url模块的基本用法<br>node.js为互联网而生，和url打交道是无法避免的了，url模块提供一些基础的url处理。</p>
<p>##parse函数的基础用法<br>parse函数的作用是解析url，返回一个json格式的数组，请看如下示例：</p>
<figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">url</span> = <span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"><span class="built_in">url</span>.parse(<span class="string">'http://www.baidu.com'</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#123;</span> <span class="attr">protocol:</span> <span class="string">'http:'</span><span class="string">,</span></span><br><span class="line"><span class="attr">  slashes:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  auth:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  host:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  port:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  hostname:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  hash:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  search:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  query:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  pathname:</span> <span class="string">'www.baidu.com'</span><span class="string">,</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">'www.baidu.com'</span><span class="string">,</span></span><br><span class="line"><span class="attr">  href:</span> <span class="string">'http://www.baidu.com'</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p>##parse函数 —— 条件解析<br>parse函数的第二个参数是布尔类型，当参数为true时，会将查询条件也解析成json格式的对象。</p>
<figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">url</span> = <span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"><span class="built_in">url</span>.parse(<span class="string">'http://www.baidu.com?page=1'</span>,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attribute">protocol</span>: <span class="string">'http:'</span>,</span><br><span class="line">  <span class="attribute">slashes</span>: true,</span><br><span class="line">  <span class="attribute">auth</span>: null,</span><br><span class="line">  <span class="attribute">host</span>: <span class="string">'www.baidu.com'</span>,</span><br><span class="line">  <span class="attribute">port</span>: null,</span><br><span class="line">  <span class="attribute">hostname</span>: <span class="string">'www.baidu.com'</span>,</span><br><span class="line">  <span class="attribute">hash</span>: null,</span><br><span class="line">  <span class="attribute">search</span>: <span class="string">'?page=1'</span>,</span><br><span class="line">  <span class="attribute">query</span>: &#123; <span class="attribute">page</span>: <span class="string">'1'</span> &#125;,</span><br><span class="line">  <span class="attribute">pathname</span>: <span class="string">'/'</span>,</span><br><span class="line">  <span class="attribute">path</span>: <span class="string">'/?page=1'</span>,</span><br><span class="line">  <span class="attribute">href</span>: <span class="string">'http://www.baidu.com/?page=1'</span> &#125;</span><br></pre></td></tr></table></figure>
<p>试一试，当参数分别为true和false时，返回数据中的query字段的内容有什么不同。</p>
<p>##parse函数 —— 解析主机<br>parse函数的第三个参数也是布尔类型的，当参数为true，解析时会将url的”//“和第一个”/“之间的部分解析为主机名，示例如下：</p>
<figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">url</span> = <span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"><span class="built_in">url</span>.parse(<span class="string">'http://www.baidu.com/news'</span>,<span class="literal">false</span>,<span class="literal">true</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#123;</span> <span class="attr">protocol:</span> <span class="string">'http:'</span><span class="string">,</span></span><br><span class="line"><span class="attr">  slashes:</span> <span class="literal">true</span><span class="string">,</span></span><br><span class="line"><span class="attr">  auth:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  host:</span> <span class="string">'www.baidu.com'</span><span class="string">,</span></span><br><span class="line"><span class="attr">  port:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  hostname:</span> <span class="string">'www.baidu.com'</span><span class="string">,</span></span><br><span class="line"><span class="attr">  hash:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  search:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  query:</span> <span class="literal">null</span><span class="string">,</span></span><br><span class="line"><span class="attr">  pathname:</span> <span class="string">'/news'</span><span class="string">,</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">'/news'</span><span class="string">,</span></span><br><span class="line"><span class="attr">  href:</span> <span class="string">'http://www.baidu.com/news'</span> <span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p>##format函数的基础用法<br>format函数的作用与parse相反，它的参数是一个JSON对象，返回一个组装好的url地址，请看如下示例：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">var url = require(<span class="string">'url'</span>);</span><br><span class="line">url.format(&#123;</span><br><span class="line"><span class="string">protocol:</span> <span class="string">'http:'</span>,</span><br><span class="line"><span class="string">hostname:</span><span class="string">'www.baidu.com'</span>,</span><br><span class="line"><span class="string">port:</span><span class="string">'80'</span>,</span><br><span class="line"><span class="string">pathname :</span><span class="string">'/news'</span>,</span><br><span class="line"><span class="string">query:</span>&#123;<span class="string">page:</span><span class="number">1</span>&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">http:</span><span class="comment">//www.baidu.com/news?page=1</span></span><br></pre></td></tr></table></figure>
<p>参数JSON对象的字段跟parse函数解析后返回的JSON字段一一对应。</p>
<p>试一试传入一个对象，看看返回url是什么。</p>
<p>##resolve函数的基础用法<br>resolve函数的参数是两个路径，第一个路径是开始的路径或者说当前路径，第二个则是想要去往的路径，返回值是一个组装好的url，示例如下：</p>
<figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="built_in">url</span> = <span class="built_in">require</span>(<span class="string">'url'</span>);</span><br><span class="line"><span class="built_in">url</span>.resolve(<span class="string">'http://example.com/'</span>, <span class="string">'/one'</span>)  <span class="comment">// 'http://example.com/one'</span></span><br><span class="line"><span class="built_in">url</span>.resolve(<span class="string">'http://example.com/one'</span>, <span class="string">'/two'</span>) <span class="comment">// 'http://example.com/two'</span></span><br></pre></td></tr></table></figure>
<p>动动手，试一试resolve函数。</p>
<p>##课程小结<br>本节课程讲解了url模块常用的一些功能，如果你想了解更多，可以参考以下资料：</p>
<p><a href="http://nodejs.cn/api/url" target="_blank" rel="noopener">http://nodejs.cn/api/url</a></p>
<p>#path优化 path模块的基本用法<br>本模块包含一套用于处理和转换文件路径的工具集,用于处理目录的对象，提高用户开发效率，让我们一起来快速的认识path对象的一些常用方法吧！</p>
<p>##normalize函数的基本用法<br>normalize函数将不符合规范的路径经过格式化转换为标准路径,解析路径中的.与..外，还能去掉多余的斜杠。</p>
<p>如下示例：</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> path = <span class="keyword">require</span>(<span class="string">'path'</span>);  </span><br><span class="line"><span class="built_in">var</span> <span class="built_in">data</span> = path.normalize(<span class="string">'/path///normalize/hi/..'</span>);</span><br><span class="line">console.<span class="keyword">log</span>(<span class="built_in">data</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'/path/normalize/</span>'</span><br></pre></td></tr></table></figure>
<p>看了上面的示例，是不是感觉很So easy，赶快寻个路径试试效果吧(按步操作哟)！</p>
<p>##join函数的基本用法<br>join函数将传入的多个路径拼接为标准路径并将其格式化，返回规范后的路径，避免手工拼接路径字符串的繁琐. 如下示例：</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> path = <span class="keyword">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="built_in">var</span> <span class="built_in">data</span> = path.<span class="keyword">join</span>(<span class="string">'///you'</span>, <span class="string">'/are'</span>, <span class="string">'//beautiful'</span>);</span><br><span class="line">console.<span class="keyword">log</span>(<span class="built_in">data</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">'/you/are/beautiful'</span></span><br></pre></td></tr></table></figure>
<p>##dirname函数用来返回路径中的目录名. 如下示例：</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> path = <span class="keyword">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="built_in">var</span> <span class="built_in">data</span> = path.dirname(<span class="string">'/foo/strong/cool/nice'</span>); </span><br><span class="line">console.<span class="keyword">log</span>(<span class="built_in">data</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'/foo/strong/cool</span>'</span><br></pre></td></tr></table></figure>
<p>##basename函数的基本用法<br>basename函数可返回路径中的最后一部分，并且可以对其进行条件排除. 如下示例：</p>
<p>例1：path.basename(‘路径字符串’);</p>
<p>例2：path.basename(‘路径字符串’, ‘[ext]’)&lt;排除[ext]后缀字符串&gt;;</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);    </span><br><span class="line"><span class="keyword">var</span> data1 = path.basename(<span class="string">'/foo/strong/basename/index.html'</span>);</span><br><span class="line"><span class="keyword">var</span> data2 = path.basename(<span class="string">'/foo/strong/basename/index.html'</span>,<span class="string">'.html'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(data1 + <span class="string">' "and" '</span> + data2);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight flix"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'<span class="keyword">index</span>.html <span class="string">"and"</span> <span class="keyword">index</span>'</span><br></pre></td></tr></table></figure>
<p>##extname函数的基本用法<br>extname函数返回路径中文件的扩展名(以最后一个’.’开始,返回’.’以及’.’以后的所有字符串,如没有’.’,则返回空字符串). 如下示例：</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> path = <span class="keyword">require</span>(<span class="string">'path'</span>);</span><br><span class="line"><span class="built_in">var</span> <span class="built_in">data</span> = path.extname(<span class="string">'index.html'</span>);</span><br><span class="line">console.<span class="keyword">log</span>(<span class="built_in">data</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'.html</span>'</span><br></pre></td></tr></table></figure>
<p>##课程小结<br>很高兴您学完了本节课程，关于path的一些常用方法就先讲到这里了，如果您还想了解更多的话,可以参考以下地址：</p>
<p><a href="http://nodejs.cn/api/path" target="_blank" rel="noopener">http://nodejs.cn/api/path</a> </p>
<p><a href="http://nodeapi.ucdok.com/#/api/path.html" target="_blank" rel="noopener">http://nodeapi.ucdok.com/#/api/path.html</a></p>
<p>#字符串转换 Query String模块的基本介绍<br>Query String模块用于实现URL参数字符串与参数对象之间的互相转换，提供了”stringify”、”parse”等一些实用函数来针对字符串进行处理，通过序列化和反序列化，来更好的应对实际开发中的条件需求，对于逻辑的处理也提供了很好的帮助，下面就让我们一起来了解学习它吧！</p>
<p>##stringify函数的基本用法<br>stringify函数的作用就是序列化对象，也就是说将对象类型转换成一个字符串类型（默认的分割符（”&amp;”）和分配符（”=”）），本节先介绍它的基本用法，在下一节里我们将学习如何替换默认分配符，下面我们就通过以下例子来清楚的认识一下吧！</p>
<blockquote>
<p>例1：querystring.stringify(“对象”)</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> querystring= <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"><span class="keyword">var</span> result = querystring.stringify(&#123;<span class="attr">foo</span>:<span class="string">'bar'</span>,<span class="attr">cool</span>:[<span class="string">'xux'</span>, <span class="string">'yys'</span>]&#125;);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foo=bar<span class="variable">&amp;cool</span>=xux<span class="variable">&amp;cool</span>=yys</span><br></pre></td></tr></table></figure>
<p>##stringify函数的多参数用法<br>这节我们来学习stringify函数的多参数用法，上节我们知道了对象被序列化为字符串之后默认是通过分割符（”&amp;”）和分配符（”=”）组成的，那可不可以改变呢，这节我们就来了解一下，是否可以自己去定义组合结果，看下面的小例子</p>
<blockquote>
<p>例1：querystring.stringify(“对象”，”分隔符”，”分配符”)</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> querystring = <span class="built_in">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"><span class="keyword">var</span> result = querystring.stringify(&#123;<span class="attr">foo</span>:<span class="string">'bar'</span>,<span class="attr">cool</span>:[<span class="string">'xux'</span>, <span class="string">'yys'</span>]&#125;,<span class="string">'*'</span>,<span class="string">'$'</span>);</span><br><span class="line"><span class="built_in">console</span>.log(result);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">'foo<span class="subst">$bar</span>*cool<span class="subst">$xux</span>*cool<span class="subst">$yys</span>'</span></span><br></pre></td></tr></table></figure>
<p>##parse函数的基本用法<br>刚刚我们已经学习了stringify函数的作用，接下来就来学习反序列化函数——parse函数，parse函数的作用就是反序列化字符串（默认是由”=”、”&amp;”拼接而成），转换得到一个对象类型。如下示例：</p>
<blockquote>
<p>例1：querystring.parse(“字符串”)</p>
</blockquote>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> querystring = <span class="keyword">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">result</span> = querystring.parse(<span class="string">'foo=bar&amp;cool=xux&amp;cool=yys'</span>);</span><br><span class="line">console.log(<span class="keyword">result</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attribute">foo</span>: <span class="string">'bar'</span>, cool: [<span class="string">'xux'</span>, <span class="string">'yys'</span>]&#125;</span><br></pre></td></tr></table></figure>
<p>##parse函数的多参数用法<br>现在我们学习parse函数的扩展用法，和上节stringify函数的多参数用法不同的是，parse函数可以根据用户所自定义的分割符、分配符来反序列化字符串，从而得到相应的对象结果.如下示例：</p>
<blockquote>
<p>例1：querystring.parse(“字符串”，”分隔符”，”分配符”)</p>
</blockquote>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> querystring = <span class="keyword">require</span>(<span class="string">'querystring'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">result</span> = querystring.parse(<span class="string">'foo@bar$cool@xux$cool@yys'</span>,<span class="string">'@'</span>,<span class="string">'$'</span>);</span><br><span class="line">console.log(<span class="keyword">result</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123; <span class="attribute">foo</span>: <span class="string">''</span>, bar: <span class="string">'cool'</span>, xux: <span class="string">'cool'</span>, yys: <span class="string">''</span> &#125;</span><br></pre></td></tr></table></figure>
<p>##课程小结<br>很高兴您学完了本节课程，关于querystring的一些常用方法就先讲到这里了，如果您还想了解更多的话,可以参考以下地址：</p>
<p><a href="http://nodejs.cn/api/querystring" target="_blank" rel="noopener">http://nodejs.cn/api/querystring</a><br><a href="http://nodeapi.ucdok.com/#/api/querystring.html" target="_blank" rel="noopener">http://nodeapi.ucdok.com/#/api/querystring.html</a></p>
<p>#实用工具 UTIL模块的基本介绍<br>关于模块的如何访问前面已经讲述过了，相信大家已经完全掌握了，这节课我们来学习util模块。util模块呢，是一个Node.js核心模块，提供常用函数的集合，用于弥补核心JavaScript的一些功能过于精简的不足。并且还提供了一系列常用工具，用来对数据的输出和验证。</p>
<p>##inspect函数的基本用法<br>util.inspect(object,[showHidden],[depth],[colors])是一个将任意对象转换为字符串的函数，通常用于调试和错误输出。它至少接受一个参数object，即要转换的对象,我们来学习它的简单用法。使用语法如下：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> util = <span class="keyword">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">result</span> = util.inspect(object);</span><br><span class="line">console.log(<span class="keyword">result</span>);</span><br></pre></td></tr></table></figure>
<p>##format函数的基本用法<br>format函数根据第一个参数，返回一个格式化字符串，第一个参数是一个可包含零个或多个占位符的字符串。每一个占位符被替换为与其对应的转换后的值，支持的占位符有：”%s(字符串)”、”%d(数字&lt;整型和浮点型&gt;)”、”%j(JSON)”、”%(单独一个百分号则不作为一个参数)”。</p>
<p>1：如果占位符没有相对应的参数，占位符将不会被替换.如示例：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> util = <span class="keyword">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">result</span> = util.format(<span class="string">'%s:%s'</span>, <span class="string">'foo'</span>);</span><br><span class="line">console.log(<span class="keyword">result</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'foo:%s</span>'</span><br></pre></td></tr></table></figure>
<p>2：如果有多个参数占位符，额外的参数将会调用util.inspect()转换为字符串。这些字符串被连接在一起，并且以空格分隔。如示例：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> util = <span class="keyword">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">result</span> = util.format(<span class="string">'%s:%s'</span>, <span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="string">'baz'</span>);</span><br><span class="line">console.log(<span class="keyword">result</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight sml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">'foo</span>:bar baz'</span><br></pre></td></tr></table></figure>
<p>3：如果第一个参数是一个非格式化字符串，则会把所有的参数转成字符串并以空格隔开拼接在一块，而且返回该字符串。如示例：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> util = <span class="keyword">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">result</span> = util.format(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line">console.log(<span class="keyword">result</span>);</span><br></pre></td></tr></table></figure>
<p>运行结果：</p>
<figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">'<span class="number">1</span> <span class="number">2</span> <span class="number">3</span>'</span><br></pre></td></tr></table></figure>
<p>##isArray函数的基本用法<br>isArray函数可以判断对象是否为数组类型，是则返回ture,否则为false。语法如下：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> util = <span class="keyword">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">result</span> = util.isArray(object);</span><br><span class="line">console.log(<span class="keyword">result</span>);</span><br></pre></td></tr></table></figure>
<p>##isDate函数的基本用法<br>isDate函数可以判断对象是否为日期类型，是则返回ture,否则返回false。语法如下：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> util = <span class="keyword">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">result</span> = util.isDate(object);</span><br><span class="line">console.log(<span class="keyword">result</span>);</span><br></pre></td></tr></table></figure>
<p>##isRegExp函数的基本用法<br>isRegExp函数可以判断对象是否为正则类型，是则返回ture,否则返回false。语法如下：</p>
<figure class="highlight oxygene"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> util = <span class="keyword">require</span>(<span class="string">'util'</span>);</span><br><span class="line"><span class="keyword">var</span> <span class="keyword">result</span> = util.isRegExp(object);</span><br><span class="line">console.log(<span class="keyword">result</span>);</span><br></pre></td></tr></table></figure>
<p>##课程小结<br>很高兴您学完了本节课程，关于util模块的一些常用方法就先讲到这里了，如果您还想了解更多的话,可以参考以下地址：</p>
<p><a href="http://nodejs.cn/api/util" target="_blank" rel="noopener">http://nodejs.cn/api/util</a></p>
<p><a href="http://nodeapi.ucdok.com/#/api/util.html" target="_blank" rel="noopener">http://nodeapi.ucdok.com/#/api/util.html</a></p>
<p>#子进程 child_process模块的基本介绍<br>众所周知node.js是基于单线程模型架构，这样的设计可以带来高效的CPU利用率，但是无法却利用多个核心的CPU，为了解决这个问题，node.js提供了child_process模块，通过多进程来实现对多核CPU的利用. child_process模块提供了四个创建子进程的函数，分别是spawn，exec，execFile和fork。</p>
<p>##pawn函数的简单用法<br>spawn函数用给定的命令发布一个子进程，只能运行指定的程序，参数需要在列表中给出。如下示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> child_process = <span class="built_in">require</span>(<span class="string">'child_process'</span>);</span><br><span class="line"><span class="keyword">var</span> child = child_process.spawn( command );</span><br><span class="line">child.stdout.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">data</span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(data);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>通过执行命令得到返回结果，我们就可以拿到标准输出流数据了。</p>
<p>##exec函数的简单用法<br>exec也是一个创建子进程的函数，与spawn函数不同它可以直接接受一个回调函数作为参数，回调函数有三个参数，分别是err, stdout , stderr，基本使用方法如下：</p>
<p>var child_process = require(‘child_process’);<br>child_process.exec( command , function(err, stdout , stderr ) {<br>  console.log( stdout );<br>});<br>exec函数可以直接接受一个回调函数作为参数，回调函数有三个参数，分别是err, stdout,stderr，非常方便直接使用，</p>
<p>##execFile函数的简单用法<br>execFile函数与exec函数类似，但execFile函数更显得精简，因为它可以直接执行所指定的文件，基本使用方法如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> child_process = <span class="built_in">require</span>(<span class="string">'child_process'</span>);</span><br><span class="line">child_process.execFile( file , <span class="function"><span class="keyword">function</span>(<span class="params">err, stdout , stderr </span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log( stdout );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>execFile与spawn的参数相似，也需要分别指定执行的命令和参数，但可以接受一个回调函数，与exec的回调函数相同。</p>
<p>##execFile函数的简单用法<br>execFile函数与exec函数类似，但execFile函数更显得精简，因为它可以直接执行所指定的文件，基本使用方法如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> child_process = <span class="built_in">require</span>(<span class="string">'child_process'</span>);</span><br><span class="line">child_process.execFile( file , <span class="function"><span class="keyword">function</span>(<span class="params">err, stdout , stderr </span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log( stdout );</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>execFile与spawn的参数相似，也需要分别指定执行的命令和参数，但可以接受一个回调函数，与exec的回调函数相同。</p>
<p>##课程小结<br>恭喜你学完了本节课程，关于child_process的四个函数的基本简单用法，就先讲到这里了，如果您还想深入了解学习的话,可以参考以下地址：</p>
<p><a href="http://nodejs.cn/api/child_process" target="_blank" rel="noopener">http://nodejs.cn/api/child_process</a><br><a href="http://nodeapi.ucdok.com/#/api/child_process.html" target="_blank" rel="noopener">http://nodeapi.ucdok.com/#/api/child_process.html</a></p>
]]></content>
      
        <categories>
            
            <category> Web前端 </category>
            
            <category> Nodejs </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Nodejs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android project from eclipes to androidstudio]]></title>
      <url>http://mzeht.com/2016/02/25/eclipes-to-androidstudio/</url>
      <content type="html"><![CDATA[<p>##jar包冲突</p>
<blockquote>
<p>Error:Execution failed for task ‘:app:transformResourcesWithMergeJavaResForDebug’.<br>com.android.build.api.transform.TransformException: com.android.builder.packaging.DuplicateFileException: Duplicate files copied in APK META-INF/LICENSE.txt<br>      File1: /Users/wpmac/AndroidStudioProjects/Android_XinJiang/app/libs/httpmime-4.1.1.jar<br>      File2: /Users/wpmac/AndroidStudioProjects/Android_XinJiang/app/libs/commons-codec-1.4.jar</p>
</blockquote>
 <figure class="highlight puppet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">packagingOptions</span> &#123;</span><br><span class="line">     <span class="literal">exclude</span> <span class="string">'META-INF/DEPENDENCIES'</span></span><br><span class="line">     <span class="literal">exclude</span> <span class="string">'META-INF/NOTICE'</span></span><br><span class="line">     <span class="literal">exclude</span> <span class="string">'META-INF/LICENSE'</span></span><br><span class="line">     <span class="literal">exclude</span> <span class="string">'META-INF/LICENSE.txt'</span></span><br><span class="line">     <span class="literal">exclude</span> <span class="string">'META-INF/NOTICE.txt'</span></span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>##图片资源报错 </p>
<blockquote>
<p>AAPT: /Users/wpmac/AndroidStudioProjects/Android_JieQian/app/src/main/res/drawable-xhdpi/suspected_association_normal.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited<br>AAPT err(Facade for 203993302) : No Delegate set : lost message:/Users/wpmac/AndroidStudioProjects/Android_JieQian/app/src/main/res/drawable-xhdpi/register_info_normal.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited<br>AAPT: /Users/wpmac/AndroidStudioProjects/Android_JieQian/app/src/main/res/drawable-xxhdpi/attention_pressed.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited<br>AAPT: /Users/wpmac/AndroidStudioProjects/Android_JieQian/app/src/main/res/drawable-hdpi/splash_imageview.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited<br>AAPT: /Users/wpmac/AndroidStudioProjects/Android_JieQian/app/src/main/res/drawable-xhdpi/province_select.png: libpng warning: iCCP: Not recognizing known sRGB profile that has been edited</p>
</blockquote>
<p>buildtools 23.0.2  warning: iCCP: Not recognizing known sRGB profile that has been edited</p>
<p>21.1.1 no warning   iCCP: Not recognizing known sRGB profile that has been edited</p>
<p>not a png file :check png file </p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
            <category> IDE </category>
            
        </categories>
        
        
        <tags>
            
            <tag> debug </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Meterial design for developer]]></title>
      <url>http://mzeht.com/2016/02/14/Meterial-design-for-developer/</url>
      <content type="html"><![CDATA[<p>#入门指南<br>如果要使用材料设计创建应用：</p>
<ol>
<li>请查阅材料<a href="http://www.google.com/design/spec/material-design/introduction.html" target="_blank" rel="noopener">设计规范</a>。<ul>
<li>在您的应用中使用材料主题。</li>
<li>遵循材料设计指导方针创建您的布局。</li>
<li>指定您视图要投射阴影的高度。</li>
<li>使用系统小组件呈现列表与卡片。</li>
<li>定制您的应用中的动画。</li>
</ul>
</li>
</ol>
<p>保持后向兼容性</p>
<p>您可将多个材料设计功能添加至您的应用，同时保持与 Android 5.0 之前的 Android 版本的兼容性。 如果要了解更多信息，请参阅 保持兼容性。</p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Meterial design </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[User Gradle sample]]></title>
      <url>http://mzeht.com/2016/02/10/User-Gradle-sample/</url>
      <content type="html"><![CDATA[<p>#Example 4.1. Executing multiple tasks<br>build.gradle</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">task</span> <span class="keyword">compile</span> &lt;&lt; &#123;</span><br><span class="line">    <span class="keyword">println</span> <span class="string">'compiling source'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> compileTest(dependsOn: <span class="keyword">compile</span>) &lt;&lt; &#123;</span><br><span class="line">    <span class="keyword">println</span> <span class="string">'compiling unit tests'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> test(dependsOn: [<span class="keyword">compile</span>, compileTest]) &lt;&lt; &#123;</span><br><span class="line">    <span class="keyword">println</span> <span class="string">'running unit tests'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> dist(dependsOn: [<span class="keyword">compile</span>, test]) &lt;&lt; &#123;</span><br><span class="line">    <span class="keyword">println</span> <span class="string">'building the distribution'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Output of gradle dist test</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle <span class="keyword">dist </span>test</span><br><span class="line">:compile</span><br><span class="line">compiling source</span><br><span class="line">:compileTest</span><br><span class="line">compiling unit tests</span><br><span class="line">:test</span><br><span class="line">running unit tests</span><br><span class="line">:<span class="keyword">dist</span></span><br><span class="line"><span class="keyword">building </span>the <span class="keyword">distribution</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">BUILD </span>SUCCESSFUL</span><br><span class="line"></span><br><span class="line">Total time: <span class="number">1</span> secs</span><br></pre></td></tr></table></figure>
<p>#Example 4.2. Excluding tasks<br>Output of gradle dist -x test</p>
<p>你能通过使用-x 命令来排除某些任务的执行，我们来使用之前的脚本来演示</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle <span class="keyword">dist </span>-x test</span><br><span class="line">:compile</span><br><span class="line">compiling source</span><br><span class="line">:<span class="keyword">dist</span></span><br><span class="line"><span class="keyword">building </span>the <span class="keyword">distribution</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">BUILD </span>SUCCESSFUL</span><br><span class="line"></span><br><span class="line">Total time: <span class="number">1</span> secs</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Gradle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gradle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle.4 Using the Gradle Command-Line]]></title>
      <url>http://mzeht.com/2016/02/10/Gradle-4-Using-the-Gradle-Command-Line/</url>
      <content type="html"><![CDATA[<p>#4.通过命令行使用gradle<br>这张将介绍使用gradle命令行的基础知识，就像你在前几章看到的那样</p>
<p>##4.1 执行多重任务<br>你能使用命令通过一个脚本来执行多个任务，例如这个命令<code>gradle compile test</code>,他会执行compite和test两个任务，gradle会按照命令行中的任务顺序来有序执行，也会运行其依赖项目，每个任务仅仅只执行一次，无论它在脚本中如何被引用，是直接指定还是作为其他任务的依赖，或者两者都是，让我们来看一个例子.</p>
<p>以下四个任务，<code>dist</code>和<code>test</code>都依赖于<code>complie</code>，执行<code>gradle dist test</code>，结果<code>complie</code>任务只会运行一次.</p>
<p>图4.1 task依赖图<br><img src="http://7xqtsx.com1.z0.glb.clouddn.com/commandLineTutorialTasks.png" alt><br><code>官方演示图错了，test不是指向complie，而是complie指向test</code></p>
<p>例4.1 执行多任务脚本</p>
<p>build.gradle</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">task</span> <span class="keyword">compile</span> &lt;&lt; &#123;</span><br><span class="line">    <span class="keyword">println</span> <span class="string">'compiling source'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> compileTest(dependsOn: <span class="keyword">compile</span>) &lt;&lt; &#123;</span><br><span class="line">    <span class="keyword">println</span> <span class="string">'compiling unit tests'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> test(dependsOn: [<span class="keyword">compile</span>, compileTest]) &lt;&lt; &#123;</span><br><span class="line">    <span class="keyword">println</span> <span class="string">'running unit tests'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">task</span> dist(dependsOn: [<span class="keyword">compile</span>, test]) &lt;&lt; &#123;</span><br><span class="line">    <span class="keyword">println</span> <span class="string">'building the distribution'</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>gradle dist test的输出</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle <span class="keyword">dist </span>test</span><br><span class="line">:compile</span><br><span class="line">compiling source</span><br><span class="line">:compileTest</span><br><span class="line">compiling unit tests</span><br><span class="line">:test</span><br><span class="line">running unit tests</span><br><span class="line">:<span class="keyword">dist</span></span><br><span class="line"><span class="keyword">building </span>the <span class="keyword">distribution</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">BUILD </span>SUCCESSFUL</span><br><span class="line"></span><br><span class="line">Total time: <span class="number">1</span> secs</span><br></pre></td></tr></table></figure>
<p>每个任务只执行了一次，所以gradle test test 和 gradle test 的结果是一样的</p>
<p>这是本人测试的，第一次速度明显很慢<br>参考<a href="https://docs.gradle.org/2.11/userguide/gradle_daemon.html" target="_blank" rel="noopener">https://docs.gradle.org/2.11/userguide/gradle_daemon.html</a></p>
<p>windows:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(<span class="keyword">if</span> not exist <span class="string">"%USERPROFILE%/.gradle"</span> mkdir <span class="string">"%USERPROFILE%/.gradle"</span>) &amp;&amp; (<span class="built_in">echo</span> org.gradle.daemon=<span class="literal">true</span> &gt;&gt; <span class="string">"%USERPROFILE%/.gradle/gradle.properties"</span>)</span><br></pre></td></tr></table></figure>
<p>UNIX:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt;touch ~<span class="regexp">/.gradle/gradle</span>.properties &amp;&amp; echo <span class="string">"org.gradle.daemon=true"</span> <span class="meta">&gt;&gt; </span>~<span class="regexp">/.gradle/gradle</span>.properties</span><br></pre></td></tr></table></figure>
<figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">➜  Desktop  gradle dist test</span><br><span class="line"><span class="symbol">:compile</span></span><br><span class="line">compiling source</span><br><span class="line"><span class="symbol">:compileTest</span></span><br><span class="line">compiling unit tests</span><br><span class="line"><span class="symbol">:test</span></span><br><span class="line">running unit tests</span><br><span class="line"><span class="symbol">:dist</span></span><br><span class="line">building the distribution</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL</span><br><span class="line"></span><br><span class="line">Total <span class="symbol">time:</span> <span class="number">4.446</span> secs</span><br><span class="line"></span><br><span class="line">This build could be faster, please consider using the Gradle <span class="symbol">Daemon:</span> <span class="symbol">https:</span>/<span class="regexp">/docs.gradle.org/</span><span class="number">2.8</span>/userguide/gradle_daemon.html</span><br><span class="line">➜  Desktop  gradle dist test</span><br><span class="line"><span class="symbol">:compile</span></span><br><span class="line">compiling source</span><br><span class="line"><span class="symbol">:compileTest</span></span><br><span class="line">compiling unit tests</span><br><span class="line"><span class="symbol">:test</span></span><br><span class="line">running unit tests</span><br><span class="line"><span class="symbol">:dist</span></span><br><span class="line">building the distribution</span><br><span class="line"></span><br><span class="line">BUILD SUCCESSFUL</span><br><span class="line"></span><br><span class="line">Total <span class="symbol">time:</span> <span class="number">1.768</span> secs</span><br></pre></td></tr></table></figure>
<p>##4.2执行任务<br>你能通过使用-x 命令来排除某些任务的执行，我们来使用之前的脚本来演示</p>
<p>例4.2 执行任务<br>gradle dist -x test的输出</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle <span class="keyword">dist </span>-x test</span><br><span class="line">:compile</span><br><span class="line">compiling source</span><br><span class="line">:<span class="keyword">dist</span></span><br><span class="line"><span class="keyword">building </span>the <span class="keyword">distribution</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">BUILD </span>SUCCESSFUL</span><br><span class="line"></span><br><span class="line">Total time: <span class="number">1</span> secs</span><br></pre></td></tr></table></figure>
<p><img src="http://7xqtsx.com1.z0.glb.clouddn.com/commandLineTutorialTasks.png" alt></p>
<p><code>官方演示图错了，test不是指向complie，而是complie指向test</code></p>
<p>从这个示例的输出,可以看到test任务没有执行,即使这是一个dist的依赖任务。你还会注意到依赖于test的任务中,compileTest没有执行。但是test依赖的另一个任务,如complie,仍会被执行。</p>
<p>##4.3如何在构建失败的时候继续构建</p>
<p>默认情况下，gradle将会在任何任务失败时中止执行。这使得构建更快地完成，但隐藏了其他错误。为了在一个单一的构建尽可能多的发现可能失败的任务，你可以使用–continue选项。</p>
<p>当–continue执行，gradle将执行每项任务，而不是只要遇到第一个故障就停止。遇到的每一个故障将在构建结束时报告。</p>
<p>如果一个任务失败，依赖于它的任何后续任务将不会被执行，因为这样做是不安全的。例如，如果complie的代码发生错误，test就不会被执行，因为test任务依赖于complie任务（直接或间接地） 。</p>
<p>##4.4 任务名缩写<br>当你命令行指定任务时，不需要提供全名，只要能足够辨认出该任务，在上面同样的脚本中，我们会通过执行<code>gradle -d</code>来执行dist任务</p>
<p>Example 4.3. Abbreviated task name</p>
<p>Output of gradle di</p>
<figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle <span class="keyword">di</span></span><br><span class="line"><span class="keyword">:compile</span></span><br><span class="line"><span class="keyword">compiling </span>source</span><br><span class="line">:compileTest</span><br><span class="line">compiling unit tests</span><br><span class="line">:test</span><br><span class="line">running unit tests</span><br><span class="line">:<span class="keyword">dist</span></span><br><span class="line"><span class="keyword">building </span>the <span class="keyword">distribution</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">BUILD </span>SUCCESSFUL</span><br><span class="line"></span><br><span class="line">Total time: <span class="number">1</span> secs</span><br></pre></td></tr></table></figure>
<p>你也可以缩写驼峰命名的每个词，例如，可以通过<code>gradle compTest</code>甚至<code>gradle cT</code>来执行 compileTest 任务</p>
<p>Example 4.4. Abbreviated camel case task name<br>Output of gradle cT</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; <span class="selector-tag">gradle</span> <span class="selector-tag">cT</span></span><br><span class="line"><span class="selector-pseudo">:compile</span></span><br><span class="line"><span class="selector-tag">compiling</span> <span class="selector-tag">source</span></span><br><span class="line"><span class="selector-pseudo">:compileTest</span></span><br><span class="line"><span class="selector-tag">compiling</span> <span class="selector-tag">unit</span> <span class="selector-tag">tests</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">BUILD</span> <span class="selector-tag">SUCCESSFUL</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">Total</span> <span class="selector-tag">time</span>: 1 <span class="selector-tag">secs</span></span><br></pre></td></tr></table></figure>
<p>在使用缩写的同时也可以使用 －x 命令</p>
<p>##4.5选择执行的脚本</p>
<p>当运行gradle命令时，会从当前路径查找脚本文件，你也可以使用 －b 命令来选择其他文件，如果使用－b命令，setting.gradle 文件就不会被使用，例如：</p>
<p>Example 4.5. Selecting the project using a build file</p>
<p>subdir/myproject.gradle</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">task</span> hello &lt;&lt; &#123;</span><br><span class="line">    <span class="attribute">println</span> <span class="string">"using build file '<span class="variable">$buildFile</span>.name' in '<span class="variable">$buildFile</span>.parentFile.name'."</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>Output of gradle -q -b subdir/myproject.gradle hello</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -<span class="selector-tag">q</span> -<span class="selector-tag">b</span> subdir/myproject<span class="selector-class">.gradle</span> hello</span><br><span class="line">using build file <span class="string">'myproject.gradle'</span> <span class="keyword">in</span> <span class="string">'subdir'</span>.</span><br></pre></td></tr></table></figure>
<p>或者，你可以使用 －p 命令来指定文件路径，多个工程中，你应该使用－p命令 而不是 －b 命令</p>
<p>Example 4.6. Selecting the project using project directory</p>
<p>Output of gradle -q -p subdir hello</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; gradle -<span class="selector-tag">q</span> -<span class="selector-tag">p</span> subdir hello</span><br><span class="line">using build file <span class="string">'build.gradle'</span> <span class="keyword">in</span> <span class="string">'subdir'</span>.</span><br></pre></td></tr></table></figure>
<p>##4.6获得构建信息</p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Gradle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gradle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Gradle User Guide]]></title>
      <url>http://mzeht.com/2016/02/06/Gradle-User-Guide/</url>
      <content type="html"><![CDATA[<p>参考资料：gradle 2.11 官方文档<a href="https://docs.gradle.org/current/userguide/userguide.html" target="_blank" rel="noopener">https://docs.gradle.org/current/userguide/userguide.html</a></p>
<p>Gradle User Guide<br>Version 2.10</p>
<p>Copyright © 2007-2015 Hans Dockter, Adam Murdoch<br>Copies of this document may be made for your own use and for distribution to others, provided that you do not charge any fee for such copies and further provided that each copy contains this Copyright Notice, whether distributed in print or electronically.</p>
<p>#第一章：关于gradle</p>
<p>##1.介绍<br>很高兴能向大家介绍 Gradle, 这是一个构建系统, 我们认为它是 java ( JVM ) 世界中构建技术的一个飞跃.<br>Gradle 提供了:</p>
<ul>
<li>一个像 Ant 一样的非常灵活的通用构建工具</li>
<li>一种可切换的, 像 maven 一样的基于合约构建的框架</li>
<li>支持强大的多工程构建</li>
<li>支持强大的依赖管理(基于 ApacheIvy )</li>
<li>很好的支持你已有的 maven 和 ivy 仓库</li>
<li>支持传递性依赖管理, 而不需要远程仓库或者 pom.xml 或者 ivy 配置文件</li>
<li>优先支持 Ant 式的任务和构建</li>
<li>基于 <code>groovy</code> 的构建脚本</li>
<li>有丰富的领域模型来描述你的构建</li>
</ul>
<h3 id="1-1-关于用户指南"><a href="#1-1-关于用户指南" class="headerlink" title="1.1. 关于用户指南"></a>1.1. 关于用户指南</h3><p>这份用户指南，就像Gradle自身一样，还在积极的发展之中，Gradle的一些功能没有被完全展示出来，现在的一些内容也不是很清晰，如果你更加了解Gradle，我们需要你的帮助来完善Gradle文档，你可以在<a href="http://www.gradle.org/contribute" target="_blank" rel="noopener">Gradle Web Site</a>了解如何为文档贡献力量</p>
<p>通过这本指南, 你将会看到一些代表 Gradle 任务之间依赖关系的图表. 类似于 UML 依赖关系<br>的表示方法, 从一个任务 A 指向另一个任务 B 的箭头代表A依赖于B.</p>
<h2 id="2-概述"><a href="#2-概述" class="headerlink" title="2.概述"></a>2.概述</h2><h3 id="2-1-特点"><a href="#2-1-特点" class="headerlink" title="2.1. 特点"></a>2.1. 特点</h3><ol>
<li><p><code>声明式构建和合约构建</code><br>Gradle 的核心是基于 Groovy 的 领域特定语言 (DSL), 具有十分优秀的扩展性. Gradle 通过提<br>供可以随意集成的声明式语言元素将声明性构建推到了一个新的高度. 这些元素也为 Java,<br>Groovy, OSGi, Web 和Scala 等项目提供基于合约构建的支持. 而且, 这种声明式语言是可扩展<br>的. 你可以添加自己的语言元素或加强现有的语言元素, 从而提供简洁, 易于维护和易于理解的<br>构建.</p>
</li>
<li><p><code>基于依赖的编程语言</code>声明式语言位于通用任务图 ( general purpose task graph ) 的顶端，它可以被充分利用在你<br>的构建中. 它具有强大的灵活性, 可以满足使用者对 Gradle 的一些特别的需求.</p>
</li>
<li><code>让构建结构化</code><br>Gradle 的易适应性和丰富性可让你在构建里直接套用通用的设计原则. 例如, 你可以非常容易<br>地使用一些可重用的组件来构成你的构建. 但是不必要的间接内联内容是不合适的. 不要强行<br>拆分已经结合在一起的部分 (例如, 在你的项目层次结构中). 避免使构建难以维护. 总之, 你可<br>以创建一个结构良好，易于维护和易于理解的构建.</li>
<li><code>API深化</code><br>你会非常乐意在整个构建执行的生命周期中使用 Gradle, 因为Gradle 允许你管理和定制它的<br>配置和执行行为.</li>
<li><code>Gradle 扩展</code><br>Gradle 扩展得非常好. 不管是简单的独立项目还是大型的多项目构建, 它都能显著的提高效率.<br>这是真正的结构构建. 顶尖水平的构建功能，还可以解决许多大公司碰到的构建 性能低下的问<br>题.</li>
<li><code>多项目构建</code><br>Gradle 对多项目的支持是非常出色的. 项目依赖是很重要的部分. 它允许你模拟在多项目构建<br>中项目的关系，这正是你所要关注的地方. Gradle 遵从你的布局, 反过来就不是.<br>Gradle 提供了局部构建的功能. 如果你构建一个单独的子项目, Gradle 会构建这个子项目依赖<br>的所有子项目. 你也可以选择依赖于另一个特别的子项目重新构建这些子项目. 这样在一些大<br>型项目里就可以节省非常多的时间.</li>
<li><code>多种方式来管理你的依赖</code><br>不同的团队有不同的管理外部依赖的方法. Gradle 对于任何管理策略都提供了合适的支持. 从<br>远程 Maven 和 Ivy 库的依赖管理到本地文件系统的 jars 或者 dirs.</li>
<li><code>Gradle 是第一个构建整合工具</code><br>Ant 的 tasks是 Gradle 中很重要的部分, 更有趣是 Ant 的 projects 也是十分重要的部分.<br>Gradle 可以直接引入Ant 项目, 并在运行时直接将 Ant targets 转换成 Gradle tasks. 你可以从<br>Gradle 中依赖它们, 并增强它们的功能, 甚至可以在 build.xml 文件中声明 Gradle tasks 的依<br>赖. 并且properties, paths 等也可以通过同样的方法集成进来.<br>Gradle 完全支持你已有的 Maven 或者 lvy 仓库来构造发布或者提取依赖. Gradle 也提供了一<br>个转化器, 用来将 maven 的 pom.xml 文件转换成 Gradle 脚本. 在运行时引入 Maven 项目也<br>会在稍后推出.</li>
<li><code>易于迁移</code><br>Gradle 可以兼容任何结构. 因此你可以直接在你的产品构建的分支上开发你的 Gradle 构建,<br>并且二者可以并行. 我们通常建议编写一些测试代码来确保它们的功能是相同的. 通过这种方<br>式, 在迁移的时候就不会显得那么混乱和不可靠, 这是通过婴儿学步的方式来获得最佳的实践.</li>
<li><code>Groovy</code><br>Gradle 的构建脚本是通过 Groovy 编写的而不是 XML. 但是并不像其他方式, 这并不是为了简<br>单的展示用动态语言编写的原始脚本有多么强大. 不然的话, 只会导致维护构建变得非常困难.<br>Gradle 的整个设计是朝着一种语言的方向开发的, 并不是一种死板的框架. Groovy 就像胶水一<br>样, 把你像实现的构想和抽象的 Gradle 粘在一起. Gradle提供了一些标准的构想, 但是他们并<br>不享有任何形式的特权. 相比于其他声明式构建系统，对我们来说这是一个比较突出的特点.</li>
<li><code>Gradle 包装器</code><br>Gradle 包装器允许你在没有安装 Gradle 的机器上运行 Gradle 构建. 在一些持续集成的服务<br>器上, 这个功能将非常有用. 它同样也能降低使用一个开源项目的门槛, 也就是说构建它将会非<br>常简单. 这个包装器对于公司来说也是很有吸引力的. 它并不需要为客户机提供相应的管理防<br>范. 这种方式同样也能强制某一个版本 Gradle 的使用从而最小化某些支持问题.</li>
<li><code>免费和开源</code><br>Gradle 是一个开源项目, 遵循 ASL 许可.</li>
</ol>
<h3 id="2-2-为什么选择Groovy"><a href="#2-2-为什么选择Groovy" class="headerlink" title="2.2. 为什么选择Groovy"></a>2.2. 为什么选择Groovy</h3><p>我们认为在构建脚本时，使用内部DSL［DSL：Domain Specific Languages,特定领域语言］(基于动态语言)，和XML相比，有很大优势，DSL有很多，为什么选择了Gradle？答案就在Gradle的使用背景中，虽然Gradle是通用的核心构建工具，但是主要运用在java项目上，在这些项目中，团队成员非常熟悉java，我们认为构建应该对团队全体成员尽量清晰明了</p>
<p>在这种情况下，你可能争论为什么不直接用java作为脚本构建语言，这的确是个合理的疑问，对于你的团队来说，java拥有最好的清晰度和最低的学习成本，但是由于java语言的限制，java作为脚本构建语言，并不是那么强大和出色[^hello].像Python，Groovy和Ruby这些语言表现更好，我们选择了Groovy，他最适合java开发人员，他的基本语法，类系统，包结构和其他一些特征，都和java相同，在和java的共同基础上，Groovy能做的更多.</p>
<p>对于熟悉Ruby,Python或者有志于学习它们的java开发者，以上依据都不成立了，Gradle的设计同时也适合用Ruby，Python来设计脚本构建引擎，只是现在不是我们的当务之急，我们乐于支持任何团体来开发更多的脚本构建引擎.</p>
<p>[^hello]: 在 <a href="http://www.defmacro.org/ramblings/lisp.html" target="_blank" rel="noopener">http://www.defmacro.org/ramblings/lisp.html</a> 你可以看到一篇比较Ant，XML，Java和Lisp的有趣文章， 如果java的语法和Groovy的语法一样的话，那将非常有趣</p>
<p>#使用现有的构建</p>
<p>##3.安装Gradle</p>
<p>###3.1前提<br>Gradle 需要安装一个 Java JDK 或者 JRE. 而且 Java 版本必须至少是 6 以上. (to check, use java -version). Gradle 有自带 Groovy 库, 所以没必要安装 Groovy. 任何已经安装的 Groovy 会被 Gradle 忽略.</p>
<p>Gradle 使用任何已经存在在你的路径中的 JDK (可以通过 java -version 检查, 如果有就说明系统已经安装了 Java 环境). 或者, 你也可以设置 JAVA_HOME 环境参数来指定希望使用的JDK的安装目录.</p>
<p>###3.2 下载<br>You can download one of the Gradle distributions from the <a href="http://www.gradle.org/downloads" target="_blank" rel="noopener">Gradle web site</a>.</p>
<p>###3.3 解压<br>The Gradle distribution comes packaged as a ZIP. The full distribution contains:</p>
<ul>
<li>The Gradle binaries.</li>
<li>The user guide (HTML and PDF).</li>
<li>The DSL reference guide.</li>
<li>The API documentation (Javadoc and Groovydoc).</li>
<li>Extensive samples, including the examples referenced in the user guide, along with some complete and more complex builds you can use as a starting point for your own build.</li>
<li>The binary sources. This is for reference only. If you want to build Gradle you need to download the source distribution or checkout the sources from the source repository. See the<a href="http://gradle.org/development/" target="_blank" rel="noopener">Gradle web site</a> for details.</li>
</ul>
<p>###3.4 环境变量<br>For running Gradle, add GRADLE_HOME/bin to your PATH environment variable. Usually, this is sufficient to run Gradle.</p>
<p>###3.5 运行和测试安装<br>ou run Gradle via the gradle command. To check if Gradle is properly installed just type gradle -v. The output shows the Gradle version and also the local environment configuration (Groovy, JVM version, OS, etc.). The displayed Gradle version should match the distribution you have downloaded.</p>
<p>###3.6 JVM 设置<br>JVM 选项可以通过设置环境变量来更改. 您可以使用 GRADLE_OPTS 或者 JAVA_OPTS.<br>JAVA_OPTS 是一个用于 JAVA 应用的环境变量. 一个典型的用例是在 JAVA_OPTS 里设置HTTP代理服务器(proxy),<br>GRADLE_OPTS 是内存选项. 这些变量可以在 gradle 的一开始就设置或者通过 gradlew 脚本来设置.</p>
<p>注意，目前Gradle不能通过命令行设置jvm.</p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Gradle </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Gradle </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Studio 2.0 Preview 9]]></title>
      <url>http://mzeht.com/2016/02/02/Android-Studio-2-0-Preview-9/</url>
      <content type="html"><![CDATA[<p>一不注意android studio preview 2.0 又要升级了，升级到preview2.0 9版本</p>
<p>下载地址<a href="http://tools.android.com/download/studio/builds/2-0-preview-9" target="_blank" rel="noopener">http://tools.android.com/download/studio/builds/2-0-preview-9</a><br>这里有最新的版本更新消息<br>之前的preview 2.0 的确有不可忽视的bug</p>
<a id="more"></a>
<blockquote>
<p>We’ve just pushed Android Studio 2.0 Preview 9 to the canary channel – along with 2.0.0-alpha9 of the Gradle plugin to jcenter (and as part of the bundled offline repository within the IDE).</p>
</blockquote>
<blockquote>
<p>In this release, we’ve completely turned off in-memory dexing by default. We’ve spent the last couple of previews trying to fine-tune it, but there are lingering issues which continues to affect users. This should hopefully make the builds work a lot better for many of you. (If things were already working well, you can continue with in-memory dexing by turning it on with android.dexOptions.dexInProcess=true.)</p>
</blockquote>
<p> <strong>We’ve also continued to fix various Instant Run scenarios; in particular, using APK splits on API 23 seems to trigger some platform bugs, so for now we’ve switched over to using multidex for coldswap for both Lollipop and Marshmallow.</strong></p>
<p>没错，果然是bug，就是打包出问题,个人经历为生成的apk fragment资源管理混乱，主题资源编译出错，同样的打包方式，viewpage切换一个出错一个正常，过渡动画一个默认，一个自定义，导致我用回了1.5稳定版，不知道这个版本彻底解决没，从preview 9 开始 默认使用gradle2.10版本</p>
<p>gradle的android构建插件为<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">classpath</span> <span class="string">'com.android.tools.build:gradle:2.0.0-alpha6'</span></span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
            <category> IDE </category>
            
        </categories>
        
        
        <tags>
            
            <tag> AndroidStudio </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[NavigationView+TabLayout+Viewpage]]></title>
      <url>http://mzeht.com/2016/02/01/NavigationView-TabLayout-Viewpage/</url>
      <content type="html"><![CDATA[<p>##NavigationView配合TabLayout+Viewpage<br>fragment实现多页面切换，适合搭建框架.</p>
<a id="more"></a>
<p>Demo地址<a href="https://github.com/mzeht/ZhiHuiYun" target="_blank" rel="noopener">https://github.com/mzeht/ZhiHuiYun</a></p>
]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Matertal Design </tag>
            
            <tag> NavigationView </tag>
            
            <tag> TabLyout </tag>
            
            <tag> ViewPage </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SwipeRefreshLayoutBasic]]></title>
      <url>http://mzeht.com/2016/01/30/SwipeRefreshLayoutBasic/</url>
      <content type="html"><![CDATA[<h1 id="SwipeRefreshLayout配合Recyclerview实现下拉刷新列表"><a href="#SwipeRefreshLayout配合Recyclerview实现下拉刷新列表" class="headerlink" title="SwipeRefreshLayout配合Recyclerview实现下拉刷新列表"></a>SwipeRefreshLayout配合Recyclerview实现下拉刷新列表</h1><p><img src="https://github.com/mzeht/SwipeRefreshListDemo/blob/master/app/src/main/res/acess/sample.gif" alt="image"></p>
<p><img src="https://github.com/mzeht/SwipeRefreshListDemo/blob/master/app/src/main/res/acess/click.gif" alt="image"></p>
<p>SwipeRefreshLayout是google官方的刷新控件<br>Recyclerview则是未来取代listview，girdview等的新控件</p>
<p>.IDE android studio 1.5(2.o preview之前apk打包有bug，暂时不用了)</p>
<p>.Demo地址 <a href="https://github.com/mzeht/SwipeRefreshListDemo" target="_blank" rel="noopener">https://github.com/mzeht/SwipeRefreshListDemo</a> </p>
<a id="more"></a>
<p>##.MainActivity<br>activity_main.xml</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;android.support.design.widget.CoordinatorLayout
xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;
xmlns:tools=&quot;http://schemas.android.com/tools&quot;
android:layout_width=&quot;match_parent&quot;
android:layout_height=&quot;match_parent&quot;
android:fitsSystemWindows=&quot;true&quot;
tools:context=&quot;com.example.mzeht.swiperefreshlistdemo.MainActivity&quot;&gt;

&lt;android.support.design.widget.AppBarLayout
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:theme=&quot;@style/AppTheme.AppBarOverlay&quot;&gt;

    &lt;android.support.v7.widget.Toolbar
        android:id=&quot;@+id/toolbar&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;?attr/actionBarSize&quot;
        android:background=&quot;?attr/colorPrimary&quot;
        app:popupTheme=&quot;@style/AppTheme.PopupOverlay&quot;/&gt;

&lt;/android.support.design.widget.AppBarLayout&gt;

&lt;include layout=&quot;@layout/content_main&quot;/&gt;

&lt;android.support.design.widget.FloatingActionButton
    android:id=&quot;@+id/fab&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:layout_gravity=&quot;bottom|end&quot;
    android:layout_margin=&quot;@dimen/fab_margin&quot;
    android:src=&quot;@android:drawable/ic_dialog_email&quot;/&gt;

&lt;/android.support.design.widget.CoordinatorLayout&gt;
</code></pre><p>##.在其中的content_main.xml<br>SwipeRefreshLayout 嵌套一个子元素 （如有多个，可用FrameLayout封装成一个）</p>
<pre><code>    &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;RelativeLayout
        xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    xmlns:app=&quot;http://schemas.android.com/apk/res-    auto&quot;
    xmlns:tools=&quot;http://schemas.android.com/tools&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;
    app:layout_behavior=&quot;@string/    appbar_scrolling_view_behavior&quot;
    tools:context=&quot;com.example.mzeht.swiperefreshlistdemo.MainActivity&quot;
    tools:showIn=&quot;@layout/activity_main&quot;&gt;

&lt;android.support.v4.widget.SwipeRefreshLayout
    android:id=&quot;@+id/swiperefresh&quot;
    android:layout_width=&quot;match_parent&quot;
    android:layout_height=&quot;match_parent&quot;&gt;
    &lt;android.support.v7.widget.RecyclerView
        android:id=&quot;@+id/recycler&quot;
        android:layout_width=&quot;match_parent&quot;
        android:layout_height=&quot;match_parent&quot;&gt;
    &lt;/android.support.v7.widget.RecyclerView&gt;
&lt;/android.support.v4.widget.SwipeRefreshLayout&gt;
&lt;/RelativeLayout&gt;
</code></pre><p>##.RecyclerView的Item<br>*同经典的listviewItem，只是adapter略有区别</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
          xmlns:tools=&quot;http://schemas.android.com/tools&quot;
          android:orientation=&quot;horizontal&quot;
          android:layout_width=&quot;match_parent&quot;
          android:layout_height=&quot;match_parent&quot;
android:id=&quot;@+id/ll&quot;&gt;

&lt;ImageView
    android:id=&quot;@+id/image&quot;
    android:src=&quot;@mipmap/ic_launcher&quot;
    android:padding=&quot;5dp&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:layout_height=&quot;wrap_content&quot;
    android:focusable=&quot;false&quot;
    /&gt;
&lt;TextView
    android:id=&quot;@+id/tv&quot;
    android:layout_width=&quot;wrap_content&quot;
    android:textSize=&quot;18sp&quot;
    android:gravity=&quot;center&quot;
    android:layout_height=&quot;match_parent&quot;
    android:focusable=&quot;false&quot;
    tools:text=&quot;ss&quot;/&gt;

&lt;/LinearLayout&gt;
</code></pre><p>##.RecyclerView的分割线<br>*RecyclerView 默认没有分割线，需要自定义一个，希望以后有默认可选，这里定义一个</p>
<pre><code>public class MyItemDecoration extends RecyclerView.ItemDecoration {
private static final int[] ATTRS = {android.R.attr.listDivider};
private Drawable mDivider;
public MyItemDecoration(Context context)
{
    TypedArray array = context.obtainStyledAttributes(ATTRS);
    // 获取分隔条
    mDivider = array.getDrawable(0);
    array.recycle();
}
@Override
public void onDrawOver(Canvas c, RecyclerView parent, RecyclerView.State state)
{
    super.onDrawOver(c, parent, state);
    int count = parent.getChildCount();
    int left = parent.getPaddingLeft();
    int right = parent.getWidth()-parent.getPaddingRight();
    for(int i = 0; i &lt; count; i++)
    {
        View v = parent.getChildAt(i);
        RecyclerView.LayoutParams params = (RecyclerView.LayoutParams) v.getLayoutParams();
        int top = v.getBottom() + params.bottomMargin;
        int bottom = top + mDivider.getIntrinsicHeight();
        mDivider.setBounds(left,top,right,bottom);
        mDivider.draw(c);
    }
}

}
</code></pre><p>*MainActivity</p>
<pre><code>mRecyclerView= (RecyclerView) findViewById(R.id.recycler);
mRefreshlayout= (SwipeRefreshLayout) findViewById(R.id.swiperefresh);
mLinearLayoutManager = new LinearLayoutManager(this);
mAdapter = new MainRecyclerAdapter(DataSource.generateData(20),MainActivity.this);
mRecyclerView.setAdapter(mAdapter);

//每个item高度一致，可设置为true，提高性能
mRecyclerView.setHasFixedSize(true);
mRecyclerView.setLayoutManager(mLinearLayoutManager);
//分隔线
mRecyclerView.addItemDecoration(new MyItemDecoration(this));
mRefreshlayout.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {
    @Override
    public void onRefresh() {

        new UpdateTask().execute();

    }
});
</code></pre><p>   *开启异步任务模拟耗时操作</p>
<pre><code>   private class UpdateTask extends AsyncTask&lt;Void,Void,List&lt;String&gt;&gt;
{
    @Override
    protected List&lt;String&gt; doInBackground(Void... params)
    {
        try
        {
            Thread.sleep(2000);
        } catch (InterruptedException e)
        {
            e.printStackTrace();
        }
        List&lt;String&gt; strings = new ArrayList&lt;&gt;();
        strings.add(&quot;新数据1&quot;);
        strings.add(&quot;新数据2&quot;);
        strings.add(&quot;新数据3&quot;);
        strings.add(&quot;新数据4&quot;);
        return strings;
    }
    @Override
    protected void onPostExecute(List&lt;String&gt; strings)
    {
        mAdapter.addItems(strings);
        //通知刷新完毕
        mRefreshlayout.setRefreshing(false);
        //滚动到列首部---&gt;这是一个很方便的api，可以滑动到指定位置
        mRecyclerView.scrollToPosition(0);
    }
}
</code></pre><p>##RecylerView的Item点击事件监听，内部各个子控件的监听<br>    <em>在设计复杂listview 的时候，往往有Item点击事件和各个子控件的事件需要监听
    </em>但是RecylerView没有提供OnItemOnclick的方法，需要我们自己去写<br>    首先定义一个外部接口</p>
<pre><code>```java

public interface OnListClickListener {

    public void OnItemClick(View view,String data);


    public void OnItemTextClick(View view,String data);



    public void OnItemIconClick(View view ,String data);
}
</code></pre><p>*适配Adapter</p>
<p>public class MainRecyclerAdapter extends RecyclerView.Adapter&lt;MainRecyclerAdapter.ViewHolder&gt; {</p>
<pre><code>private List&lt;String&gt; datas = null;
private OnListClickListener mListener;

public MainRecyclerAdapter(List&lt;String&gt; datas,OnListClickListener l)
{
    this.datas = datas;
    this.mListener=l;
}
@Override
public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType)
{
    final View itemView = LayoutInflater.from(parent.getContext()).inflate(R.layout.recycler_item, parent, false);
//        itemView.setOnClickListener(new View.OnClickListener()
//        {
//            @Override
//            public void onClick(View v)
//            {
//                if(mListener != null)
//                {
//                    mListener.OnItemClick(v, (String) itemView.getTag());
//                }
//            }
//        });
    ViewHolder viewHolder= new ViewHolder(itemView);




    return viewHolder;
}
@Override
public void onBindViewHolder(final ViewHolder holder, final int position)
{
    String s = datas.get(position);
    holder.bindData(s);
    holder.itemView.setTag(s);
    holder.mContent.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            mListener.OnItemTextClick(holder.mContent, (String) holder.itemView.getTag());
        }
    });

    holder.mImageView.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            mListener.OnItemIconClick(holder.mImageView, (String) holder.itemView.getTag());
        }
    });

    holder.itemView.setOnClickListener(new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            mListener.OnItemClick(v, (String) holder.itemView.getTag());
        }
    });


}
@Override
public int getItemCount()
{
    return datas.size();
}
/**
 * 批量增加
 * */
public void addItems(List&lt;String&gt; items)
{
    if (items == null)
        return;
    this.datas.addAll(0, items);
    this.notifyItemRangeInserted(0, items.size());
}

static class ViewHolder extends RecyclerView.ViewHolder
{
    private TextView mContent;
    private ImageView mImageView;
    public ViewHolder(View itemView)
    {
        super(itemView);
        mContent = (TextView) itemView.findViewById(R.id.tv);
        mImageView= (ImageView) itemView.findViewById(R.id.image);
    }
    public void bindData(String s)
    {
        if (s != null)
            mContent.setText(s);
    }

}
}
</code></pre><p>*通过对Item的根试图的监听，实现Item点击监听，不用设置最外层布局id，可以看出，Recyclerview强制对listview进行复用，对子控件的个性化定制在bind操作中进行，接口事件传递到Activity层，可以通过TAG传递数据，解耦合，如：</p>
<pre><code> @Override
    public void OnItemClick(View view, String data) {
    Toast.makeText(MainActivity.this, &quot;来自Item的点击事件:&quot; + data, Toast.LENGTH_SHORT).show();

}

@Override
public void OnItemTextClick(View view, String data) {
    Toast.makeText(MainActivity.this, &quot;来自text的点击事件:&quot; + data, Toast.LENGTH_SHORT).show();

}

@Override
public void OnItemIconClick(View view, String data) {
    Toast.makeText(MainActivity.this, &quot;来自icon的点击事件:&quot; + data, Toast.LENGTH_SHORT).show();

}
</code></pre>]]></content>
      
        <categories>
            
            <category> 移动开发 </category>
            
            <category> Android </category>
            
        </categories>
        
        
        <tags>
            
            <tag> Android </tag>
            
            <tag> Matertal Design </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://mzeht.com/2015/06/02/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="530" height="86" src="http://music.163.com/outchain/player?type=2&id=247529&auto=0&height=66"></iframe>


]]></content>
      
        <categories>
            
            <category> 文档 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[markdown 语法]]></title>
      <url>http://mzeht.com/2015/03/10/2015-03-10-markdown/</url>
      <content type="html"><![CDATA[<h1 id="Cmd-Markdown-简明语法手册"><a href="#Cmd-Markdown-简明语法手册" class="headerlink" title="Cmd Markdown 简明语法手册"></a>Cmd Markdown 简明语法手册</h1><p>标签： Cmd-Markdown</p>
<hr>
<a id="more"></a>
<h3 id="1-斜体和粗体"><a href="#1-斜体和粗体" class="headerlink" title="1. 斜体和粗体"></a>1. 斜体和粗体</h3><p>使用 * 和 ** 表示斜体和粗体。</p>
<p>示例：</p>
<p>这是 <em>斜体</em>，这是 <strong>粗体</strong>。</p>
<h3 id="2-分级标题"><a href="#2-分级标题" class="headerlink" title="2. 分级标题"></a>2. 分级标题</h3><p>使用 === 表示一级标题，使用 — 表示二级标题。</p>
<p>示例：</p>
<figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">这是一个一级标题</span><br><span class="line">============================</span><br><span class="line"></span><br><span class="line">这是一个二级标题</span><br><span class="line">--------------------------------------------------</span><br><span class="line"></span><br><span class="line">### 这是一个三级标题</span><br></pre></td></tr></table></figure>
<p>你也可以选择在行首加井号表示不同级别的标题 (H1-H6)，例如：# H1, ## H2, ### H3，#### H4。</p>
<h3 id="3-外链接"><a href="#3-外链接" class="headerlink" title="3. 外链接"></a>3. 外链接</h3><p>使用 [描述](链接地址) 为文字增加外链接。</p>
<p>示例：</p>
<p>这是去往 <a href="http://ghosertblog.github.com" target="_blank" rel="noopener">本人博客</a> 的链接。</p>
<h3 id="4-无序列表"><a href="#4-无序列表" class="headerlink" title="4. 无序列表"></a>4. 无序列表</h3><p>使用 *，+，- 表示无序列表。</p>
<p>示例：</p>
<ul>
<li>无序列表项 一</li>
<li>无序列表项 二</li>
<li>无序列表项 三</li>
</ul>
<h3 id="5-有序列表"><a href="#5-有序列表" class="headerlink" title="5. 有序列表"></a>5. 有序列表</h3><p>使用数字和点表示有序列表。</p>
<p>示例：</p>
<ol>
<li>有序列表项 一</li>
<li>有序列表项 二</li>
<li>有序列表项 三</li>
</ol>
<h3 id="6-文字引用"><a href="#6-文字引用" class="headerlink" title="6. 文字引用"></a>6. 文字引用</h3><p>使用 &gt; 表示文字引用。</p>
<p>示例：</p>
<blockquote>
<p>野火烧不尽，春风吹又生。</p>
</blockquote>
<h3 id="7-行内代码块"><a href="#7-行内代码块" class="headerlink" title="7. 行内代码块"></a>7. 行内代码块</h3><p>使用 `代码` 表示行内代码块。</p>
<p>示例：</p>
<p>让我们聊聊 <code>html</code>。</p>
<h3 id="8-代码块"><a href="#8-代码块" class="headerlink" title="8.  代码块"></a>8.  代码块</h3><p>使用 四个缩进空格 表示代码块。</p>
<p>示例：</p>
<pre><code>这是一个代码块，此行左侧有四个不可见的空格。
</code></pre><h3 id="9-插入图像"><a href="#9-插入图像" class="headerlink" title="9.  插入图像"></a>9.  插入图像</h3><p>使用 ![描述](图片链接地址) 插入图像。</p>
<p>示例：</p>
<p><img src="https://www.zybuluo.com/static/img/my_head.jpg" alt="我的头像"></p>
<h1 id="Cmd-Markdown-高阶语法手册"><a href="#Cmd-Markdown-高阶语法手册" class="headerlink" title="Cmd Markdown 高阶语法手册"></a>Cmd Markdown 高阶语法手册</h1><h3 id="1-内容目录"><a href="#1-内容目录" class="headerlink" title="1. 内容目录"></a>1. 内容目录</h3><p>在段落中填写 <code>[TOC]</code> 以显示全文内容的目录结构。</p>
<p>[TOC]</p>
<h3 id="2-标签分类"><a href="#2-标签分类" class="headerlink" title="2. 标签分类"></a>2. 标签分类</h3><p>在编辑区任意行的列首位置输入以下代码给文稿标签：</p>
<p>标签： 数学 英语 Markdown</p>
<p>或者</p>
<p>Tags： 数学 英语 Markdown</p>
<h3 id="3-删除线"><a href="#3-删除线" class="headerlink" title="3. 删除线"></a>3. 删除线</h3><p>使用 ~~ 表示删除线。</p>
<p><del>这是一段错误的文本。</del></p>
<h3 id="4-注脚"><a href="#4-注脚" class="headerlink" title="4. 注脚"></a>4. 注脚</h3><p>使用 [^keyword] 表示注脚。</p>
<p>这是一个注脚[^footnote]的样例。</p>
<p>这是第二个注脚[^footnote2]的样例。</p>
<h3 id="5-LaTeX-公式"><a href="#5-LaTeX-公式" class="headerlink" title="5. LaTeX 公式"></a>5. LaTeX 公式</h3><p>$ 表示行内公式：</p>
<p>质能守恒方程可以用一个很简洁的方程式 $E=mc^2$ 来表达。</p>
<p>$$ 表示整行公式：</p>
<p>$$\sum_{i=1}^n a_i=0$$</p>
<p>$$f(x_1,x_x,\ldots,x_n) = x_1^2 + x_2^2 + \cdots + x_n^2 $$</p>
<p>$$\sum^{j-1}<em>{k=0}{\widehat{\gamma}</em>{kj} z_k}$$</p>
<p>访问 <a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">MathJax</a> 参考更多使用方法。</p>
<h3 id="6-加强的代码块"><a href="#6-加强的代码块" class="headerlink" title="6. 加强的代码块"></a>6. 加强的代码块</h3><p>支持四十一种编程语言的语法高亮的显示，行号显示。</p>
<p>非代码示例：</p>
<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-<span class="builtin-name">get</span> install vim-gnome</span><br></pre></td></tr></table></figure>
<p>Python 示例：</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@requires_authorization</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">somefunc</span><span class="params">(param1=<span class="string">''</span>, param2=<span class="number">0</span>)</span>:</span></span><br><span class="line">    <span class="string">'''A docstring'''</span></span><br><span class="line">    <span class="keyword">if</span> param1 &gt; param2: <span class="comment"># interesting</span></span><br><span class="line">        <span class="keyword">print</span> <span class="string">'Greater'</span></span><br><span class="line">    <span class="keyword">return</span> (param2 - param1 + <span class="number">1</span>) <span class="keyword">or</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SomeClass</span>:</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>message = <span class="string">'''interpreter</span></span><br><span class="line"><span class="string"><span class="meta">... </span>prompt'''</span></span><br></pre></td></tr></table></figure>
<p>JavaScript 示例：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* nth element in the fibonacci series.</span></span><br><span class="line"><span class="comment">* @param n &gt;= 0</span></span><br><span class="line"><span class="comment">* @return the nth element, &gt;= 0.</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fib</span>(<span class="params">n</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> a = <span class="number">1</span>, b = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">var</span> tmp;</span><br><span class="line">  <span class="keyword">while</span> (--n &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">    tmp = a;</span><br><span class="line">    a += b;</span><br><span class="line">    b = tmp;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(fib(<span class="number">10</span>));</span><br></pre></td></tr></table></figure>
<h3 id="7-流程图"><a href="#7-流程图" class="headerlink" title="7. 流程图"></a>7. 流程图</h3><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">st=&gt;start: Start:&gt;https://www.zybuluo.com</span><br><span class="line">io=&gt;inputoutput: verification</span><br><span class="line">op=&gt;operation: Your Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">sub=&gt;subroutine: Your Subroutine</span><br><span class="line">e=&gt;end</span><br><span class="line"></span><br><span class="line">st-&gt;io-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;sub-&gt;io</span><br></pre></td></tr></table></figure>
<h4 id="更多语法参考：流程图语法参考"><a href="#更多语法参考：流程图语法参考" class="headerlink" title="更多语法参考：流程图语法参考"></a>更多语法参考：<a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">流程图语法参考</a></h4><h3 id="8-序列图"><a href="#8-序列图" class="headerlink" title="8. 序列图"></a>8. 序列图</h3><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例 1"></a>示例 1</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;Bob: Hello Bob, how are you?</span><br><span class="line">Note right of Bob: Bob thinks</span><br><span class="line">Bob--&gt;Alice: I am good thanks!</span><br></pre></td></tr></table></figure>
<h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例 2"></a>示例 2</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Title: Here is a title</span><br><span class="line">A-&gt;B: Normal line</span><br><span class="line">B--&gt;C: Dashed line</span><br><span class="line">C-&gt;&gt;D: Open arrow</span><br><span class="line">D--&gt;&gt;A: Dashed open arrow</span><br></pre></td></tr></table></figure>
<h4 id="更多语法参考：序列图语法参考"><a href="#更多语法参考：序列图语法参考" class="headerlink" title="更多语法参考：序列图语法参考"></a>更多语法参考：<a href="http://bramp.github.io/js-sequence-diagrams/" target="_blank" rel="noopener">序列图语法参考</a></h4><h3 id="9-甘特图"><a href="#9-甘特图" class="headerlink" title="9. 甘特图"></a>9. 甘特图</h3><p>甘特图内在思想简单。基本是一条线条图，横轴表示时间，纵轴表示活动（项目），线条表示在整个期间上计划和实际的活动完成情况。它直观地表明任务计划在什么时候进行，及实际进展与计划要求的对比。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">title 项目开发流程</span><br><span class="line">section 项目确定</span><br><span class="line">    需求分析       :a1, 2016-06-22, 3d</span><br><span class="line">    可行性报告     :after a1, 5d</span><br><span class="line">    概念验证       : 5d</span><br><span class="line">section 项目实施</span><br><span class="line">    概要设计      :2016-07-05  , 5d</span><br><span class="line">    详细设计      :2016-07-08, 10d</span><br><span class="line">    编码          :2016-07-15, 10d</span><br><span class="line">    测试          :2016-07-22, 5d</span><br><span class="line">section 发布验收</span><br><span class="line">    发布: 2d</span><br><span class="line">    验收: 3d</span><br></pre></td></tr></table></figure>
<h4 id="更多语法参考：甘特图语法参考"><a href="#更多语法参考：甘特图语法参考" class="headerlink" title="更多语法参考：甘特图语法参考"></a>更多语法参考：<a href="https://knsv.github.io/mermaid/#gant-diagrams" target="_blank" rel="noopener">甘特图语法参考</a></h4><h3 id="10-Mermaid-流程图"><a href="#10-Mermaid-流程图" class="headerlink" title="10. Mermaid 流程图"></a>10. Mermaid 流程图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A[Hard edge] --&gt;|Link text| B(Round edge)</span><br><span class="line">B --&gt; C&#123;Decision&#125;</span><br><span class="line">C --&gt;|One| D[Result one]</span><br><span class="line">C --&gt;|Two| E[Result two]</span><br></pre></td></tr></table></figure>
<h4 id="更多语法参考：Mermaid-流程图语法参考"><a href="#更多语法参考：Mermaid-流程图语法参考" class="headerlink" title="更多语法参考：Mermaid 流程图语法参考"></a>更多语法参考：<a href="https://knsv.github.io/mermaid/#flowcharts-basic-syntax" target="_blank" rel="noopener">Mermaid 流程图语法参考</a></h4><h3 id="11-Mermaid-序列图"><a href="#11-Mermaid-序列图" class="headerlink" title="11. Mermaid 序列图"></a>11. Mermaid 序列图</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Alice-&gt;John: Hello John, how are you?</span><br><span class="line">loop every minute</span><br><span class="line">    John--&gt;Alice: Great!</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<h4 id="更多语法参考：Mermaid-序列图语法参考"><a href="#更多语法参考：Mermaid-序列图语法参考" class="headerlink" title="更多语法参考：Mermaid 序列图语法参考"></a>更多语法参考：<a href="https://knsv.github.io/mermaid/#sequence-diagrams" target="_blank" rel="noopener">Mermaid 序列图语法参考</a></h4><h3 id="12-表格支持"><a href="#12-表格支持" class="headerlink" title="12. 表格支持"></a>12. 表格支持</h3><table>
<thead>
<tr>
<th>项目</th>
<th style="text-align:right">价格</th>
<th style="text-align:center">数量</th>
</tr>
</thead>
<tbody>
<tr>
<td>计算机</td>
<td style="text-align:right">\$1600</td>
<td style="text-align:center">5</td>
</tr>
<tr>
<td>手机</td>
<td style="text-align:right">\$12</td>
<td style="text-align:center">12</td>
</tr>
<tr>
<td>管线</td>
<td style="text-align:right">\$1</td>
<td style="text-align:center">234</td>
</tr>
</tbody>
</table>
<h3 id="13-定义型列表"><a href="#13-定义型列表" class="headerlink" title="13. 定义型列表"></a>13. 定义型列表</h3><p>名词 1<br>:   定义 1（左侧有一个可见的冒号和四个不可见的空格）</p>
<p>代码块 2<br>:   这是代码块的定义（左侧有一个可见的冒号和四个不可见的空格）</p>
<pre><code>代码块（左侧有八个不可见的空格）
</code></pre><h3 id="14-Html-标签"><a href="#14-Html-标签" class="headerlink" title="14. Html 标签"></a>14. Html 标签</h3><p>本站支持在 Markdown 语法中嵌套 Html 标签，譬如，你可以用 Html 写一个纵跨两行的表格：</p>
<pre><code>&lt;table&gt;
    &lt;tr&gt;
        &lt;th rowspan=&quot;2&quot;&gt;值班人员&lt;/th&gt;
        &lt;th&gt;星期一&lt;/th&gt;
        &lt;th&gt;星期二&lt;/th&gt;
        &lt;th&gt;星期三&lt;/th&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;李强&lt;/td&gt;
        &lt;td&gt;张明&lt;/td&gt;
        &lt;td&gt;王平&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;
</code></pre><table><br>    <tr><br>        <th rowspan="2">值班人员</th><br>        <th>星期一</th>∏<br>        <th>星期二</th><br>        <th>星期三</th><br>    </tr><br>    <tr><br>        <td>李强</td><br>        <td>张明</td><br>        <td>王平</td><br>    </tr><br></table>

<h3 id="15-内嵌图标"><a href="#15-内嵌图标" class="headerlink" title="15. 内嵌图标"></a>15. 内嵌图标</h3><p>本站的图标系统对外开放，在文档中输入</p>
<pre><code>&lt;i class=&quot;icon-weibo&quot;&gt;&lt;/i&gt;
</code></pre><p>即显示微博的图标： <i class="icon-weibo icon-2x"></i></p>
<p>替换 上述 <code>i 标签</code> 内的 <code>icon-weibo</code> 以显示不同的图标，例如：</p>
<pre><code>&lt;i class=&quot;icon-renren&quot;&gt;&lt;/i&gt;
</code></pre><p>即显示人人的图标： <i class="icon-renren icon-2x"></i></p>
<p>更多的图标和玩法可以参看 <a href="http://fortawesome.github.io/Font-Awesome/3.2.1/icons/" target="_blank" rel="noopener">font-awesome</a> 官方网站。</p>
<h3 id="16-待办事宜-Todo-列表"><a href="#16-待办事宜-Todo-列表" class="headerlink" title="16. 待办事宜 Todo 列表"></a>16. 待办事宜 Todo 列表</h3><p>使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：</p>
<pre><code>- [ ] **Cmd Markdown 开发**
    - [ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率
    - [ ] 支持以 PDF 格式导出文稿
    - [x] 新增Todo列表功能 [语法参考](https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments)
    - [x] 改进 LaTex 功能
        - [x] 修复 LaTex 公式渲染问题
        - [x] 新增 LaTex 公式编号功能 [语法参考](http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers)
- [ ] **七月旅行准备**
    - [ ] 准备邮轮上需要携带的物品
    - [ ] 浏览日本免税店的物品
    - [x] 购买蓝宝石公主号七月一日的船票
</code></pre><p>对应显示如下待办事宜 Todo 列表：</p>
<ul>
<li>[ ] <strong>Cmd Markdown 开发</strong><ul>
<li>[ ] 改进 Cmd 渲染算法，使用局部渲染技术提高渲染效率</li>
<li>[ ] 支持以 PDF 格式导出文稿</li>
<li>[x] 新增Todo列表功能 <a href="https://github.com/blog/1375-task-lists-in-gfm-issues-pulls-comments" target="_blank" rel="noopener">语法参考</a></li>
<li>[x] 改进 LaTex 功能<ul>
<li>[x] 修复 LaTex 公式渲染问题</li>
<li>[x] 新增 LaTex 公式编号功能 <a href="http://docs.mathjax.org/en/latest/tex.html#tex-eq-numbers" target="_blank" rel="noopener">语法参考</a></li>
</ul>
</li>
</ul>
</li>
<li>[ ] <strong>七月旅行准备</strong><ul>
<li>[ ] 准备邮轮上需要携带的物品</li>
<li>[ ] 浏览日本免税店的物品</li>
<li>[x] 购买蓝宝石公主号七月一日的船票</li>
</ul>
</li>
</ul>
<p>[^footnote]: 这是一个 <em>注脚</em> 的 <strong>文本</strong>。</p>
<p>[^footnote2]: 这是另一个 <em>注脚</em> 的 <strong>文本</strong>。</p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
            <category> markdown </category>
            
        </categories>
        
        
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
        
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[categories]]></title>
      <url>http://mzeht.com/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[关于]]></title>
      <url>http://mzeht.com/about/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[help]]></title>
      <url>http://mzeht.com/help/index.html</url>
      <content type="html"><![CDATA[<p>暂时没有哦</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[读书]]></title>
      <url>http://mzeht.com/reading/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[rss]]></title>
      <url>http://mzeht.com/rss/index.html</url>
      <content type="html"><![CDATA[<p>暂时没有哦</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[search]]></title>
      <url>http://mzeht.com/serach/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>http://mzeht.com/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[video]]></title>
      <url>http://mzeht.com/video/index.html</url>
      <content type="html"><![CDATA[<p>暂时没有哦</p>
]]></content>
    </entry>
    
  
</search>
